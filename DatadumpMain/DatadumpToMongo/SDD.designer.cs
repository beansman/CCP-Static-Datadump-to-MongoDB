#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatadumpToMongo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="evedb")]
	public partial class SDDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertagtAgent(agtAgent instance);
    partial void UpdateagtAgent(agtAgent instance);
    partial void DeleteagtAgent(agtAgent instance);
    partial void InserttrnTranslation(trnTranslation instance);
    partial void UpdatetrnTranslation(trnTranslation instance);
    partial void DeletetrnTranslation(trnTranslation instance);
    partial void InsertagtAgentType(agtAgentType instance);
    partial void UpdateagtAgentType(agtAgentType instance);
    partial void DeleteagtAgentType(agtAgentType instance);
    partial void InsertagtConfig(agtConfig instance);
    partial void UpdateagtConfig(agtConfig instance);
    partial void DeleteagtConfig(agtConfig instance);
    partial void InsertagtResearchAgent(agtResearchAgent instance);
    partial void UpdateagtResearchAgent(agtResearchAgent instance);
    partial void DeleteagtResearchAgent(agtResearchAgent instance);
    partial void InsertchrAncestry(chrAncestry instance);
    partial void UpdatechrAncestry(chrAncestry instance);
    partial void DeletechrAncestry(chrAncestry instance);
    partial void InsertchrAttribute(chrAttribute instance);
    partial void UpdatechrAttribute(chrAttribute instance);
    partial void DeletechrAttribute(chrAttribute instance);
    partial void InsertchrBloodline(chrBloodline instance);
    partial void UpdatechrBloodline(chrBloodline instance);
    partial void DeletechrBloodline(chrBloodline instance);
    partial void InsertchrFaction(chrFaction instance);
    partial void UpdatechrFaction(chrFaction instance);
    partial void DeletechrFaction(chrFaction instance);
    partial void InsertchrRace(chrRace instance);
    partial void UpdatechrRace(chrRace instance);
    partial void DeletechrRace(chrRace instance);
    partial void InsertcrpActivity(crpActivity instance);
    partial void UpdatecrpActivity(crpActivity instance);
    partial void DeletecrpActivity(crpActivity instance);
    partial void InsertcrpNPCCorporationDivision(crpNPCCorporationDivision instance);
    partial void UpdatecrpNPCCorporationDivision(crpNPCCorporationDivision instance);
    partial void DeletecrpNPCCorporationDivision(crpNPCCorporationDivision instance);
    partial void InsertcrpNPCCorporationResearchField(crpNPCCorporationResearchField instance);
    partial void UpdatecrpNPCCorporationResearchField(crpNPCCorporationResearchField instance);
    partial void DeletecrpNPCCorporationResearchField(crpNPCCorporationResearchField instance);
    partial void InsertcrpNPCCorporation(crpNPCCorporation instance);
    partial void UpdatecrpNPCCorporation(crpNPCCorporation instance);
    partial void DeletecrpNPCCorporation(crpNPCCorporation instance);
    partial void InsertcrpNPCCorporationTrade(crpNPCCorporationTrade instance);
    partial void UpdatecrpNPCCorporationTrade(crpNPCCorporationTrade instance);
    partial void DeletecrpNPCCorporationTrade(crpNPCCorporationTrade instance);
    partial void InsertcrpNPCDivision(crpNPCDivision instance);
    partial void UpdatecrpNPCDivision(crpNPCDivision instance);
    partial void DeletecrpNPCDivision(crpNPCDivision instance);
    partial void InsertcrtCategory(crtCategory instance);
    partial void UpdatecrtCategory(crtCategory instance);
    partial void DeletecrtCategory(crtCategory instance);
    partial void InsertcrtCertificate(crtCertificate instance);
    partial void UpdatecrtCertificate(crtCertificate instance);
    partial void DeletecrtCertificate(crtCertificate instance);
    partial void InsertcrtClass(crtClass instance);
    partial void UpdatecrtClass(crtClass instance);
    partial void DeletecrtClass(crtClass instance);
    partial void InsertcrtRecommendation(crtRecommendation instance);
    partial void UpdatecrtRecommendation(crtRecommendation instance);
    partial void DeletecrtRecommendation(crtRecommendation instance);
    partial void InsertcrtRelationship(crtRelationship instance);
    partial void UpdatecrtRelationship(crtRelationship instance);
    partial void DeletecrtRelationship(crtRelationship instance);
    partial void InsertdgmAttributeCategory(dgmAttributeCategory instance);
    partial void UpdatedgmAttributeCategory(dgmAttributeCategory instance);
    partial void DeletedgmAttributeCategory(dgmAttributeCategory instance);
    partial void InsertdgmAttributeType(dgmAttributeType instance);
    partial void UpdatedgmAttributeType(dgmAttributeType instance);
    partial void DeletedgmAttributeType(dgmAttributeType instance);
    partial void InsertdgmEffect(dgmEffect instance);
    partial void UpdatedgmEffect(dgmEffect instance);
    partial void DeletedgmEffect(dgmEffect instance);
    partial void InsertdgmTypeAttribute(dgmTypeAttribute instance);
    partial void UpdatedgmTypeAttribute(dgmTypeAttribute instance);
    partial void DeletedgmTypeAttribute(dgmTypeAttribute instance);
    partial void InsertdgmTypeEffect(dgmTypeEffect instance);
    partial void UpdatedgmTypeEffect(dgmTypeEffect instance);
    partial void DeletedgmTypeEffect(dgmTypeEffect instance);
    partial void InserteveGraphic(eveGraphic instance);
    partial void UpdateeveGraphic(eveGraphic instance);
    partial void DeleteeveGraphic(eveGraphic instance);
    partial void InserteveIcon(eveIcon instance);
    partial void UpdateeveIcon(eveIcon instance);
    partial void DeleteeveIcon(eveIcon instance);
    partial void InserteveName(eveName instance);
    partial void UpdateeveName(eveName instance);
    partial void DeleteeveName(eveName instance);
    partial void InserteveUnit(eveUnit instance);
    partial void UpdateeveUnit(eveUnit instance);
    partial void DeleteeveUnit(eveUnit instance);
    partial void InsertinvBlueprintType(invBlueprintType instance);
    partial void UpdateinvBlueprintType(invBlueprintType instance);
    partial void DeleteinvBlueprintType(invBlueprintType instance);
    partial void InsertinvCategory(invCategory instance);
    partial void UpdateinvCategory(invCategory instance);
    partial void DeleteinvCategory(invCategory instance);
    partial void InsertinvContrabandType(invContrabandType instance);
    partial void UpdateinvContrabandType(invContrabandType instance);
    partial void DeleteinvContrabandType(invContrabandType instance);
    partial void InsertinvControlTowerResourcePurpose(invControlTowerResourcePurpose instance);
    partial void UpdateinvControlTowerResourcePurpose(invControlTowerResourcePurpose instance);
    partial void DeleteinvControlTowerResourcePurpose(invControlTowerResourcePurpose instance);
    partial void InsertinvControlTowerResource(invControlTowerResource instance);
    partial void UpdateinvControlTowerResource(invControlTowerResource instance);
    partial void DeleteinvControlTowerResource(invControlTowerResource instance);
    partial void InsertinvFlag(invFlag instance);
    partial void UpdateinvFlag(invFlag instance);
    partial void DeleteinvFlag(invFlag instance);
    partial void InsertinvGroup(invGroup instance);
    partial void UpdateinvGroup(invGroup instance);
    partial void DeleteinvGroup(invGroup instance);
    partial void InsertinvMarketGroup(invMarketGroup instance);
    partial void UpdateinvMarketGroup(invMarketGroup instance);
    partial void DeleteinvMarketGroup(invMarketGroup instance);
    partial void InsertinvMetaGroup(invMetaGroup instance);
    partial void UpdateinvMetaGroup(invMetaGroup instance);
    partial void DeleteinvMetaGroup(invMetaGroup instance);
    partial void InsertinvMetaType(invMetaType instance);
    partial void UpdateinvMetaType(invMetaType instance);
    partial void DeleteinvMetaType(invMetaType instance);
    partial void InsertinvTypeMaterial(invTypeMaterial instance);
    partial void UpdateinvTypeMaterial(invTypeMaterial instance);
    partial void DeleteinvTypeMaterial(invTypeMaterial instance);
    partial void InsertinvTypeReaction(invTypeReaction instance);
    partial void UpdateinvTypeReaction(invTypeReaction instance);
    partial void DeleteinvTypeReaction(invTypeReaction instance);
    partial void InsertinvType(invType instance);
    partial void UpdateinvType(invType instance);
    partial void DeleteinvType(invType instance);
    partial void InsertmapCelestialStatistic(mapCelestialStatistic instance);
    partial void UpdatemapCelestialStatistic(mapCelestialStatistic instance);
    partial void DeletemapCelestialStatistic(mapCelestialStatistic instance);
    partial void InsertmapConstellationJump(mapConstellationJump instance);
    partial void UpdatemapConstellationJump(mapConstellationJump instance);
    partial void DeletemapConstellationJump(mapConstellationJump instance);
    partial void InsertmapConstellation(mapConstellation instance);
    partial void UpdatemapConstellation(mapConstellation instance);
    partial void DeletemapConstellation(mapConstellation instance);
    partial void InsertmapDenormalize(mapDenormalize instance);
    partial void UpdatemapDenormalize(mapDenormalize instance);
    partial void DeletemapDenormalize(mapDenormalize instance);
    partial void InsertmapJump(mapJump instance);
    partial void UpdatemapJump(mapJump instance);
    partial void DeletemapJump(mapJump instance);
    partial void InsertmapLandmark(mapLandmark instance);
    partial void UpdatemapLandmark(mapLandmark instance);
    partial void DeletemapLandmark(mapLandmark instance);
    partial void InsertmapLocationScene(mapLocationScene instance);
    partial void UpdatemapLocationScene(mapLocationScene instance);
    partial void DeletemapLocationScene(mapLocationScene instance);
    partial void InsertmapLocationWormholeClass(mapLocationWormholeClass instance);
    partial void UpdatemapLocationWormholeClass(mapLocationWormholeClass instance);
    partial void DeletemapLocationWormholeClass(mapLocationWormholeClass instance);
    partial void InsertmapRegionJump(mapRegionJump instance);
    partial void UpdatemapRegionJump(mapRegionJump instance);
    partial void DeletemapRegionJump(mapRegionJump instance);
    partial void InsertmapRegion(mapRegion instance);
    partial void UpdatemapRegion(mapRegion instance);
    partial void DeletemapRegion(mapRegion instance);
    partial void InsertmapSolarSystemJump(mapSolarSystemJump instance);
    partial void UpdatemapSolarSystemJump(mapSolarSystemJump instance);
    partial void DeletemapSolarSystemJump(mapSolarSystemJump instance);
    partial void InsertmapSolarSystem(mapSolarSystem instance);
    partial void UpdatemapSolarSystem(mapSolarSystem instance);
    partial void DeletemapSolarSystem(mapSolarSystem instance);
    partial void InsertmapUniverse(mapUniverse instance);
    partial void UpdatemapUniverse(mapUniverse instance);
    partial void DeletemapUniverse(mapUniverse instance);
    partial void InsertplanetSchematic(planetSchematic instance);
    partial void UpdateplanetSchematic(planetSchematic instance);
    partial void DeleteplanetSchematic(planetSchematic instance);
    partial void InsertplanetSchematicsPinMap(planetSchematicsPinMap instance);
    partial void UpdateplanetSchematicsPinMap(planetSchematicsPinMap instance);
    partial void DeleteplanetSchematicsPinMap(planetSchematicsPinMap instance);
    partial void InsertplanetSchematicsTypeMap(planetSchematicsTypeMap instance);
    partial void UpdateplanetSchematicsTypeMap(planetSchematicsTypeMap instance);
    partial void DeleteplanetSchematicsTypeMap(planetSchematicsTypeMap instance);
    partial void InsertramActivity(ramActivity instance);
    partial void UpdateramActivity(ramActivity instance);
    partial void DeleteramActivity(ramActivity instance);
    partial void InsertramAssemblyLine(ramAssemblyLine instance);
    partial void UpdateramAssemblyLine(ramAssemblyLine instance);
    partial void DeleteramAssemblyLine(ramAssemblyLine instance);
    partial void InsertramAssemblyLineStation(ramAssemblyLineStation instance);
    partial void UpdateramAssemblyLineStation(ramAssemblyLineStation instance);
    partial void DeleteramAssemblyLineStation(ramAssemblyLineStation instance);
    partial void InsertramAssemblyLineTypeDetailPerCategory(ramAssemblyLineTypeDetailPerCategory instance);
    partial void UpdateramAssemblyLineTypeDetailPerCategory(ramAssemblyLineTypeDetailPerCategory instance);
    partial void DeleteramAssemblyLineTypeDetailPerCategory(ramAssemblyLineTypeDetailPerCategory instance);
    partial void InsertramAssemblyLineTypeDetailPerGroup(ramAssemblyLineTypeDetailPerGroup instance);
    partial void UpdateramAssemblyLineTypeDetailPerGroup(ramAssemblyLineTypeDetailPerGroup instance);
    partial void DeleteramAssemblyLineTypeDetailPerGroup(ramAssemblyLineTypeDetailPerGroup instance);
    partial void InsertramAssemblyLineType(ramAssemblyLineType instance);
    partial void UpdateramAssemblyLineType(ramAssemblyLineType instance);
    partial void DeleteramAssemblyLineType(ramAssemblyLineType instance);
    partial void InsertramInstallationTypeContent(ramInstallationTypeContent instance);
    partial void UpdateramInstallationTypeContent(ramInstallationTypeContent instance);
    partial void DeleteramInstallationTypeContent(ramInstallationTypeContent instance);
    partial void InsertramTypeRequirement(ramTypeRequirement instance);
    partial void UpdateramTypeRequirement(ramTypeRequirement instance);
    partial void DeleteramTypeRequirement(ramTypeRequirement instance);
    partial void InsertstaOperation(staOperation instance);
    partial void UpdatestaOperation(staOperation instance);
    partial void DeletestaOperation(staOperation instance);
    partial void InsertstaOperationService(staOperationService instance);
    partial void UpdatestaOperationService(staOperationService instance);
    partial void DeletestaOperationService(staOperationService instance);
    partial void InsertstaService(staService instance);
    partial void UpdatestaService(staService instance);
    partial void DeletestaService(staService instance);
    partial void InsertstaStation(staStation instance);
    partial void UpdatestaStation(staStation instance);
    partial void DeletestaStation(staStation instance);
    partial void InsertstaStationType(staStationType instance);
    partial void UpdatestaStationType(staStationType instance);
    partial void DeletestaStationType(staStationType instance);
    partial void InserttrnTranslationColumn(trnTranslationColumn instance);
    partial void UpdatetrnTranslationColumn(trnTranslationColumn instance);
    partial void DeletetrnTranslationColumn(trnTranslationColumn instance);
    #endregion
		
		public SDDDataContext() : 
				base(global::DatadumpToMongo.Properties.Settings.Default.evedbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SDDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<agtAgent> agtAgents
		{
			get
			{
				return this.GetTable<agtAgent>();
			}
		}
		
		public System.Data.Linq.Table<trnTranslation> trnTranslations
		{
			get
			{
				return this.GetTable<trnTranslation>();
			}
		}
		
		public System.Data.Linq.Table<agtAgentType> agtAgentTypes
		{
			get
			{
				return this.GetTable<agtAgentType>();
			}
		}
		
		public System.Data.Linq.Table<agtConfig> agtConfigs
		{
			get
			{
				return this.GetTable<agtConfig>();
			}
		}
		
		public System.Data.Linq.Table<agtResearchAgent> agtResearchAgents
		{
			get
			{
				return this.GetTable<agtResearchAgent>();
			}
		}
		
		public System.Data.Linq.Table<chrAncestry> chrAncestries
		{
			get
			{
				return this.GetTable<chrAncestry>();
			}
		}
		
		public System.Data.Linq.Table<chrAttribute> chrAttributes
		{
			get
			{
				return this.GetTable<chrAttribute>();
			}
		}
		
		public System.Data.Linq.Table<chrBloodline> chrBloodlines
		{
			get
			{
				return this.GetTable<chrBloodline>();
			}
		}
		
		public System.Data.Linq.Table<chrFaction> chrFactions
		{
			get
			{
				return this.GetTable<chrFaction>();
			}
		}
		
		public System.Data.Linq.Table<chrRace> chrRaces
		{
			get
			{
				return this.GetTable<chrRace>();
			}
		}
		
		public System.Data.Linq.Table<crpActivity> crpActivities
		{
			get
			{
				return this.GetTable<crpActivity>();
			}
		}
		
		public System.Data.Linq.Table<crpNPCCorporationDivision> crpNPCCorporationDivisions
		{
			get
			{
				return this.GetTable<crpNPCCorporationDivision>();
			}
		}
		
		public System.Data.Linq.Table<crpNPCCorporationResearchField> crpNPCCorporationResearchFields
		{
			get
			{
				return this.GetTable<crpNPCCorporationResearchField>();
			}
		}
		
		public System.Data.Linq.Table<crpNPCCorporation> crpNPCCorporations
		{
			get
			{
				return this.GetTable<crpNPCCorporation>();
			}
		}
		
		public System.Data.Linq.Table<crpNPCCorporationTrade> crpNPCCorporationTrades
		{
			get
			{
				return this.GetTable<crpNPCCorporationTrade>();
			}
		}
		
		public System.Data.Linq.Table<crpNPCDivision> crpNPCDivisions
		{
			get
			{
				return this.GetTable<crpNPCDivision>();
			}
		}
		
		public System.Data.Linq.Table<crtCategory> crtCategories
		{
			get
			{
				return this.GetTable<crtCategory>();
			}
		}
		
		public System.Data.Linq.Table<crtCertificate> crtCertificates
		{
			get
			{
				return this.GetTable<crtCertificate>();
			}
		}
		
		public System.Data.Linq.Table<crtClass> crtClasses
		{
			get
			{
				return this.GetTable<crtClass>();
			}
		}
		
		public System.Data.Linq.Table<crtRecommendation> crtRecommendations
		{
			get
			{
				return this.GetTable<crtRecommendation>();
			}
		}
		
		public System.Data.Linq.Table<crtRelationship> crtRelationships
		{
			get
			{
				return this.GetTable<crtRelationship>();
			}
		}
		
		public System.Data.Linq.Table<dgmAttributeCategory> dgmAttributeCategories
		{
			get
			{
				return this.GetTable<dgmAttributeCategory>();
			}
		}
		
		public System.Data.Linq.Table<dgmAttributeType> dgmAttributeTypes
		{
			get
			{
				return this.GetTable<dgmAttributeType>();
			}
		}
		
		public System.Data.Linq.Table<dgmEffect> dgmEffects
		{
			get
			{
				return this.GetTable<dgmEffect>();
			}
		}
		
		public System.Data.Linq.Table<dgmTypeAttribute> dgmTypeAttributes
		{
			get
			{
				return this.GetTable<dgmTypeAttribute>();
			}
		}
		
		public System.Data.Linq.Table<dgmTypeEffect> dgmTypeEffects
		{
			get
			{
				return this.GetTable<dgmTypeEffect>();
			}
		}
		
		public System.Data.Linq.Table<eveGraphic> eveGraphics
		{
			get
			{
				return this.GetTable<eveGraphic>();
			}
		}
		
		public System.Data.Linq.Table<eveIcon> eveIcons
		{
			get
			{
				return this.GetTable<eveIcon>();
			}
		}
		
		public System.Data.Linq.Table<eveName> eveNames
		{
			get
			{
				return this.GetTable<eveName>();
			}
		}
		
		public System.Data.Linq.Table<eveUnit> eveUnits
		{
			get
			{
				return this.GetTable<eveUnit>();
			}
		}
		
		public System.Data.Linq.Table<invBlueprintType> invBlueprintTypes
		{
			get
			{
				return this.GetTable<invBlueprintType>();
			}
		}
		
		public System.Data.Linq.Table<invCategory> invCategories
		{
			get
			{
				return this.GetTable<invCategory>();
			}
		}
		
		public System.Data.Linq.Table<invContrabandType> invContrabandTypes
		{
			get
			{
				return this.GetTable<invContrabandType>();
			}
		}
		
		public System.Data.Linq.Table<invControlTowerResourcePurpose> invControlTowerResourcePurposes
		{
			get
			{
				return this.GetTable<invControlTowerResourcePurpose>();
			}
		}
		
		public System.Data.Linq.Table<invControlTowerResource> invControlTowerResources
		{
			get
			{
				return this.GetTable<invControlTowerResource>();
			}
		}
		
		public System.Data.Linq.Table<invFlag> invFlags
		{
			get
			{
				return this.GetTable<invFlag>();
			}
		}
		
		public System.Data.Linq.Table<invGroup> invGroups
		{
			get
			{
				return this.GetTable<invGroup>();
			}
		}
		
		public System.Data.Linq.Table<invMarketGroup> invMarketGroups
		{
			get
			{
				return this.GetTable<invMarketGroup>();
			}
		}
		
		public System.Data.Linq.Table<invMetaGroup> invMetaGroups
		{
			get
			{
				return this.GetTable<invMetaGroup>();
			}
		}
		
		public System.Data.Linq.Table<invMetaType> invMetaTypes
		{
			get
			{
				return this.GetTable<invMetaType>();
			}
		}
		
		public System.Data.Linq.Table<invTypeMaterial> invTypeMaterials
		{
			get
			{
				return this.GetTable<invTypeMaterial>();
			}
		}
		
		public System.Data.Linq.Table<invTypeReaction> invTypeReactions
		{
			get
			{
				return this.GetTable<invTypeReaction>();
			}
		}
		
		public System.Data.Linq.Table<invType> invTypes
		{
			get
			{
				return this.GetTable<invType>();
			}
		}
		
		public System.Data.Linq.Table<mapCelestialStatistic> mapCelestialStatistics
		{
			get
			{
				return this.GetTable<mapCelestialStatistic>();
			}
		}
		
		public System.Data.Linq.Table<mapConstellationJump> mapConstellationJumps
		{
			get
			{
				return this.GetTable<mapConstellationJump>();
			}
		}
		
		public System.Data.Linq.Table<mapConstellation> mapConstellations
		{
			get
			{
				return this.GetTable<mapConstellation>();
			}
		}
		
		public System.Data.Linq.Table<mapDenormalize> mapDenormalizes
		{
			get
			{
				return this.GetTable<mapDenormalize>();
			}
		}
		
		public System.Data.Linq.Table<mapJump> mapJumps
		{
			get
			{
				return this.GetTable<mapJump>();
			}
		}
		
		public System.Data.Linq.Table<mapLandmark> mapLandmarks
		{
			get
			{
				return this.GetTable<mapLandmark>();
			}
		}
		
		public System.Data.Linq.Table<mapLocationScene> mapLocationScenes
		{
			get
			{
				return this.GetTable<mapLocationScene>();
			}
		}
		
		public System.Data.Linq.Table<mapLocationWormholeClass> mapLocationWormholeClasses
		{
			get
			{
				return this.GetTable<mapLocationWormholeClass>();
			}
		}
		
		public System.Data.Linq.Table<mapRegionJump> mapRegionJumps
		{
			get
			{
				return this.GetTable<mapRegionJump>();
			}
		}
		
		public System.Data.Linq.Table<mapRegion> mapRegions
		{
			get
			{
				return this.GetTable<mapRegion>();
			}
		}
		
		public System.Data.Linq.Table<mapSolarSystemJump> mapSolarSystemJumps
		{
			get
			{
				return this.GetTable<mapSolarSystemJump>();
			}
		}
		
		public System.Data.Linq.Table<mapSolarSystem> mapSolarSystems
		{
			get
			{
				return this.GetTable<mapSolarSystem>();
			}
		}
		
		public System.Data.Linq.Table<mapUniverse> mapUniverses
		{
			get
			{
				return this.GetTable<mapUniverse>();
			}
		}
		
		public System.Data.Linq.Table<planetSchematic> planetSchematics
		{
			get
			{
				return this.GetTable<planetSchematic>();
			}
		}
		
		public System.Data.Linq.Table<planetSchematicsPinMap> planetSchematicsPinMaps
		{
			get
			{
				return this.GetTable<planetSchematicsPinMap>();
			}
		}
		
		public System.Data.Linq.Table<planetSchematicsTypeMap> planetSchematicsTypeMaps
		{
			get
			{
				return this.GetTable<planetSchematicsTypeMap>();
			}
		}
		
		public System.Data.Linq.Table<ramActivity> ramActivities
		{
			get
			{
				return this.GetTable<ramActivity>();
			}
		}
		
		public System.Data.Linq.Table<ramAssemblyLine> ramAssemblyLines
		{
			get
			{
				return this.GetTable<ramAssemblyLine>();
			}
		}
		
		public System.Data.Linq.Table<ramAssemblyLineStation> ramAssemblyLineStations
		{
			get
			{
				return this.GetTable<ramAssemblyLineStation>();
			}
		}
		
		public System.Data.Linq.Table<ramAssemblyLineTypeDetailPerCategory> ramAssemblyLineTypeDetailPerCategories
		{
			get
			{
				return this.GetTable<ramAssemblyLineTypeDetailPerCategory>();
			}
		}
		
		public System.Data.Linq.Table<ramAssemblyLineTypeDetailPerGroup> ramAssemblyLineTypeDetailPerGroups
		{
			get
			{
				return this.GetTable<ramAssemblyLineTypeDetailPerGroup>();
			}
		}
		
		public System.Data.Linq.Table<ramAssemblyLineType> ramAssemblyLineTypes
		{
			get
			{
				return this.GetTable<ramAssemblyLineType>();
			}
		}
		
		public System.Data.Linq.Table<ramInstallationTypeContent> ramInstallationTypeContents
		{
			get
			{
				return this.GetTable<ramInstallationTypeContent>();
			}
		}
		
		public System.Data.Linq.Table<ramTypeRequirement> ramTypeRequirements
		{
			get
			{
				return this.GetTable<ramTypeRequirement>();
			}
		}
		
		public System.Data.Linq.Table<staOperation> staOperations
		{
			get
			{
				return this.GetTable<staOperation>();
			}
		}
		
		public System.Data.Linq.Table<staOperationService> staOperationServices
		{
			get
			{
				return this.GetTable<staOperationService>();
			}
		}
		
		public System.Data.Linq.Table<staService> staServices
		{
			get
			{
				return this.GetTable<staService>();
			}
		}
		
		public System.Data.Linq.Table<staStation> staStations
		{
			get
			{
				return this.GetTable<staStation>();
			}
		}
		
		public System.Data.Linq.Table<staStationType> staStationTypes
		{
			get
			{
				return this.GetTable<staStationType>();
			}
		}
		
		public System.Data.Linq.Table<trnTranslationColumn> trnTranslationColumns
		{
			get
			{
				return this.GetTable<trnTranslationColumn>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.agtAgents")]
	public partial class agtAgent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _agentID;
		
		private System.Nullable<byte> _divisionID;
		
		private System.Nullable<int> _corporationID;
		
		private System.Nullable<int> _locationID;
		
		private System.Nullable<byte> _level;
		
		private System.Nullable<short> _quality;
		
		private System.Nullable<int> _agentTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnagentIDChanging(int value);
    partial void OnagentIDChanged();
    partial void OndivisionIDChanging(System.Nullable<byte> value);
    partial void OndivisionIDChanged();
    partial void OncorporationIDChanging(System.Nullable<int> value);
    partial void OncorporationIDChanged();
    partial void OnlocationIDChanging(System.Nullable<int> value);
    partial void OnlocationIDChanged();
    partial void OnlevelChanging(System.Nullable<byte> value);
    partial void OnlevelChanged();
    partial void OnqualityChanging(System.Nullable<short> value);
    partial void OnqualityChanged();
    partial void OnagentTypeIDChanging(System.Nullable<int> value);
    partial void OnagentTypeIDChanged();
    #endregion
		
		public agtAgent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int agentID
		{
			get
			{
				return this._agentID;
			}
			set
			{
				if ((this._agentID != value))
				{
					this.OnagentIDChanging(value);
					this.SendPropertyChanging();
					this._agentID = value;
					this.SendPropertyChanged("agentID");
					this.OnagentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_divisionID", DbType="TinyInt")]
		public System.Nullable<byte> divisionID
		{
			get
			{
				return this._divisionID;
			}
			set
			{
				if ((this._divisionID != value))
				{
					this.OndivisionIDChanging(value);
					this.SendPropertyChanging();
					this._divisionID = value;
					this.SendPropertyChanged("divisionID");
					this.OndivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int")]
		public System.Nullable<int> corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", DbType="Int")]
		public System.Nullable<int> locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="TinyInt")]
		public System.Nullable<byte> level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quality", DbType="SmallInt")]
		public System.Nullable<short> quality
		{
			get
			{
				return this._quality;
			}
			set
			{
				if ((this._quality != value))
				{
					this.OnqualityChanging(value);
					this.SendPropertyChanging();
					this._quality = value;
					this.SendPropertyChanged("quality");
					this.OnqualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agentTypeID", DbType="Int")]
		public System.Nullable<int> agentTypeID
		{
			get
			{
				return this._agentTypeID;
			}
			set
			{
				if ((this._agentTypeID != value))
				{
					this.OnagentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._agentTypeID = value;
					this.SendPropertyChanged("agentTypeID");
					this.OnagentTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnTranslations")]
	public partial class trnTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _tcID;
		
		private int _keyID;
		
		private string _languageID;
		
		private string _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntcIDChanging(short value);
    partial void OntcIDChanged();
    partial void OnkeyIDChanging(int value);
    partial void OnkeyIDChanged();
    partial void OnlanguageIDChanging(string value);
    partial void OnlanguageIDChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    #endregion
		
		public trnTranslation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short tcID
		{
			get
			{
				return this._tcID;
			}
			set
			{
				if ((this._tcID != value))
				{
					this.OntcIDChanging(value);
					this.SendPropertyChanging();
					this._tcID = value;
					this.SendPropertyChanged("tcID");
					this.OntcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int keyID
		{
			get
			{
				return this._keyID;
			}
			set
			{
				if ((this._keyID != value))
				{
					this.OnkeyIDChanging(value);
					this.SendPropertyChanging();
					this._keyID = value;
					this.SendPropertyChanged("keyID");
					this.OnkeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageID", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string languageID
		{
			get
			{
				return this._languageID;
			}
			set
			{
				if ((this._languageID != value))
				{
					this.OnlanguageIDChanging(value);
					this.SendPropertyChanging();
					this._languageID = value;
					this.SendPropertyChanged("languageID");
					this.OnlanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.agtAgentTypes")]
	public partial class agtAgentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _agentTypeID;
		
		private string _agentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnagentTypeIDChanging(int value);
    partial void OnagentTypeIDChanged();
    partial void OnagentTypeChanging(string value);
    partial void OnagentTypeChanged();
    #endregion
		
		public agtAgentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agentTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int agentTypeID
		{
			get
			{
				return this._agentTypeID;
			}
			set
			{
				if ((this._agentTypeID != value))
				{
					this.OnagentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._agentTypeID = value;
					this.SendPropertyChanged("agentTypeID");
					this.OnagentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agentType", DbType="VarChar(50)")]
		public string agentType
		{
			get
			{
				return this._agentType;
			}
			set
			{
				if ((this._agentType != value))
				{
					this.OnagentTypeChanging(value);
					this.SendPropertyChanging();
					this._agentType = value;
					this.SendPropertyChanged("agentType");
					this.OnagentTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.agtConfig")]
	public partial class agtConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _agentID;
		
		private string _k;
		
		private string _v;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnagentIDChanging(int value);
    partial void OnagentIDChanged();
    partial void OnkChanging(string value);
    partial void OnkChanged();
    partial void OnvChanging(string value);
    partial void OnvChanged();
    #endregion
		
		public agtConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int agentID
		{
			get
			{
				return this._agentID;
			}
			set
			{
				if ((this._agentID != value))
				{
					this.OnagentIDChanging(value);
					this.SendPropertyChanging();
					this._agentID = value;
					this.SendPropertyChanged("agentID");
					this.OnagentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_k", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string k
		{
			get
			{
				return this._k;
			}
			set
			{
				if ((this._k != value))
				{
					this.OnkChanging(value);
					this.SendPropertyChanging();
					this._k = value;
					this.SendPropertyChanged("k");
					this.OnkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_v", DbType="VarChar(4000)")]
		public string v
		{
			get
			{
				return this._v;
			}
			set
			{
				if ((this._v != value))
				{
					this.OnvChanging(value);
					this.SendPropertyChanging();
					this._v = value;
					this.SendPropertyChanged("v");
					this.OnvChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.agtResearchAgents")]
	public partial class agtResearchAgent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _agentID;
		
		private int _typeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnagentIDChanging(int value);
    partial void OnagentIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    #endregion
		
		public agtResearchAgent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int agentID
		{
			get
			{
				return this._agentID;
			}
			set
			{
				if ((this._agentID != value))
				{
					this.OnagentIDChanging(value);
					this.SendPropertyChanging();
					this._agentID = value;
					this.SendPropertyChanged("agentID");
					this.OnagentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chrAncestries")]
	public partial class chrAncestry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ancestryID;
		
		private string _ancestryName;
		
		private System.Nullable<byte> _bloodlineID;
		
		private string _description;
		
		private System.Nullable<byte> _perception;
		
		private System.Nullable<byte> _willpower;
		
		private System.Nullable<byte> _charisma;
		
		private System.Nullable<byte> _memory;
		
		private System.Nullable<byte> _intelligence;
		
		private System.Nullable<int> _iconID;
		
		private string _shortDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnancestryIDChanging(byte value);
    partial void OnancestryIDChanged();
    partial void OnancestryNameChanging(string value);
    partial void OnancestryNameChanged();
    partial void OnbloodlineIDChanging(System.Nullable<byte> value);
    partial void OnbloodlineIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnperceptionChanging(System.Nullable<byte> value);
    partial void OnperceptionChanged();
    partial void OnwillpowerChanging(System.Nullable<byte> value);
    partial void OnwillpowerChanged();
    partial void OncharismaChanging(System.Nullable<byte> value);
    partial void OncharismaChanged();
    partial void OnmemoryChanging(System.Nullable<byte> value);
    partial void OnmemoryChanged();
    partial void OnintelligenceChanging(System.Nullable<byte> value);
    partial void OnintelligenceChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnshortDescriptionChanging(string value);
    partial void OnshortDescriptionChanged();
    #endregion
		
		public chrAncestry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ancestryID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ancestryID
		{
			get
			{
				return this._ancestryID;
			}
			set
			{
				if ((this._ancestryID != value))
				{
					this.OnancestryIDChanging(value);
					this.SendPropertyChanging();
					this._ancestryID = value;
					this.SendPropertyChanged("ancestryID");
					this.OnancestryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ancestryName", DbType="NVarChar(100)")]
		public string ancestryName
		{
			get
			{
				return this._ancestryName;
			}
			set
			{
				if ((this._ancestryName != value))
				{
					this.OnancestryNameChanging(value);
					this.SendPropertyChanging();
					this._ancestryName = value;
					this.SendPropertyChanged("ancestryName");
					this.OnancestryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodlineID", DbType="TinyInt")]
		public System.Nullable<byte> bloodlineID
		{
			get
			{
				return this._bloodlineID;
			}
			set
			{
				if ((this._bloodlineID != value))
				{
					this.OnbloodlineIDChanging(value);
					this.SendPropertyChanging();
					this._bloodlineID = value;
					this.SendPropertyChanged("bloodlineID");
					this.OnbloodlineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_perception", DbType="TinyInt")]
		public System.Nullable<byte> perception
		{
			get
			{
				return this._perception;
			}
			set
			{
				if ((this._perception != value))
				{
					this.OnperceptionChanging(value);
					this.SendPropertyChanging();
					this._perception = value;
					this.SendPropertyChanged("perception");
					this.OnperceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_willpower", DbType="TinyInt")]
		public System.Nullable<byte> willpower
		{
			get
			{
				return this._willpower;
			}
			set
			{
				if ((this._willpower != value))
				{
					this.OnwillpowerChanging(value);
					this.SendPropertyChanging();
					this._willpower = value;
					this.SendPropertyChanged("willpower");
					this.OnwillpowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charisma", DbType="TinyInt")]
		public System.Nullable<byte> charisma
		{
			get
			{
				return this._charisma;
			}
			set
			{
				if ((this._charisma != value))
				{
					this.OncharismaChanging(value);
					this.SendPropertyChanging();
					this._charisma = value;
					this.SendPropertyChanged("charisma");
					this.OncharismaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memory", DbType="TinyInt")]
		public System.Nullable<byte> memory
		{
			get
			{
				return this._memory;
			}
			set
			{
				if ((this._memory != value))
				{
					this.OnmemoryChanging(value);
					this.SendPropertyChanging();
					this._memory = value;
					this.SendPropertyChanged("memory");
					this.OnmemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intelligence", DbType="TinyInt")]
		public System.Nullable<byte> intelligence
		{
			get
			{
				return this._intelligence;
			}
			set
			{
				if ((this._intelligence != value))
				{
					this.OnintelligenceChanging(value);
					this.SendPropertyChanging();
					this._intelligence = value;
					this.SendPropertyChanged("intelligence");
					this.OnintelligenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDescription", DbType="NVarChar(500)")]
		public string shortDescription
		{
			get
			{
				return this._shortDescription;
			}
			set
			{
				if ((this._shortDescription != value))
				{
					this.OnshortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortDescription = value;
					this.SendPropertyChanged("shortDescription");
					this.OnshortDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chrAttributes")]
	public partial class chrAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _attributeID;
		
		private string _attributeName;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
		private string _shortDescription;
		
		private string _notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnattributeIDChanging(byte value);
    partial void OnattributeIDChanged();
    partial void OnattributeNameChanging(string value);
    partial void OnattributeNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnshortDescriptionChanging(string value);
    partial void OnshortDescriptionChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public chrAttribute()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte attributeID
		{
			get
			{
				return this._attributeID;
			}
			set
			{
				if ((this._attributeID != value))
				{
					this.OnattributeIDChanging(value);
					this.SendPropertyChanging();
					this._attributeID = value;
					this.SendPropertyChanged("attributeID");
					this.OnattributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeName", DbType="VarChar(100)")]
		public string attributeName
		{
			get
			{
				return this._attributeName;
			}
			set
			{
				if ((this._attributeName != value))
				{
					this.OnattributeNameChanging(value);
					this.SendPropertyChanging();
					this._attributeName = value;
					this.SendPropertyChanged("attributeName");
					this.OnattributeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDescription", DbType="NVarChar(500)")]
		public string shortDescription
		{
			get
			{
				return this._shortDescription;
			}
			set
			{
				if ((this._shortDescription != value))
				{
					this.OnshortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortDescription = value;
					this.SendPropertyChanged("shortDescription");
					this.OnshortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(500)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chrBloodlines")]
	public partial class chrBloodline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _bloodlineID;
		
		private string _bloodlineName;
		
		private System.Nullable<byte> _raceID;
		
		private string _description;
		
		private string _maleDescription;
		
		private string _femaleDescription;
		
		private System.Nullable<int> _shipTypeID;
		
		private System.Nullable<int> _corporationID;
		
		private System.Nullable<byte> _perception;
		
		private System.Nullable<byte> _willpower;
		
		private System.Nullable<byte> _charisma;
		
		private System.Nullable<byte> _memory;
		
		private System.Nullable<byte> _intelligence;
		
		private System.Nullable<int> _iconID;
		
		private string _shortDescription;
		
		private string _shortMaleDescription;
		
		private string _shortFemaleDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbloodlineIDChanging(byte value);
    partial void OnbloodlineIDChanged();
    partial void OnbloodlineNameChanging(string value);
    partial void OnbloodlineNameChanged();
    partial void OnraceIDChanging(System.Nullable<byte> value);
    partial void OnraceIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnmaleDescriptionChanging(string value);
    partial void OnmaleDescriptionChanged();
    partial void OnfemaleDescriptionChanging(string value);
    partial void OnfemaleDescriptionChanged();
    partial void OnshipTypeIDChanging(System.Nullable<int> value);
    partial void OnshipTypeIDChanged();
    partial void OncorporationIDChanging(System.Nullable<int> value);
    partial void OncorporationIDChanged();
    partial void OnperceptionChanging(System.Nullable<byte> value);
    partial void OnperceptionChanged();
    partial void OnwillpowerChanging(System.Nullable<byte> value);
    partial void OnwillpowerChanged();
    partial void OncharismaChanging(System.Nullable<byte> value);
    partial void OncharismaChanged();
    partial void OnmemoryChanging(System.Nullable<byte> value);
    partial void OnmemoryChanged();
    partial void OnintelligenceChanging(System.Nullable<byte> value);
    partial void OnintelligenceChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnshortDescriptionChanging(string value);
    partial void OnshortDescriptionChanged();
    partial void OnshortMaleDescriptionChanging(string value);
    partial void OnshortMaleDescriptionChanged();
    partial void OnshortFemaleDescriptionChanging(string value);
    partial void OnshortFemaleDescriptionChanged();
    #endregion
		
		public chrBloodline()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodlineID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte bloodlineID
		{
			get
			{
				return this._bloodlineID;
			}
			set
			{
				if ((this._bloodlineID != value))
				{
					this.OnbloodlineIDChanging(value);
					this.SendPropertyChanging();
					this._bloodlineID = value;
					this.SendPropertyChanged("bloodlineID");
					this.OnbloodlineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodlineName", DbType="NVarChar(100)")]
		public string bloodlineName
		{
			get
			{
				return this._bloodlineName;
			}
			set
			{
				if ((this._bloodlineName != value))
				{
					this.OnbloodlineNameChanging(value);
					this.SendPropertyChanging();
					this._bloodlineName = value;
					this.SendPropertyChanged("bloodlineName");
					this.OnbloodlineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raceID", DbType="TinyInt")]
		public System.Nullable<byte> raceID
		{
			get
			{
				return this._raceID;
			}
			set
			{
				if ((this._raceID != value))
				{
					this.OnraceIDChanging(value);
					this.SendPropertyChanging();
					this._raceID = value;
					this.SendPropertyChanged("raceID");
					this.OnraceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maleDescription", DbType="NVarChar(1000)")]
		public string maleDescription
		{
			get
			{
				return this._maleDescription;
			}
			set
			{
				if ((this._maleDescription != value))
				{
					this.OnmaleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._maleDescription = value;
					this.SendPropertyChanged("maleDescription");
					this.OnmaleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_femaleDescription", DbType="NVarChar(1000)")]
		public string femaleDescription
		{
			get
			{
				return this._femaleDescription;
			}
			set
			{
				if ((this._femaleDescription != value))
				{
					this.OnfemaleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._femaleDescription = value;
					this.SendPropertyChanged("femaleDescription");
					this.OnfemaleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipTypeID", DbType="Int")]
		public System.Nullable<int> shipTypeID
		{
			get
			{
				return this._shipTypeID;
			}
			set
			{
				if ((this._shipTypeID != value))
				{
					this.OnshipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._shipTypeID = value;
					this.SendPropertyChanged("shipTypeID");
					this.OnshipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int")]
		public System.Nullable<int> corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_perception", DbType="TinyInt")]
		public System.Nullable<byte> perception
		{
			get
			{
				return this._perception;
			}
			set
			{
				if ((this._perception != value))
				{
					this.OnperceptionChanging(value);
					this.SendPropertyChanging();
					this._perception = value;
					this.SendPropertyChanged("perception");
					this.OnperceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_willpower", DbType="TinyInt")]
		public System.Nullable<byte> willpower
		{
			get
			{
				return this._willpower;
			}
			set
			{
				if ((this._willpower != value))
				{
					this.OnwillpowerChanging(value);
					this.SendPropertyChanging();
					this._willpower = value;
					this.SendPropertyChanged("willpower");
					this.OnwillpowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charisma", DbType="TinyInt")]
		public System.Nullable<byte> charisma
		{
			get
			{
				return this._charisma;
			}
			set
			{
				if ((this._charisma != value))
				{
					this.OncharismaChanging(value);
					this.SendPropertyChanging();
					this._charisma = value;
					this.SendPropertyChanged("charisma");
					this.OncharismaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memory", DbType="TinyInt")]
		public System.Nullable<byte> memory
		{
			get
			{
				return this._memory;
			}
			set
			{
				if ((this._memory != value))
				{
					this.OnmemoryChanging(value);
					this.SendPropertyChanging();
					this._memory = value;
					this.SendPropertyChanged("memory");
					this.OnmemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intelligence", DbType="TinyInt")]
		public System.Nullable<byte> intelligence
		{
			get
			{
				return this._intelligence;
			}
			set
			{
				if ((this._intelligence != value))
				{
					this.OnintelligenceChanging(value);
					this.SendPropertyChanging();
					this._intelligence = value;
					this.SendPropertyChanged("intelligence");
					this.OnintelligenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDescription", DbType="NVarChar(500)")]
		public string shortDescription
		{
			get
			{
				return this._shortDescription;
			}
			set
			{
				if ((this._shortDescription != value))
				{
					this.OnshortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortDescription = value;
					this.SendPropertyChanged("shortDescription");
					this.OnshortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortMaleDescription", DbType="NVarChar(500)")]
		public string shortMaleDescription
		{
			get
			{
				return this._shortMaleDescription;
			}
			set
			{
				if ((this._shortMaleDescription != value))
				{
					this.OnshortMaleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortMaleDescription = value;
					this.SendPropertyChanged("shortMaleDescription");
					this.OnshortMaleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortFemaleDescription", DbType="NVarChar(500)")]
		public string shortFemaleDescription
		{
			get
			{
				return this._shortFemaleDescription;
			}
			set
			{
				if ((this._shortFemaleDescription != value))
				{
					this.OnshortFemaleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortFemaleDescription = value;
					this.SendPropertyChanged("shortFemaleDescription");
					this.OnshortFemaleDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chrFactions")]
	public partial class chrFaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _factionID;
		
		private string _factionName;
		
		private string _description;
		
		private System.Nullable<int> _raceIDs;
		
		private System.Nullable<int> _solarSystemID;
		
		private System.Nullable<int> _corporationID;
		
		private System.Nullable<double> _sizeFactor;
		
		private System.Nullable<short> _stationCount;
		
		private System.Nullable<short> _stationSystemCount;
		
		private System.Nullable<int> _militiaCorporationID;
		
		private System.Nullable<int> _iconID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfactionIDChanging(int value);
    partial void OnfactionIDChanged();
    partial void OnfactionNameChanging(string value);
    partial void OnfactionNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnraceIDsChanging(System.Nullable<int> value);
    partial void OnraceIDsChanged();
    partial void OnsolarSystemIDChanging(System.Nullable<int> value);
    partial void OnsolarSystemIDChanged();
    partial void OncorporationIDChanging(System.Nullable<int> value);
    partial void OncorporationIDChanged();
    partial void OnsizeFactorChanging(System.Nullable<double> value);
    partial void OnsizeFactorChanged();
    partial void OnstationCountChanging(System.Nullable<short> value);
    partial void OnstationCountChanged();
    partial void OnstationSystemCountChanging(System.Nullable<short> value);
    partial void OnstationSystemCountChanged();
    partial void OnmilitiaCorporationIDChanging(System.Nullable<int> value);
    partial void OnmilitiaCorporationIDChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    #endregion
		
		public chrFaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionName", DbType="VarChar(100)")]
		public string factionName
		{
			get
			{
				return this._factionName;
			}
			set
			{
				if ((this._factionName != value))
				{
					this.OnfactionNameChanging(value);
					this.SendPropertyChanging();
					this._factionName = value;
					this.SendPropertyChanged("factionName");
					this.OnfactionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raceIDs", DbType="Int")]
		public System.Nullable<int> raceIDs
		{
			get
			{
				return this._raceIDs;
			}
			set
			{
				if ((this._raceIDs != value))
				{
					this.OnraceIDsChanging(value);
					this.SendPropertyChanging();
					this._raceIDs = value;
					this.SendPropertyChanged("raceIDs");
					this.OnraceIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="Int")]
		public System.Nullable<int> solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int")]
		public System.Nullable<int> corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeFactor", DbType="Float")]
		public System.Nullable<double> sizeFactor
		{
			get
			{
				return this._sizeFactor;
			}
			set
			{
				if ((this._sizeFactor != value))
				{
					this.OnsizeFactorChanging(value);
					this.SendPropertyChanging();
					this._sizeFactor = value;
					this.SendPropertyChanged("sizeFactor");
					this.OnsizeFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationCount", DbType="SmallInt")]
		public System.Nullable<short> stationCount
		{
			get
			{
				return this._stationCount;
			}
			set
			{
				if ((this._stationCount != value))
				{
					this.OnstationCountChanging(value);
					this.SendPropertyChanging();
					this._stationCount = value;
					this.SendPropertyChanged("stationCount");
					this.OnstationCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationSystemCount", DbType="SmallInt")]
		public System.Nullable<short> stationSystemCount
		{
			get
			{
				return this._stationSystemCount;
			}
			set
			{
				if ((this._stationSystemCount != value))
				{
					this.OnstationSystemCountChanging(value);
					this.SendPropertyChanging();
					this._stationSystemCount = value;
					this.SendPropertyChanged("stationSystemCount");
					this.OnstationSystemCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_militiaCorporationID", DbType="Int")]
		public System.Nullable<int> militiaCorporationID
		{
			get
			{
				return this._militiaCorporationID;
			}
			set
			{
				if ((this._militiaCorporationID != value))
				{
					this.OnmilitiaCorporationIDChanging(value);
					this.SendPropertyChanging();
					this._militiaCorporationID = value;
					this.SendPropertyChanged("militiaCorporationID");
					this.OnmilitiaCorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chrRaces")]
	public partial class chrRace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _raceID;
		
		private string _raceName;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
		private string _shortDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnraceIDChanging(byte value);
    partial void OnraceIDChanged();
    partial void OnraceNameChanging(string value);
    partial void OnraceNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnshortDescriptionChanging(string value);
    partial void OnshortDescriptionChanged();
    #endregion
		
		public chrRace()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raceID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte raceID
		{
			get
			{
				return this._raceID;
			}
			set
			{
				if ((this._raceID != value))
				{
					this.OnraceIDChanging(value);
					this.SendPropertyChanging();
					this._raceID = value;
					this.SendPropertyChanged("raceID");
					this.OnraceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raceName", DbType="VarChar(100)")]
		public string raceName
		{
			get
			{
				return this._raceName;
			}
			set
			{
				if ((this._raceName != value))
				{
					this.OnraceNameChanging(value);
					this.SendPropertyChanging();
					this._raceName = value;
					this.SendPropertyChanged("raceName");
					this.OnraceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDescription", DbType="VarChar(500)")]
		public string shortDescription
		{
			get
			{
				return this._shortDescription;
			}
			set
			{
				if ((this._shortDescription != value))
				{
					this.OnshortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortDescription = value;
					this.SendPropertyChanged("shortDescription");
					this.OnshortDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crpActivities")]
	public partial class crpActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _activityID;
		
		private string _activityName;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityIDChanging(byte value);
    partial void OnactivityIDChanged();
    partial void OnactivityNameChanging(string value);
    partial void OnactivityNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public crpActivity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityName", DbType="NVarChar(100)")]
		public string activityName
		{
			get
			{
				return this._activityName;
			}
			set
			{
				if ((this._activityName != value))
				{
					this.OnactivityNameChanging(value);
					this.SendPropertyChanging();
					this._activityName = value;
					this.SendPropertyChanged("activityName");
					this.OnactivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crpNPCCorporationDivisions")]
	public partial class crpNPCCorporationDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _corporationID;
		
		private byte _divisionID;
		
		private System.Nullable<byte> _size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncorporationIDChanging(int value);
    partial void OncorporationIDChanged();
    partial void OndivisionIDChanging(byte value);
    partial void OndivisionIDChanged();
    partial void OnsizeChanging(System.Nullable<byte> value);
    partial void OnsizeChanged();
    #endregion
		
		public crpNPCCorporationDivision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_divisionID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte divisionID
		{
			get
			{
				return this._divisionID;
			}
			set
			{
				if ((this._divisionID != value))
				{
					this.OndivisionIDChanging(value);
					this.SendPropertyChanging();
					this._divisionID = value;
					this.SendPropertyChanged("divisionID");
					this.OndivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="TinyInt")]
		public System.Nullable<byte> size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crpNPCCorporationResearchFields")]
	public partial class crpNPCCorporationResearchField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _skillID;
		
		private int _corporationID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnskillIDChanging(int value);
    partial void OnskillIDChanged();
    partial void OncorporationIDChanging(int value);
    partial void OncorporationIDChanged();
    #endregion
		
		public crpNPCCorporationResearchField()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skillID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int skillID
		{
			get
			{
				return this._skillID;
			}
			set
			{
				if ((this._skillID != value))
				{
					this.OnskillIDChanging(value);
					this.SendPropertyChanging();
					this._skillID = value;
					this.SendPropertyChanged("skillID");
					this.OnskillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crpNPCCorporations")]
	public partial class crpNPCCorporation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _corporationID;
		
		private System.Nullable<char> _size;
		
		private System.Nullable<char> _extent;
		
		private System.Nullable<int> _solarSystemID;
		
		private System.Nullable<int> _investorID1;
		
		private System.Nullable<byte> _investorShares1;
		
		private System.Nullable<int> _investorID2;
		
		private System.Nullable<byte> _investorShares2;
		
		private System.Nullable<int> _investorID3;
		
		private System.Nullable<byte> _investorShares3;
		
		private System.Nullable<int> _investorID4;
		
		private System.Nullable<byte> _investorShares4;
		
		private System.Nullable<int> _friendID;
		
		private System.Nullable<int> _enemyID;
		
		private System.Nullable<long> _publicShares;
		
		private System.Nullable<int> _initialPrice;
		
		private System.Nullable<double> _minSecurity;
		
		private System.Nullable<bool> _scattered;
		
		private System.Nullable<byte> _fringe;
		
		private System.Nullable<byte> _corridor;
		
		private System.Nullable<byte> _hub;
		
		private System.Nullable<byte> _border;
		
		private System.Nullable<int> _factionID;
		
		private System.Nullable<double> _sizeFactor;
		
		private System.Nullable<short> _stationCount;
		
		private System.Nullable<short> _stationSystemCount;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncorporationIDChanging(int value);
    partial void OncorporationIDChanged();
    partial void OnsizeChanging(System.Nullable<char> value);
    partial void OnsizeChanged();
    partial void OnextentChanging(System.Nullable<char> value);
    partial void OnextentChanged();
    partial void OnsolarSystemIDChanging(System.Nullable<int> value);
    partial void OnsolarSystemIDChanged();
    partial void OninvestorID1Changing(System.Nullable<int> value);
    partial void OninvestorID1Changed();
    partial void OninvestorShares1Changing(System.Nullable<byte> value);
    partial void OninvestorShares1Changed();
    partial void OninvestorID2Changing(System.Nullable<int> value);
    partial void OninvestorID2Changed();
    partial void OninvestorShares2Changing(System.Nullable<byte> value);
    partial void OninvestorShares2Changed();
    partial void OninvestorID3Changing(System.Nullable<int> value);
    partial void OninvestorID3Changed();
    partial void OninvestorShares3Changing(System.Nullable<byte> value);
    partial void OninvestorShares3Changed();
    partial void OninvestorID4Changing(System.Nullable<int> value);
    partial void OninvestorID4Changed();
    partial void OninvestorShares4Changing(System.Nullable<byte> value);
    partial void OninvestorShares4Changed();
    partial void OnfriendIDChanging(System.Nullable<int> value);
    partial void OnfriendIDChanged();
    partial void OnenemyIDChanging(System.Nullable<int> value);
    partial void OnenemyIDChanged();
    partial void OnpublicSharesChanging(System.Nullable<long> value);
    partial void OnpublicSharesChanged();
    partial void OninitialPriceChanging(System.Nullable<int> value);
    partial void OninitialPriceChanged();
    partial void OnminSecurityChanging(System.Nullable<double> value);
    partial void OnminSecurityChanged();
    partial void OnscatteredChanging(System.Nullable<bool> value);
    partial void OnscatteredChanged();
    partial void OnfringeChanging(System.Nullable<byte> value);
    partial void OnfringeChanged();
    partial void OncorridorChanging(System.Nullable<byte> value);
    partial void OncorridorChanged();
    partial void OnhubChanging(System.Nullable<byte> value);
    partial void OnhubChanged();
    partial void OnborderChanging(System.Nullable<byte> value);
    partial void OnborderChanged();
    partial void OnfactionIDChanging(System.Nullable<int> value);
    partial void OnfactionIDChanged();
    partial void OnsizeFactorChanging(System.Nullable<double> value);
    partial void OnsizeFactorChanged();
    partial void OnstationCountChanging(System.Nullable<short> value);
    partial void OnstationCountChanged();
    partial void OnstationSystemCountChanging(System.Nullable<short> value);
    partial void OnstationSystemCountChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    #endregion
		
		public crpNPCCorporation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="Char(1)")]
		public System.Nullable<char> size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extent", DbType="Char(1)")]
		public System.Nullable<char> extent
		{
			get
			{
				return this._extent;
			}
			set
			{
				if ((this._extent != value))
				{
					this.OnextentChanging(value);
					this.SendPropertyChanging();
					this._extent = value;
					this.SendPropertyChanged("extent");
					this.OnextentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="Int")]
		public System.Nullable<int> solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorID1", DbType="Int")]
		public System.Nullable<int> investorID1
		{
			get
			{
				return this._investorID1;
			}
			set
			{
				if ((this._investorID1 != value))
				{
					this.OninvestorID1Changing(value);
					this.SendPropertyChanging();
					this._investorID1 = value;
					this.SendPropertyChanged("investorID1");
					this.OninvestorID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorShares1", DbType="TinyInt")]
		public System.Nullable<byte> investorShares1
		{
			get
			{
				return this._investorShares1;
			}
			set
			{
				if ((this._investorShares1 != value))
				{
					this.OninvestorShares1Changing(value);
					this.SendPropertyChanging();
					this._investorShares1 = value;
					this.SendPropertyChanged("investorShares1");
					this.OninvestorShares1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorID2", DbType="Int")]
		public System.Nullable<int> investorID2
		{
			get
			{
				return this._investorID2;
			}
			set
			{
				if ((this._investorID2 != value))
				{
					this.OninvestorID2Changing(value);
					this.SendPropertyChanging();
					this._investorID2 = value;
					this.SendPropertyChanged("investorID2");
					this.OninvestorID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorShares2", DbType="TinyInt")]
		public System.Nullable<byte> investorShares2
		{
			get
			{
				return this._investorShares2;
			}
			set
			{
				if ((this._investorShares2 != value))
				{
					this.OninvestorShares2Changing(value);
					this.SendPropertyChanging();
					this._investorShares2 = value;
					this.SendPropertyChanged("investorShares2");
					this.OninvestorShares2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorID3", DbType="Int")]
		public System.Nullable<int> investorID3
		{
			get
			{
				return this._investorID3;
			}
			set
			{
				if ((this._investorID3 != value))
				{
					this.OninvestorID3Changing(value);
					this.SendPropertyChanging();
					this._investorID3 = value;
					this.SendPropertyChanged("investorID3");
					this.OninvestorID3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorShares3", DbType="TinyInt")]
		public System.Nullable<byte> investorShares3
		{
			get
			{
				return this._investorShares3;
			}
			set
			{
				if ((this._investorShares3 != value))
				{
					this.OninvestorShares3Changing(value);
					this.SendPropertyChanging();
					this._investorShares3 = value;
					this.SendPropertyChanged("investorShares3");
					this.OninvestorShares3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorID4", DbType="Int")]
		public System.Nullable<int> investorID4
		{
			get
			{
				return this._investorID4;
			}
			set
			{
				if ((this._investorID4 != value))
				{
					this.OninvestorID4Changing(value);
					this.SendPropertyChanging();
					this._investorID4 = value;
					this.SendPropertyChanged("investorID4");
					this.OninvestorID4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investorShares4", DbType="TinyInt")]
		public System.Nullable<byte> investorShares4
		{
			get
			{
				return this._investorShares4;
			}
			set
			{
				if ((this._investorShares4 != value))
				{
					this.OninvestorShares4Changing(value);
					this.SendPropertyChanging();
					this._investorShares4 = value;
					this.SendPropertyChanged("investorShares4");
					this.OninvestorShares4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_friendID", DbType="Int")]
		public System.Nullable<int> friendID
		{
			get
			{
				return this._friendID;
			}
			set
			{
				if ((this._friendID != value))
				{
					this.OnfriendIDChanging(value);
					this.SendPropertyChanging();
					this._friendID = value;
					this.SendPropertyChanged("friendID");
					this.OnfriendIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enemyID", DbType="Int")]
		public System.Nullable<int> enemyID
		{
			get
			{
				return this._enemyID;
			}
			set
			{
				if ((this._enemyID != value))
				{
					this.OnenemyIDChanging(value);
					this.SendPropertyChanging();
					this._enemyID = value;
					this.SendPropertyChanged("enemyID");
					this.OnenemyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publicShares", DbType="BigInt")]
		public System.Nullable<long> publicShares
		{
			get
			{
				return this._publicShares;
			}
			set
			{
				if ((this._publicShares != value))
				{
					this.OnpublicSharesChanging(value);
					this.SendPropertyChanging();
					this._publicShares = value;
					this.SendPropertyChanged("publicShares");
					this.OnpublicSharesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_initialPrice", DbType="Int")]
		public System.Nullable<int> initialPrice
		{
			get
			{
				return this._initialPrice;
			}
			set
			{
				if ((this._initialPrice != value))
				{
					this.OninitialPriceChanging(value);
					this.SendPropertyChanging();
					this._initialPrice = value;
					this.SendPropertyChanged("initialPrice");
					this.OninitialPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minSecurity", DbType="Float")]
		public System.Nullable<double> minSecurity
		{
			get
			{
				return this._minSecurity;
			}
			set
			{
				if ((this._minSecurity != value))
				{
					this.OnminSecurityChanging(value);
					this.SendPropertyChanging();
					this._minSecurity = value;
					this.SendPropertyChanged("minSecurity");
					this.OnminSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scattered", DbType="Bit")]
		public System.Nullable<bool> scattered
		{
			get
			{
				return this._scattered;
			}
			set
			{
				if ((this._scattered != value))
				{
					this.OnscatteredChanging(value);
					this.SendPropertyChanging();
					this._scattered = value;
					this.SendPropertyChanged("scattered");
					this.OnscatteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fringe", DbType="TinyInt")]
		public System.Nullable<byte> fringe
		{
			get
			{
				return this._fringe;
			}
			set
			{
				if ((this._fringe != value))
				{
					this.OnfringeChanging(value);
					this.SendPropertyChanging();
					this._fringe = value;
					this.SendPropertyChanged("fringe");
					this.OnfringeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corridor", DbType="TinyInt")]
		public System.Nullable<byte> corridor
		{
			get
			{
				return this._corridor;
			}
			set
			{
				if ((this._corridor != value))
				{
					this.OncorridorChanging(value);
					this.SendPropertyChanging();
					this._corridor = value;
					this.SendPropertyChanged("corridor");
					this.OncorridorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hub", DbType="TinyInt")]
		public System.Nullable<byte> hub
		{
			get
			{
				return this._hub;
			}
			set
			{
				if ((this._hub != value))
				{
					this.OnhubChanging(value);
					this.SendPropertyChanging();
					this._hub = value;
					this.SendPropertyChanged("hub");
					this.OnhubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_border", DbType="TinyInt")]
		public System.Nullable<byte> border
		{
			get
			{
				return this._border;
			}
			set
			{
				if ((this._border != value))
				{
					this.OnborderChanging(value);
					this.SendPropertyChanging();
					this._border = value;
					this.SendPropertyChanged("border");
					this.OnborderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int")]
		public System.Nullable<int> factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sizeFactor", DbType="Float")]
		public System.Nullable<double> sizeFactor
		{
			get
			{
				return this._sizeFactor;
			}
			set
			{
				if ((this._sizeFactor != value))
				{
					this.OnsizeFactorChanging(value);
					this.SendPropertyChanging();
					this._sizeFactor = value;
					this.SendPropertyChanged("sizeFactor");
					this.OnsizeFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationCount", DbType="SmallInt")]
		public System.Nullable<short> stationCount
		{
			get
			{
				return this._stationCount;
			}
			set
			{
				if ((this._stationCount != value))
				{
					this.OnstationCountChanging(value);
					this.SendPropertyChanging();
					this._stationCount = value;
					this.SendPropertyChanged("stationCount");
					this.OnstationCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationSystemCount", DbType="SmallInt")]
		public System.Nullable<short> stationSystemCount
		{
			get
			{
				return this._stationSystemCount;
			}
			set
			{
				if ((this._stationSystemCount != value))
				{
					this.OnstationSystemCountChanging(value);
					this.SendPropertyChanging();
					this._stationSystemCount = value;
					this.SendPropertyChanged("stationSystemCount");
					this.OnstationSystemCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(4000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crpNPCCorporationTrades")]
	public partial class crpNPCCorporationTrade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _corporationID;
		
		private int _typeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncorporationIDChanging(int value);
    partial void OncorporationIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    #endregion
		
		public crpNPCCorporationTrade()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crpNPCDivisions")]
	public partial class crpNPCDivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _divisionID;
		
		private string _divisionName;
		
		private string _description;
		
		private string _leaderType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndivisionIDChanging(byte value);
    partial void OndivisionIDChanged();
    partial void OndivisionNameChanging(string value);
    partial void OndivisionNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnleaderTypeChanging(string value);
    partial void OnleaderTypeChanged();
    #endregion
		
		public crpNPCDivision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_divisionID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte divisionID
		{
			get
			{
				return this._divisionID;
			}
			set
			{
				if ((this._divisionID != value))
				{
					this.OndivisionIDChanging(value);
					this.SendPropertyChanging();
					this._divisionID = value;
					this.SendPropertyChanged("divisionID");
					this.OndivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_divisionName", DbType="NVarChar(100)")]
		public string divisionName
		{
			get
			{
				return this._divisionName;
			}
			set
			{
				if ((this._divisionName != value))
				{
					this.OndivisionNameChanging(value);
					this.SendPropertyChanging();
					this._divisionName = value;
					this.SendPropertyChanged("divisionName");
					this.OndivisionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leaderType", DbType="NVarChar(100)")]
		public string leaderType
		{
			get
			{
				return this._leaderType;
			}
			set
			{
				if ((this._leaderType != value))
				{
					this.OnleaderTypeChanging(value);
					this.SendPropertyChanging();
					this._leaderType = value;
					this.SendPropertyChanged("leaderType");
					this.OnleaderTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crtCategories")]
	public partial class crtCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _categoryID;
		
		private string _description;
		
		private string _categoryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryIDChanging(byte value);
    partial void OncategoryIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncategoryNameChanging(string value);
    partial void OncategoryNameChanged();
    #endregion
		
		public crtCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryName", DbType="NVarChar(256)")]
		public string categoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				if ((this._categoryName != value))
				{
					this.OncategoryNameChanging(value);
					this.SendPropertyChanging();
					this._categoryName = value;
					this.SendPropertyChanged("categoryName");
					this.OncategoryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crtCertificates")]
	public partial class crtCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _certificateID;
		
		private System.Nullable<byte> _categoryID;
		
		private System.Nullable<int> _classID;
		
		private System.Nullable<byte> _grade;
		
		private System.Nullable<int> _corpID;
		
		private System.Nullable<int> _iconID;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncertificateIDChanging(int value);
    partial void OncertificateIDChanged();
    partial void OncategoryIDChanging(System.Nullable<byte> value);
    partial void OncategoryIDChanged();
    partial void OnclassIDChanging(System.Nullable<int> value);
    partial void OnclassIDChanged();
    partial void OngradeChanging(System.Nullable<byte> value);
    partial void OngradeChanged();
    partial void OncorpIDChanging(System.Nullable<int> value);
    partial void OncorpIDChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public crtCertificate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int certificateID
		{
			get
			{
				return this._certificateID;
			}
			set
			{
				if ((this._certificateID != value))
				{
					this.OncertificateIDChanging(value);
					this.SendPropertyChanging();
					this._certificateID = value;
					this.SendPropertyChanged("certificateID");
					this.OncertificateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt")]
		public System.Nullable<byte> categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", DbType="Int")]
		public System.Nullable<int> classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this.OnclassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("classID");
					this.OnclassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="TinyInt")]
		public System.Nullable<byte> grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corpID", DbType="Int")]
		public System.Nullable<int> corpID
		{
			get
			{
				return this._corpID;
			}
			set
			{
				if ((this._corpID != value))
				{
					this.OncorpIDChanging(value);
					this.SendPropertyChanging();
					this._corpID = value;
					this.SendPropertyChanged("corpID");
					this.OncorpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crtClasses")]
	public partial class crtClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _classID;
		
		private string _description;
		
		private string _className;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassIDChanging(int value);
    partial void OnclassIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnclassNameChanging(string value);
    partial void OnclassNameChanged();
    #endregion
		
		public crtClass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int classID
		{
			get
			{
				return this._classID;
			}
			set
			{
				if ((this._classID != value))
				{
					this.OnclassIDChanging(value);
					this.SendPropertyChanging();
					this._classID = value;
					this.SendPropertyChanged("classID");
					this.OnclassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_className", DbType="NVarChar(256)")]
		public string className
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this.OnclassNameChanging(value);
					this.SendPropertyChanging();
					this._className = value;
					this.SendPropertyChanged("className");
					this.OnclassNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crtRecommendations")]
	public partial class crtRecommendation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _recommendationID;
		
		private System.Nullable<int> _shipTypeID;
		
		private System.Nullable<int> _certificateID;
		
		private byte _recommendationLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrecommendationIDChanging(int value);
    partial void OnrecommendationIDChanged();
    partial void OnshipTypeIDChanging(System.Nullable<int> value);
    partial void OnshipTypeIDChanged();
    partial void OncertificateIDChanging(System.Nullable<int> value);
    partial void OncertificateIDChanged();
    partial void OnrecommendationLevelChanging(byte value);
    partial void OnrecommendationLevelChanged();
    #endregion
		
		public crtRecommendation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recommendationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int recommendationID
		{
			get
			{
				return this._recommendationID;
			}
			set
			{
				if ((this._recommendationID != value))
				{
					this.OnrecommendationIDChanging(value);
					this.SendPropertyChanging();
					this._recommendationID = value;
					this.SendPropertyChanged("recommendationID");
					this.OnrecommendationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipTypeID", DbType="Int")]
		public System.Nullable<int> shipTypeID
		{
			get
			{
				return this._shipTypeID;
			}
			set
			{
				if ((this._shipTypeID != value))
				{
					this.OnshipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._shipTypeID = value;
					this.SendPropertyChanged("shipTypeID");
					this.OnshipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateID", DbType="Int")]
		public System.Nullable<int> certificateID
		{
			get
			{
				return this._certificateID;
			}
			set
			{
				if ((this._certificateID != value))
				{
					this.OncertificateIDChanging(value);
					this.SendPropertyChanging();
					this._certificateID = value;
					this.SendPropertyChanged("certificateID");
					this.OncertificateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recommendationLevel", DbType="TinyInt NOT NULL")]
		public byte recommendationLevel
		{
			get
			{
				return this._recommendationLevel;
			}
			set
			{
				if ((this._recommendationLevel != value))
				{
					this.OnrecommendationLevelChanging(value);
					this.SendPropertyChanging();
					this._recommendationLevel = value;
					this.SendPropertyChanged("recommendationLevel");
					this.OnrecommendationLevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.crtRelationships")]
	public partial class crtRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _relationshipID;
		
		private System.Nullable<int> _parentID;
		
		private System.Nullable<int> _parentTypeID;
		
		private System.Nullable<byte> _parentLevel;
		
		private System.Nullable<int> _childID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrelationshipIDChanging(int value);
    partial void OnrelationshipIDChanged();
    partial void OnparentIDChanging(System.Nullable<int> value);
    partial void OnparentIDChanged();
    partial void OnparentTypeIDChanging(System.Nullable<int> value);
    partial void OnparentTypeIDChanged();
    partial void OnparentLevelChanging(System.Nullable<byte> value);
    partial void OnparentLevelChanged();
    partial void OnchildIDChanging(System.Nullable<int> value);
    partial void OnchildIDChanged();
    #endregion
		
		public crtRelationship()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationshipID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int relationshipID
		{
			get
			{
				return this._relationshipID;
			}
			set
			{
				if ((this._relationshipID != value))
				{
					this.OnrelationshipIDChanging(value);
					this.SendPropertyChanging();
					this._relationshipID = value;
					this.SendPropertyChanged("relationshipID");
					this.OnrelationshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int")]
		public System.Nullable<int> parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentTypeID", DbType="Int")]
		public System.Nullable<int> parentTypeID
		{
			get
			{
				return this._parentTypeID;
			}
			set
			{
				if ((this._parentTypeID != value))
				{
					this.OnparentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._parentTypeID = value;
					this.SendPropertyChanged("parentTypeID");
					this.OnparentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentLevel", DbType="TinyInt")]
		public System.Nullable<byte> parentLevel
		{
			get
			{
				return this._parentLevel;
			}
			set
			{
				if ((this._parentLevel != value))
				{
					this.OnparentLevelChanging(value);
					this.SendPropertyChanging();
					this._parentLevel = value;
					this.SendPropertyChanged("parentLevel");
					this.OnparentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_childID", DbType="Int")]
		public System.Nullable<int> childID
		{
			get
			{
				return this._childID;
			}
			set
			{
				if ((this._childID != value))
				{
					this.OnchildIDChanging(value);
					this.SendPropertyChanging();
					this._childID = value;
					this.SendPropertyChanged("childID");
					this.OnchildIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dgmAttributeCategories")]
	public partial class dgmAttributeCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _categoryID;
		
		private string _categoryName;
		
		private string _categoryDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryIDChanging(byte value);
    partial void OncategoryIDChanged();
    partial void OncategoryNameChanging(string value);
    partial void OncategoryNameChanged();
    partial void OncategoryDescriptionChanging(string value);
    partial void OncategoryDescriptionChanged();
    #endregion
		
		public dgmAttributeCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryName", DbType="NVarChar(50)")]
		public string categoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				if ((this._categoryName != value))
				{
					this.OncategoryNameChanging(value);
					this.SendPropertyChanging();
					this._categoryName = value;
					this.SendPropertyChanged("categoryName");
					this.OncategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryDescription", DbType="NVarChar(200)")]
		public string categoryDescription
		{
			get
			{
				return this._categoryDescription;
			}
			set
			{
				if ((this._categoryDescription != value))
				{
					this.OncategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._categoryDescription = value;
					this.SendPropertyChanged("categoryDescription");
					this.OncategoryDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dgmAttributeTypes")]
	public partial class dgmAttributeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _attributeID;
		
		private string _attributeName;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
		private System.Nullable<double> _defaultValue;
		
		private System.Nullable<bool> _published;
		
		private string _displayName;
		
		private System.Nullable<byte> _unitID;
		
		private System.Nullable<bool> _stackable;
		
		private System.Nullable<bool> _highIsGood;
		
		private System.Nullable<byte> _categoryID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnattributeIDChanging(short value);
    partial void OnattributeIDChanged();
    partial void OnattributeNameChanging(string value);
    partial void OnattributeNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OndefaultValueChanging(System.Nullable<double> value);
    partial void OndefaultValueChanged();
    partial void OnpublishedChanging(System.Nullable<bool> value);
    partial void OnpublishedChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OnunitIDChanging(System.Nullable<byte> value);
    partial void OnunitIDChanged();
    partial void OnstackableChanging(System.Nullable<bool> value);
    partial void OnstackableChanged();
    partial void OnhighIsGoodChanging(System.Nullable<bool> value);
    partial void OnhighIsGoodChanged();
    partial void OncategoryIDChanging(System.Nullable<byte> value);
    partial void OncategoryIDChanged();
    #endregion
		
		public dgmAttributeType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short attributeID
		{
			get
			{
				return this._attributeID;
			}
			set
			{
				if ((this._attributeID != value))
				{
					this.OnattributeIDChanging(value);
					this.SendPropertyChanging();
					this._attributeID = value;
					this.SendPropertyChanged("attributeID");
					this.OnattributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeName", DbType="VarChar(100)")]
		public string attributeName
		{
			get
			{
				return this._attributeName;
			}
			set
			{
				if ((this._attributeName != value))
				{
					this.OnattributeNameChanging(value);
					this.SendPropertyChanging();
					this._attributeName = value;
					this.SendPropertyChanged("attributeName");
					this.OnattributeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultValue", DbType="Float")]
		public System.Nullable<double> defaultValue
		{
			get
			{
				return this._defaultValue;
			}
			set
			{
				if ((this._defaultValue != value))
				{
					this.OndefaultValueChanging(value);
					this.SendPropertyChanging();
					this._defaultValue = value;
					this.SendPropertyChanged("defaultValue");
					this.OndefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit")]
		public System.Nullable<bool> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="VarChar(100)")]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="TinyInt")]
		public System.Nullable<byte> unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stackable", DbType="Bit")]
		public System.Nullable<bool> stackable
		{
			get
			{
				return this._stackable;
			}
			set
			{
				if ((this._stackable != value))
				{
					this.OnstackableChanging(value);
					this.SendPropertyChanging();
					this._stackable = value;
					this.SendPropertyChanged("stackable");
					this.OnstackableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_highIsGood", DbType="Bit")]
		public System.Nullable<bool> highIsGood
		{
			get
			{
				return this._highIsGood;
			}
			set
			{
				if ((this._highIsGood != value))
				{
					this.OnhighIsGoodChanging(value);
					this.SendPropertyChanging();
					this._highIsGood = value;
					this.SendPropertyChanged("highIsGood");
					this.OnhighIsGoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt")]
		public System.Nullable<byte> categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dgmEffects")]
	public partial class dgmEffect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _effectID;
		
		private string _effectName;
		
		private System.Nullable<short> _effectCategory;
		
		private System.Nullable<int> _preExpression;
		
		private System.Nullable<int> _postExpression;
		
		private string _description;
		
		private string _guid;
		
		private System.Nullable<int> _iconID;
		
		private System.Nullable<bool> _isOffensive;
		
		private System.Nullable<bool> _isAssistance;
		
		private System.Nullable<short> _durationAttributeID;
		
		private System.Nullable<short> _trackingSpeedAttributeID;
		
		private System.Nullable<short> _dischargeAttributeID;
		
		private System.Nullable<short> _rangeAttributeID;
		
		private System.Nullable<short> _falloffAttributeID;
		
		private System.Nullable<bool> _disallowAutoRepeat;
		
		private System.Nullable<bool> _published;
		
		private string _displayName;
		
		private System.Nullable<bool> _isWarpSafe;
		
		private System.Nullable<bool> _rangeChance;
		
		private System.Nullable<bool> _electronicChance;
		
		private System.Nullable<bool> _propulsionChance;
		
		private System.Nullable<byte> _distribution;
		
		private string _sfxName;
		
		private System.Nullable<short> _npcUsageChanceAttributeID;
		
		private System.Nullable<short> _npcActivationChanceAttributeID;
		
		private System.Nullable<short> _fittingUsageChanceAttributeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneffectIDChanging(short value);
    partial void OneffectIDChanged();
    partial void OneffectNameChanging(string value);
    partial void OneffectNameChanged();
    partial void OneffectCategoryChanging(System.Nullable<short> value);
    partial void OneffectCategoryChanged();
    partial void OnpreExpressionChanging(System.Nullable<int> value);
    partial void OnpreExpressionChanged();
    partial void OnpostExpressionChanging(System.Nullable<int> value);
    partial void OnpostExpressionChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnguidChanging(string value);
    partial void OnguidChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnisOffensiveChanging(System.Nullable<bool> value);
    partial void OnisOffensiveChanged();
    partial void OnisAssistanceChanging(System.Nullable<bool> value);
    partial void OnisAssistanceChanged();
    partial void OndurationAttributeIDChanging(System.Nullable<short> value);
    partial void OndurationAttributeIDChanged();
    partial void OntrackingSpeedAttributeIDChanging(System.Nullable<short> value);
    partial void OntrackingSpeedAttributeIDChanged();
    partial void OndischargeAttributeIDChanging(System.Nullable<short> value);
    partial void OndischargeAttributeIDChanged();
    partial void OnrangeAttributeIDChanging(System.Nullable<short> value);
    partial void OnrangeAttributeIDChanged();
    partial void OnfalloffAttributeIDChanging(System.Nullable<short> value);
    partial void OnfalloffAttributeIDChanged();
    partial void OndisallowAutoRepeatChanging(System.Nullable<bool> value);
    partial void OndisallowAutoRepeatChanged();
    partial void OnpublishedChanging(System.Nullable<bool> value);
    partial void OnpublishedChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OnisWarpSafeChanging(System.Nullable<bool> value);
    partial void OnisWarpSafeChanged();
    partial void OnrangeChanceChanging(System.Nullable<bool> value);
    partial void OnrangeChanceChanged();
    partial void OnelectronicChanceChanging(System.Nullable<bool> value);
    partial void OnelectronicChanceChanged();
    partial void OnpropulsionChanceChanging(System.Nullable<bool> value);
    partial void OnpropulsionChanceChanged();
    partial void OndistributionChanging(System.Nullable<byte> value);
    partial void OndistributionChanged();
    partial void OnsfxNameChanging(string value);
    partial void OnsfxNameChanged();
    partial void OnnpcUsageChanceAttributeIDChanging(System.Nullable<short> value);
    partial void OnnpcUsageChanceAttributeIDChanged();
    partial void OnnpcActivationChanceAttributeIDChanging(System.Nullable<short> value);
    partial void OnnpcActivationChanceAttributeIDChanged();
    partial void OnfittingUsageChanceAttributeIDChanging(System.Nullable<short> value);
    partial void OnfittingUsageChanceAttributeIDChanged();
    #endregion
		
		public dgmEffect()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short effectID
		{
			get
			{
				return this._effectID;
			}
			set
			{
				if ((this._effectID != value))
				{
					this.OneffectIDChanging(value);
					this.SendPropertyChanging();
					this._effectID = value;
					this.SendPropertyChanged("effectID");
					this.OneffectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectName", DbType="VarChar(400)")]
		public string effectName
		{
			get
			{
				return this._effectName;
			}
			set
			{
				if ((this._effectName != value))
				{
					this.OneffectNameChanging(value);
					this.SendPropertyChanging();
					this._effectName = value;
					this.SendPropertyChanged("effectName");
					this.OneffectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectCategory", DbType="SmallInt")]
		public System.Nullable<short> effectCategory
		{
			get
			{
				return this._effectCategory;
			}
			set
			{
				if ((this._effectCategory != value))
				{
					this.OneffectCategoryChanging(value);
					this.SendPropertyChanging();
					this._effectCategory = value;
					this.SendPropertyChanged("effectCategory");
					this.OneffectCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preExpression", DbType="Int")]
		public System.Nullable<int> preExpression
		{
			get
			{
				return this._preExpression;
			}
			set
			{
				if ((this._preExpression != value))
				{
					this.OnpreExpressionChanging(value);
					this.SendPropertyChanging();
					this._preExpression = value;
					this.SendPropertyChanged("preExpression");
					this.OnpreExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postExpression", DbType="Int")]
		public System.Nullable<int> postExpression
		{
			get
			{
				return this._postExpression;
			}
			set
			{
				if ((this._postExpression != value))
				{
					this.OnpostExpressionChanging(value);
					this.SendPropertyChanging();
					this._postExpression = value;
					this.SendPropertyChanged("postExpression");
					this.OnpostExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guid", DbType="VarChar(60)")]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this.OnguidChanging(value);
					this.SendPropertyChanging();
					this._guid = value;
					this.SendPropertyChanged("guid");
					this.OnguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOffensive", DbType="Bit")]
		public System.Nullable<bool> isOffensive
		{
			get
			{
				return this._isOffensive;
			}
			set
			{
				if ((this._isOffensive != value))
				{
					this.OnisOffensiveChanging(value);
					this.SendPropertyChanging();
					this._isOffensive = value;
					this.SendPropertyChanged("isOffensive");
					this.OnisOffensiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAssistance", DbType="Bit")]
		public System.Nullable<bool> isAssistance
		{
			get
			{
				return this._isAssistance;
			}
			set
			{
				if ((this._isAssistance != value))
				{
					this.OnisAssistanceChanging(value);
					this.SendPropertyChanging();
					this._isAssistance = value;
					this.SendPropertyChanged("isAssistance");
					this.OnisAssistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationAttributeID", DbType="SmallInt")]
		public System.Nullable<short> durationAttributeID
		{
			get
			{
				return this._durationAttributeID;
			}
			set
			{
				if ((this._durationAttributeID != value))
				{
					this.OndurationAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._durationAttributeID = value;
					this.SendPropertyChanged("durationAttributeID");
					this.OndurationAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trackingSpeedAttributeID", DbType="SmallInt")]
		public System.Nullable<short> trackingSpeedAttributeID
		{
			get
			{
				return this._trackingSpeedAttributeID;
			}
			set
			{
				if ((this._trackingSpeedAttributeID != value))
				{
					this.OntrackingSpeedAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._trackingSpeedAttributeID = value;
					this.SendPropertyChanged("trackingSpeedAttributeID");
					this.OntrackingSpeedAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dischargeAttributeID", DbType="SmallInt")]
		public System.Nullable<short> dischargeAttributeID
		{
			get
			{
				return this._dischargeAttributeID;
			}
			set
			{
				if ((this._dischargeAttributeID != value))
				{
					this.OndischargeAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._dischargeAttributeID = value;
					this.SendPropertyChanged("dischargeAttributeID");
					this.OndischargeAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rangeAttributeID", DbType="SmallInt")]
		public System.Nullable<short> rangeAttributeID
		{
			get
			{
				return this._rangeAttributeID;
			}
			set
			{
				if ((this._rangeAttributeID != value))
				{
					this.OnrangeAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._rangeAttributeID = value;
					this.SendPropertyChanged("rangeAttributeID");
					this.OnrangeAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_falloffAttributeID", DbType="SmallInt")]
		public System.Nullable<short> falloffAttributeID
		{
			get
			{
				return this._falloffAttributeID;
			}
			set
			{
				if ((this._falloffAttributeID != value))
				{
					this.OnfalloffAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._falloffAttributeID = value;
					this.SendPropertyChanged("falloffAttributeID");
					this.OnfalloffAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disallowAutoRepeat", DbType="Bit")]
		public System.Nullable<bool> disallowAutoRepeat
		{
			get
			{
				return this._disallowAutoRepeat;
			}
			set
			{
				if ((this._disallowAutoRepeat != value))
				{
					this.OndisallowAutoRepeatChanging(value);
					this.SendPropertyChanging();
					this._disallowAutoRepeat = value;
					this.SendPropertyChanged("disallowAutoRepeat");
					this.OndisallowAutoRepeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit")]
		public System.Nullable<bool> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="VarChar(100)")]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isWarpSafe", DbType="Bit")]
		public System.Nullable<bool> isWarpSafe
		{
			get
			{
				return this._isWarpSafe;
			}
			set
			{
				if ((this._isWarpSafe != value))
				{
					this.OnisWarpSafeChanging(value);
					this.SendPropertyChanging();
					this._isWarpSafe = value;
					this.SendPropertyChanged("isWarpSafe");
					this.OnisWarpSafeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rangeChance", DbType="Bit")]
		public System.Nullable<bool> rangeChance
		{
			get
			{
				return this._rangeChance;
			}
			set
			{
				if ((this._rangeChance != value))
				{
					this.OnrangeChanceChanging(value);
					this.SendPropertyChanging();
					this._rangeChance = value;
					this.SendPropertyChanged("rangeChance");
					this.OnrangeChanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_electronicChance", DbType="Bit")]
		public System.Nullable<bool> electronicChance
		{
			get
			{
				return this._electronicChance;
			}
			set
			{
				if ((this._electronicChance != value))
				{
					this.OnelectronicChanceChanging(value);
					this.SendPropertyChanging();
					this._electronicChance = value;
					this.SendPropertyChanged("electronicChance");
					this.OnelectronicChanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_propulsionChance", DbType="Bit")]
		public System.Nullable<bool> propulsionChance
		{
			get
			{
				return this._propulsionChance;
			}
			set
			{
				if ((this._propulsionChance != value))
				{
					this.OnpropulsionChanceChanging(value);
					this.SendPropertyChanging();
					this._propulsionChance = value;
					this.SendPropertyChanged("propulsionChance");
					this.OnpropulsionChanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distribution", DbType="TinyInt")]
		public System.Nullable<byte> distribution
		{
			get
			{
				return this._distribution;
			}
			set
			{
				if ((this._distribution != value))
				{
					this.OndistributionChanging(value);
					this.SendPropertyChanging();
					this._distribution = value;
					this.SendPropertyChanged("distribution");
					this.OndistributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sfxName", DbType="VarChar(20)")]
		public string sfxName
		{
			get
			{
				return this._sfxName;
			}
			set
			{
				if ((this._sfxName != value))
				{
					this.OnsfxNameChanging(value);
					this.SendPropertyChanging();
					this._sfxName = value;
					this.SendPropertyChanged("sfxName");
					this.OnsfxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_npcUsageChanceAttributeID", DbType="SmallInt")]
		public System.Nullable<short> npcUsageChanceAttributeID
		{
			get
			{
				return this._npcUsageChanceAttributeID;
			}
			set
			{
				if ((this._npcUsageChanceAttributeID != value))
				{
					this.OnnpcUsageChanceAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._npcUsageChanceAttributeID = value;
					this.SendPropertyChanged("npcUsageChanceAttributeID");
					this.OnnpcUsageChanceAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_npcActivationChanceAttributeID", DbType="SmallInt")]
		public System.Nullable<short> npcActivationChanceAttributeID
		{
			get
			{
				return this._npcActivationChanceAttributeID;
			}
			set
			{
				if ((this._npcActivationChanceAttributeID != value))
				{
					this.OnnpcActivationChanceAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._npcActivationChanceAttributeID = value;
					this.SendPropertyChanged("npcActivationChanceAttributeID");
					this.OnnpcActivationChanceAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fittingUsageChanceAttributeID", DbType="SmallInt")]
		public System.Nullable<short> fittingUsageChanceAttributeID
		{
			get
			{
				return this._fittingUsageChanceAttributeID;
			}
			set
			{
				if ((this._fittingUsageChanceAttributeID != value))
				{
					this.OnfittingUsageChanceAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._fittingUsageChanceAttributeID = value;
					this.SendPropertyChanged("fittingUsageChanceAttributeID");
					this.OnfittingUsageChanceAttributeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dgmTypeAttributes")]
	public partial class dgmTypeAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private short _attributeID;
		
		private System.Nullable<int> _valueInt;
		
		private System.Nullable<double> _valueFloat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnattributeIDChanging(short value);
    partial void OnattributeIDChanged();
    partial void OnvalueIntChanging(System.Nullable<int> value);
    partial void OnvalueIntChanged();
    partial void OnvalueFloatChanging(System.Nullable<double> value);
    partial void OnvalueFloatChanged();
    #endregion
		
		public dgmTypeAttribute()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attributeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short attributeID
		{
			get
			{
				return this._attributeID;
			}
			set
			{
				if ((this._attributeID != value))
				{
					this.OnattributeIDChanging(value);
					this.SendPropertyChanging();
					this._attributeID = value;
					this.SendPropertyChanged("attributeID");
					this.OnattributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueInt", DbType="Int")]
		public System.Nullable<int> valueInt
		{
			get
			{
				return this._valueInt;
			}
			set
			{
				if ((this._valueInt != value))
				{
					this.OnvalueIntChanging(value);
					this.SendPropertyChanging();
					this._valueInt = value;
					this.SendPropertyChanged("valueInt");
					this.OnvalueIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueFloat", DbType="Float")]
		public System.Nullable<double> valueFloat
		{
			get
			{
				return this._valueFloat;
			}
			set
			{
				if ((this._valueFloat != value))
				{
					this.OnvalueFloatChanging(value);
					this.SendPropertyChanging();
					this._valueFloat = value;
					this.SendPropertyChanged("valueFloat");
					this.OnvalueFloatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dgmTypeEffects")]
	public partial class dgmTypeEffect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private short _effectID;
		
		private System.Nullable<bool> _isDefault;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OneffectIDChanging(short value);
    partial void OneffectIDChanged();
    partial void OnisDefaultChanging(System.Nullable<bool> value);
    partial void OnisDefaultChanged();
    #endregion
		
		public dgmTypeEffect()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short effectID
		{
			get
			{
				return this._effectID;
			}
			set
			{
				if ((this._effectID != value))
				{
					this.OneffectIDChanging(value);
					this.SendPropertyChanging();
					this._effectID = value;
					this.SendPropertyChanged("effectID");
					this.OneffectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDefault", DbType="Bit")]
		public System.Nullable<bool> isDefault
		{
			get
			{
				return this._isDefault;
			}
			set
			{
				if ((this._isDefault != value))
				{
					this.OnisDefaultChanging(value);
					this.SendPropertyChanging();
					this._isDefault = value;
					this.SendPropertyChanged("isDefault");
					this.OnisDefaultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eveGraphics")]
	public partial class eveGraphic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _graphicID;
		
		private string _graphicFile;
		
		private string _description;
		
		private bool _obsolete;
		
		private string _graphicType;
		
		private System.Nullable<bool> _collidable;
		
		private System.Nullable<int> _explosionID;
		
		private System.Nullable<int> _directoryID;
		
		private string _graphicName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngraphicIDChanging(int value);
    partial void OngraphicIDChanged();
    partial void OngraphicFileChanging(string value);
    partial void OngraphicFileChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnobsoleteChanging(bool value);
    partial void OnobsoleteChanged();
    partial void OngraphicTypeChanging(string value);
    partial void OngraphicTypeChanged();
    partial void OncollidableChanging(System.Nullable<bool> value);
    partial void OncollidableChanged();
    partial void OnexplosionIDChanging(System.Nullable<int> value);
    partial void OnexplosionIDChanged();
    partial void OndirectoryIDChanging(System.Nullable<int> value);
    partial void OndirectoryIDChanged();
    partial void OngraphicNameChanging(string value);
    partial void OngraphicNameChanged();
    #endregion
		
		public eveGraphic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_graphicID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int graphicID
		{
			get
			{
				return this._graphicID;
			}
			set
			{
				if ((this._graphicID != value))
				{
					this.OngraphicIDChanging(value);
					this.SendPropertyChanging();
					this._graphicID = value;
					this.SendPropertyChanged("graphicID");
					this.OngraphicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_graphicFile", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string graphicFile
		{
			get
			{
				return this._graphicFile;
			}
			set
			{
				if ((this._graphicFile != value))
				{
					this.OngraphicFileChanging(value);
					this.SendPropertyChanging();
					this._graphicFile = value;
					this.SendPropertyChanged("graphicFile");
					this.OngraphicFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obsolete", DbType="Bit NOT NULL")]
		public bool obsolete
		{
			get
			{
				return this._obsolete;
			}
			set
			{
				if ((this._obsolete != value))
				{
					this.OnobsoleteChanging(value);
					this.SendPropertyChanging();
					this._obsolete = value;
					this.SendPropertyChanged("obsolete");
					this.OnobsoleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_graphicType", DbType="VarChar(100)")]
		public string graphicType
		{
			get
			{
				return this._graphicType;
			}
			set
			{
				if ((this._graphicType != value))
				{
					this.OngraphicTypeChanging(value);
					this.SendPropertyChanging();
					this._graphicType = value;
					this.SendPropertyChanged("graphicType");
					this.OngraphicTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collidable", DbType="Bit")]
		public System.Nullable<bool> collidable
		{
			get
			{
				return this._collidable;
			}
			set
			{
				if ((this._collidable != value))
				{
					this.OncollidableChanging(value);
					this.SendPropertyChanging();
					this._collidable = value;
					this.SendPropertyChanged("collidable");
					this.OncollidableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explosionID", DbType="Int")]
		public System.Nullable<int> explosionID
		{
			get
			{
				return this._explosionID;
			}
			set
			{
				if ((this._explosionID != value))
				{
					this.OnexplosionIDChanging(value);
					this.SendPropertyChanging();
					this._explosionID = value;
					this.SendPropertyChanged("explosionID");
					this.OnexplosionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directoryID", DbType="Int")]
		public System.Nullable<int> directoryID
		{
			get
			{
				return this._directoryID;
			}
			set
			{
				if ((this._directoryID != value))
				{
					this.OndirectoryIDChanging(value);
					this.SendPropertyChanging();
					this._directoryID = value;
					this.SendPropertyChanged("directoryID");
					this.OndirectoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_graphicName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string graphicName
		{
			get
			{
				return this._graphicName;
			}
			set
			{
				if ((this._graphicName != value))
				{
					this.OngraphicNameChanging(value);
					this.SendPropertyChanging();
					this._graphicName = value;
					this.SendPropertyChanged("graphicName");
					this.OngraphicNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eveIcons")]
	public partial class eveIcon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iconID;
		
		private string _iconFile;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniconIDChanging(int value);
    partial void OniconIDChanged();
    partial void OniconFileChanging(string value);
    partial void OniconFileChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public eveIcon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconFile", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string iconFile
		{
			get
			{
				return this._iconFile;
			}
			set
			{
				if ((this._iconFile != value))
				{
					this.OniconFileChanging(value);
					this.SendPropertyChanging();
					this._iconFile = value;
					this.SendPropertyChanged("iconFile");
					this.OniconFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eveNames")]
	public partial class eveName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemID;
		
		private string _itemName;
		
		private System.Nullable<byte> _categoryID;
		
		private System.Nullable<short> _groupID;
		
		private System.Nullable<int> _typeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIDChanging(int value);
    partial void OnitemIDChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OncategoryIDChanging(System.Nullable<byte> value);
    partial void OncategoryIDChanged();
    partial void OngroupIDChanging(System.Nullable<short> value);
    partial void OngroupIDChanged();
    partial void OntypeIDChanging(System.Nullable<int> value);
    partial void OntypeIDChanged();
    #endregion
		
		public eveName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemID
		{
			get
			{
				return this._itemID;
			}
			set
			{
				if ((this._itemID != value))
				{
					this.OnitemIDChanging(value);
					this.SendPropertyChanging();
					this._itemID = value;
					this.SendPropertyChanged("itemID");
					this.OnitemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(100)")]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this.OnitemNameChanging(value);
					this.SendPropertyChanging();
					this._itemName = value;
					this.SendPropertyChanged("itemName");
					this.OnitemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt")]
		public System.Nullable<byte> categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="SmallInt")]
		public System.Nullable<short> groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int")]
		public System.Nullable<int> typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eveUnits")]
	public partial class eveUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _unitID;
		
		private string _unitName;
		
		private string _displayName;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnunitIDChanging(byte value);
    partial void OnunitIDChanged();
    partial void OnunitNameChanging(string value);
    partial void OnunitNameChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public eveUnit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitName", DbType="VarChar(100)")]
		public string unitName
		{
			get
			{
				return this._unitName;
			}
			set
			{
				if ((this._unitName != value))
				{
					this.OnunitNameChanging(value);
					this.SendPropertyChanging();
					this._unitName = value;
					this.SendPropertyChanged("unitName");
					this.OnunitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="VarChar(20)")]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invBlueprintTypes")]
	public partial class invBlueprintType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blueprintTypeID;
		
		private System.Nullable<int> _parentBlueprintTypeID;
		
		private System.Nullable<int> _productTypeID;
		
		private System.Nullable<int> _productionTime;
		
		private System.Nullable<short> _techLevel;
		
		private System.Nullable<int> _researchProductivityTime;
		
		private System.Nullable<int> _researchMaterialTime;
		
		private System.Nullable<int> _researchCopyTime;
		
		private System.Nullable<int> _researchTechTime;
		
		private System.Nullable<int> _productivityModifier;
		
		private System.Nullable<short> _materialModifier;
		
		private System.Nullable<short> _wasteFactor;
		
		private System.Nullable<int> _maxProductionLimit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblueprintTypeIDChanging(int value);
    partial void OnblueprintTypeIDChanged();
    partial void OnparentBlueprintTypeIDChanging(System.Nullable<int> value);
    partial void OnparentBlueprintTypeIDChanged();
    partial void OnproductTypeIDChanging(System.Nullable<int> value);
    partial void OnproductTypeIDChanged();
    partial void OnproductionTimeChanging(System.Nullable<int> value);
    partial void OnproductionTimeChanged();
    partial void OntechLevelChanging(System.Nullable<short> value);
    partial void OntechLevelChanged();
    partial void OnresearchProductivityTimeChanging(System.Nullable<int> value);
    partial void OnresearchProductivityTimeChanged();
    partial void OnresearchMaterialTimeChanging(System.Nullable<int> value);
    partial void OnresearchMaterialTimeChanged();
    partial void OnresearchCopyTimeChanging(System.Nullable<int> value);
    partial void OnresearchCopyTimeChanged();
    partial void OnresearchTechTimeChanging(System.Nullable<int> value);
    partial void OnresearchTechTimeChanged();
    partial void OnproductivityModifierChanging(System.Nullable<int> value);
    partial void OnproductivityModifierChanged();
    partial void OnmaterialModifierChanging(System.Nullable<short> value);
    partial void OnmaterialModifierChanged();
    partial void OnwasteFactorChanging(System.Nullable<short> value);
    partial void OnwasteFactorChanged();
    partial void OnmaxProductionLimitChanging(System.Nullable<int> value);
    partial void OnmaxProductionLimitChanged();
    #endregion
		
		public invBlueprintType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blueprintTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int blueprintTypeID
		{
			get
			{
				return this._blueprintTypeID;
			}
			set
			{
				if ((this._blueprintTypeID != value))
				{
					this.OnblueprintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._blueprintTypeID = value;
					this.SendPropertyChanged("blueprintTypeID");
					this.OnblueprintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentBlueprintTypeID", DbType="Int")]
		public System.Nullable<int> parentBlueprintTypeID
		{
			get
			{
				return this._parentBlueprintTypeID;
			}
			set
			{
				if ((this._parentBlueprintTypeID != value))
				{
					this.OnparentBlueprintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._parentBlueprintTypeID = value;
					this.SendPropertyChanged("parentBlueprintTypeID");
					this.OnparentBlueprintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productTypeID", DbType="Int")]
		public System.Nullable<int> productTypeID
		{
			get
			{
				return this._productTypeID;
			}
			set
			{
				if ((this._productTypeID != value))
				{
					this.OnproductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._productTypeID = value;
					this.SendPropertyChanged("productTypeID");
					this.OnproductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productionTime", DbType="Int")]
		public System.Nullable<int> productionTime
		{
			get
			{
				return this._productionTime;
			}
			set
			{
				if ((this._productionTime != value))
				{
					this.OnproductionTimeChanging(value);
					this.SendPropertyChanging();
					this._productionTime = value;
					this.SendPropertyChanged("productionTime");
					this.OnproductionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_techLevel", DbType="SmallInt")]
		public System.Nullable<short> techLevel
		{
			get
			{
				return this._techLevel;
			}
			set
			{
				if ((this._techLevel != value))
				{
					this.OntechLevelChanging(value);
					this.SendPropertyChanging();
					this._techLevel = value;
					this.SendPropertyChanged("techLevel");
					this.OntechLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_researchProductivityTime", DbType="Int")]
		public System.Nullable<int> researchProductivityTime
		{
			get
			{
				return this._researchProductivityTime;
			}
			set
			{
				if ((this._researchProductivityTime != value))
				{
					this.OnresearchProductivityTimeChanging(value);
					this.SendPropertyChanging();
					this._researchProductivityTime = value;
					this.SendPropertyChanged("researchProductivityTime");
					this.OnresearchProductivityTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_researchMaterialTime", DbType="Int")]
		public System.Nullable<int> researchMaterialTime
		{
			get
			{
				return this._researchMaterialTime;
			}
			set
			{
				if ((this._researchMaterialTime != value))
				{
					this.OnresearchMaterialTimeChanging(value);
					this.SendPropertyChanging();
					this._researchMaterialTime = value;
					this.SendPropertyChanged("researchMaterialTime");
					this.OnresearchMaterialTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_researchCopyTime", DbType="Int")]
		public System.Nullable<int> researchCopyTime
		{
			get
			{
				return this._researchCopyTime;
			}
			set
			{
				if ((this._researchCopyTime != value))
				{
					this.OnresearchCopyTimeChanging(value);
					this.SendPropertyChanging();
					this._researchCopyTime = value;
					this.SendPropertyChanged("researchCopyTime");
					this.OnresearchCopyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_researchTechTime", DbType="Int")]
		public System.Nullable<int> researchTechTime
		{
			get
			{
				return this._researchTechTime;
			}
			set
			{
				if ((this._researchTechTime != value))
				{
					this.OnresearchTechTimeChanging(value);
					this.SendPropertyChanging();
					this._researchTechTime = value;
					this.SendPropertyChanged("researchTechTime");
					this.OnresearchTechTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productivityModifier", DbType="Int")]
		public System.Nullable<int> productivityModifier
		{
			get
			{
				return this._productivityModifier;
			}
			set
			{
				if ((this._productivityModifier != value))
				{
					this.OnproductivityModifierChanging(value);
					this.SendPropertyChanging();
					this._productivityModifier = value;
					this.SendPropertyChanged("productivityModifier");
					this.OnproductivityModifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialModifier", DbType="SmallInt")]
		public System.Nullable<short> materialModifier
		{
			get
			{
				return this._materialModifier;
			}
			set
			{
				if ((this._materialModifier != value))
				{
					this.OnmaterialModifierChanging(value);
					this.SendPropertyChanging();
					this._materialModifier = value;
					this.SendPropertyChanged("materialModifier");
					this.OnmaterialModifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wasteFactor", DbType="SmallInt")]
		public System.Nullable<short> wasteFactor
		{
			get
			{
				return this._wasteFactor;
			}
			set
			{
				if ((this._wasteFactor != value))
				{
					this.OnwasteFactorChanging(value);
					this.SendPropertyChanging();
					this._wasteFactor = value;
					this.SendPropertyChanged("wasteFactor");
					this.OnwasteFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxProductionLimit", DbType="Int")]
		public System.Nullable<int> maxProductionLimit
		{
			get
			{
				return this._maxProductionLimit;
			}
			set
			{
				if ((this._maxProductionLimit != value))
				{
					this.OnmaxProductionLimitChanging(value);
					this.SendPropertyChanging();
					this._maxProductionLimit = value;
					this.SendPropertyChanged("maxProductionLimit");
					this.OnmaxProductionLimitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invCategories")]
	public partial class invCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _categoryID;
		
		private string _categoryName;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
		private System.Nullable<bool> _published;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryIDChanging(byte value);
    partial void OncategoryIDChanged();
    partial void OncategoryNameChanging(string value);
    partial void OncategoryNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnpublishedChanging(System.Nullable<bool> value);
    partial void OnpublishedChanged();
    #endregion
		
		public invCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryName", DbType="NVarChar(100)")]
		public string categoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				if ((this._categoryName != value))
				{
					this.OncategoryNameChanging(value);
					this.SendPropertyChanging();
					this._categoryName = value;
					this.SendPropertyChanged("categoryName");
					this.OncategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(3000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit")]
		public System.Nullable<bool> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invContrabandTypes")]
	public partial class invContrabandType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _factionID;
		
		private int _typeID;
		
		private System.Nullable<double> _standingLoss;
		
		private System.Nullable<double> _confiscateMinSec;
		
		private System.Nullable<double> _fineByValue;
		
		private System.Nullable<double> _attackMinSec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfactionIDChanging(int value);
    partial void OnfactionIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnstandingLossChanging(System.Nullable<double> value);
    partial void OnstandingLossChanged();
    partial void OnconfiscateMinSecChanging(System.Nullable<double> value);
    partial void OnconfiscateMinSecChanged();
    partial void OnfineByValueChanging(System.Nullable<double> value);
    partial void OnfineByValueChanged();
    partial void OnattackMinSecChanging(System.Nullable<double> value);
    partial void OnattackMinSecChanged();
    #endregion
		
		public invContrabandType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_standingLoss", DbType="Float")]
		public System.Nullable<double> standingLoss
		{
			get
			{
				return this._standingLoss;
			}
			set
			{
				if ((this._standingLoss != value))
				{
					this.OnstandingLossChanging(value);
					this.SendPropertyChanging();
					this._standingLoss = value;
					this.SendPropertyChanged("standingLoss");
					this.OnstandingLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confiscateMinSec", DbType="Float")]
		public System.Nullable<double> confiscateMinSec
		{
			get
			{
				return this._confiscateMinSec;
			}
			set
			{
				if ((this._confiscateMinSec != value))
				{
					this.OnconfiscateMinSecChanging(value);
					this.SendPropertyChanging();
					this._confiscateMinSec = value;
					this.SendPropertyChanged("confiscateMinSec");
					this.OnconfiscateMinSecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fineByValue", DbType="Float")]
		public System.Nullable<double> fineByValue
		{
			get
			{
				return this._fineByValue;
			}
			set
			{
				if ((this._fineByValue != value))
				{
					this.OnfineByValueChanging(value);
					this.SendPropertyChanging();
					this._fineByValue = value;
					this.SendPropertyChanged("fineByValue");
					this.OnfineByValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attackMinSec", DbType="Float")]
		public System.Nullable<double> attackMinSec
		{
			get
			{
				return this._attackMinSec;
			}
			set
			{
				if ((this._attackMinSec != value))
				{
					this.OnattackMinSecChanging(value);
					this.SendPropertyChanging();
					this._attackMinSec = value;
					this.SendPropertyChanged("attackMinSec");
					this.OnattackMinSecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invControlTowerResourcePurposes")]
	public partial class invControlTowerResourcePurpose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _purpose;
		
		private string _purposeText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpurposeChanging(byte value);
    partial void OnpurposeChanged();
    partial void OnpurposeTextChanging(string value);
    partial void OnpurposeTextChanged();
    #endregion
		
		public invControlTowerResourcePurpose()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purpose", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte purpose
		{
			get
			{
				return this._purpose;
			}
			set
			{
				if ((this._purpose != value))
				{
					this.OnpurposeChanging(value);
					this.SendPropertyChanging();
					this._purpose = value;
					this.SendPropertyChanged("purpose");
					this.OnpurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purposeText", DbType="VarChar(100)")]
		public string purposeText
		{
			get
			{
				return this._purposeText;
			}
			set
			{
				if ((this._purposeText != value))
				{
					this.OnpurposeTextChanging(value);
					this.SendPropertyChanging();
					this._purposeText = value;
					this.SendPropertyChanged("purposeText");
					this.OnpurposeTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invControlTowerResources")]
	public partial class invControlTowerResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _controlTowerTypeID;
		
		private int _resourceTypeID;
		
		private System.Nullable<byte> _purpose;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<double> _minSecurityLevel;
		
		private System.Nullable<int> _factionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontrolTowerTypeIDChanging(int value);
    partial void OncontrolTowerTypeIDChanged();
    partial void OnresourceTypeIDChanging(int value);
    partial void OnresourceTypeIDChanged();
    partial void OnpurposeChanging(System.Nullable<byte> value);
    partial void OnpurposeChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnminSecurityLevelChanging(System.Nullable<double> value);
    partial void OnminSecurityLevelChanged();
    partial void OnfactionIDChanging(System.Nullable<int> value);
    partial void OnfactionIDChanged();
    #endregion
		
		public invControlTowerResource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_controlTowerTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int controlTowerTypeID
		{
			get
			{
				return this._controlTowerTypeID;
			}
			set
			{
				if ((this._controlTowerTypeID != value))
				{
					this.OncontrolTowerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._controlTowerTypeID = value;
					this.SendPropertyChanged("controlTowerTypeID");
					this.OncontrolTowerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resourceTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int resourceTypeID
		{
			get
			{
				return this._resourceTypeID;
			}
			set
			{
				if ((this._resourceTypeID != value))
				{
					this.OnresourceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._resourceTypeID = value;
					this.SendPropertyChanged("resourceTypeID");
					this.OnresourceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purpose", DbType="TinyInt")]
		public System.Nullable<byte> purpose
		{
			get
			{
				return this._purpose;
			}
			set
			{
				if ((this._purpose != value))
				{
					this.OnpurposeChanging(value);
					this.SendPropertyChanging();
					this._purpose = value;
					this.SendPropertyChanged("purpose");
					this.OnpurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minSecurityLevel", DbType="Float")]
		public System.Nullable<double> minSecurityLevel
		{
			get
			{
				return this._minSecurityLevel;
			}
			set
			{
				if ((this._minSecurityLevel != value))
				{
					this.OnminSecurityLevelChanging(value);
					this.SendPropertyChanging();
					this._minSecurityLevel = value;
					this.SendPropertyChanged("minSecurityLevel");
					this.OnminSecurityLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int")]
		public System.Nullable<int> factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invFlags")]
	public partial class invFlag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _flagID;
		
		private string _flagName;
		
		private string _flagText;
		
		private System.Nullable<int> _orderID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnflagIDChanging(short value);
    partial void OnflagIDChanged();
    partial void OnflagNameChanging(string value);
    partial void OnflagNameChanged();
    partial void OnflagTextChanging(string value);
    partial void OnflagTextChanged();
    partial void OnorderIDChanging(System.Nullable<int> value);
    partial void OnorderIDChanged();
    #endregion
		
		public invFlag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flagID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short flagID
		{
			get
			{
				return this._flagID;
			}
			set
			{
				if ((this._flagID != value))
				{
					this.OnflagIDChanging(value);
					this.SendPropertyChanging();
					this._flagID = value;
					this.SendPropertyChanged("flagID");
					this.OnflagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flagName", DbType="VarChar(200)")]
		public string flagName
		{
			get
			{
				return this._flagName;
			}
			set
			{
				if ((this._flagName != value))
				{
					this.OnflagNameChanging(value);
					this.SendPropertyChanging();
					this._flagName = value;
					this.SendPropertyChanged("flagName");
					this.OnflagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flagText", DbType="VarChar(100)")]
		public string flagText
		{
			get
			{
				return this._flagText;
			}
			set
			{
				if ((this._flagText != value))
				{
					this.OnflagTextChanging(value);
					this.SendPropertyChanging();
					this._flagText = value;
					this.SendPropertyChanged("flagText");
					this.OnflagTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderID", DbType="Int")]
		public System.Nullable<int> orderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				if ((this._orderID != value))
				{
					this.OnorderIDChanging(value);
					this.SendPropertyChanging();
					this._orderID = value;
					this.SendPropertyChanged("orderID");
					this.OnorderIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invGroups")]
	public partial class invGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _groupID;
		
		private System.Nullable<byte> _categoryID;
		
		private string _groupName;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
		private System.Nullable<bool> _useBasePrice;
		
		private System.Nullable<bool> _allowManufacture;
		
		private System.Nullable<bool> _allowRecycler;
		
		private System.Nullable<bool> _anchored;
		
		private System.Nullable<bool> _anchorable;
		
		private System.Nullable<bool> _fittableNonSingleton;
		
		private System.Nullable<bool> _published;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngroupIDChanging(short value);
    partial void OngroupIDChanged();
    partial void OncategoryIDChanging(System.Nullable<byte> value);
    partial void OncategoryIDChanged();
    partial void OngroupNameChanging(string value);
    partial void OngroupNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnuseBasePriceChanging(System.Nullable<bool> value);
    partial void OnuseBasePriceChanged();
    partial void OnallowManufactureChanging(System.Nullable<bool> value);
    partial void OnallowManufactureChanged();
    partial void OnallowRecyclerChanging(System.Nullable<bool> value);
    partial void OnallowRecyclerChanged();
    partial void OnanchoredChanging(System.Nullable<bool> value);
    partial void OnanchoredChanged();
    partial void OnanchorableChanging(System.Nullable<bool> value);
    partial void OnanchorableChanged();
    partial void OnfittableNonSingletonChanging(System.Nullable<bool> value);
    partial void OnfittableNonSingletonChanged();
    partial void OnpublishedChanging(System.Nullable<bool> value);
    partial void OnpublishedChanged();
    #endregion
		
		public invGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt")]
		public System.Nullable<byte> categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupName", DbType="NVarChar(100)")]
		public string groupName
		{
			get
			{
				return this._groupName;
			}
			set
			{
				if ((this._groupName != value))
				{
					this.OngroupNameChanging(value);
					this.SendPropertyChanging();
					this._groupName = value;
					this.SendPropertyChanged("groupName");
					this.OngroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(3000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useBasePrice", DbType="Bit")]
		public System.Nullable<bool> useBasePrice
		{
			get
			{
				return this._useBasePrice;
			}
			set
			{
				if ((this._useBasePrice != value))
				{
					this.OnuseBasePriceChanging(value);
					this.SendPropertyChanging();
					this._useBasePrice = value;
					this.SendPropertyChanged("useBasePrice");
					this.OnuseBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allowManufacture", DbType="Bit")]
		public System.Nullable<bool> allowManufacture
		{
			get
			{
				return this._allowManufacture;
			}
			set
			{
				if ((this._allowManufacture != value))
				{
					this.OnallowManufactureChanging(value);
					this.SendPropertyChanging();
					this._allowManufacture = value;
					this.SendPropertyChanged("allowManufacture");
					this.OnallowManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allowRecycler", DbType="Bit")]
		public System.Nullable<bool> allowRecycler
		{
			get
			{
				return this._allowRecycler;
			}
			set
			{
				if ((this._allowRecycler != value))
				{
					this.OnallowRecyclerChanging(value);
					this.SendPropertyChanging();
					this._allowRecycler = value;
					this.SendPropertyChanged("allowRecycler");
					this.OnallowRecyclerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anchored", DbType="Bit")]
		public System.Nullable<bool> anchored
		{
			get
			{
				return this._anchored;
			}
			set
			{
				if ((this._anchored != value))
				{
					this.OnanchoredChanging(value);
					this.SendPropertyChanging();
					this._anchored = value;
					this.SendPropertyChanged("anchored");
					this.OnanchoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anchorable", DbType="Bit")]
		public System.Nullable<bool> anchorable
		{
			get
			{
				return this._anchorable;
			}
			set
			{
				if ((this._anchorable != value))
				{
					this.OnanchorableChanging(value);
					this.SendPropertyChanging();
					this._anchorable = value;
					this.SendPropertyChanged("anchorable");
					this.OnanchorableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fittableNonSingleton", DbType="Bit")]
		public System.Nullable<bool> fittableNonSingleton
		{
			get
			{
				return this._fittableNonSingleton;
			}
			set
			{
				if ((this._fittableNonSingleton != value))
				{
					this.OnfittableNonSingletonChanging(value);
					this.SendPropertyChanging();
					this._fittableNonSingleton = value;
					this.SendPropertyChanged("fittableNonSingleton");
					this.OnfittableNonSingletonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit")]
		public System.Nullable<bool> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invMarketGroups")]
	public partial class invMarketGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _marketGroupID;
		
		private System.Nullable<short> _parentGroupID;
		
		private string _marketGroupName;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
		private System.Nullable<bool> _hasTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmarketGroupIDChanging(short value);
    partial void OnmarketGroupIDChanged();
    partial void OnparentGroupIDChanging(System.Nullable<short> value);
    partial void OnparentGroupIDChanged();
    partial void OnmarketGroupNameChanging(string value);
    partial void OnmarketGroupNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnhasTypesChanging(System.Nullable<bool> value);
    partial void OnhasTypesChanged();
    #endregion
		
		public invMarketGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marketGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short marketGroupID
		{
			get
			{
				return this._marketGroupID;
			}
			set
			{
				if ((this._marketGroupID != value))
				{
					this.OnmarketGroupIDChanging(value);
					this.SendPropertyChanging();
					this._marketGroupID = value;
					this.SendPropertyChanged("marketGroupID");
					this.OnmarketGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentGroupID", DbType="SmallInt")]
		public System.Nullable<short> parentGroupID
		{
			get
			{
				return this._parentGroupID;
			}
			set
			{
				if ((this._parentGroupID != value))
				{
					this.OnparentGroupIDChanging(value);
					this.SendPropertyChanging();
					this._parentGroupID = value;
					this.SendPropertyChanged("parentGroupID");
					this.OnparentGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marketGroupName", DbType="NVarChar(100)")]
		public string marketGroupName
		{
			get
			{
				return this._marketGroupName;
			}
			set
			{
				if ((this._marketGroupName != value))
				{
					this.OnmarketGroupNameChanging(value);
					this.SendPropertyChanging();
					this._marketGroupName = value;
					this.SendPropertyChanged("marketGroupName");
					this.OnmarketGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(3000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasTypes", DbType="Bit")]
		public System.Nullable<bool> hasTypes
		{
			get
			{
				return this._hasTypes;
			}
			set
			{
				if ((this._hasTypes != value))
				{
					this.OnhasTypesChanging(value);
					this.SendPropertyChanging();
					this._hasTypes = value;
					this.SendPropertyChanged("hasTypes");
					this.OnhasTypesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invMetaGroups")]
	public partial class invMetaGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _metaGroupID;
		
		private string _metaGroupName;
		
		private string _description;
		
		private System.Nullable<int> _iconID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmetaGroupIDChanging(short value);
    partial void OnmetaGroupIDChanged();
    partial void OnmetaGroupNameChanging(string value);
    partial void OnmetaGroupNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    #endregion
		
		public invMetaGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metaGroupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short metaGroupID
		{
			get
			{
				return this._metaGroupID;
			}
			set
			{
				if ((this._metaGroupID != value))
				{
					this.OnmetaGroupIDChanging(value);
					this.SendPropertyChanging();
					this._metaGroupID = value;
					this.SendPropertyChanged("metaGroupID");
					this.OnmetaGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metaGroupName", DbType="NVarChar(100)")]
		public string metaGroupName
		{
			get
			{
				return this._metaGroupName;
			}
			set
			{
				if ((this._metaGroupName != value))
				{
					this.OnmetaGroupNameChanging(value);
					this.SendPropertyChanging();
					this._metaGroupName = value;
					this.SendPropertyChanged("metaGroupName");
					this.OnmetaGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invMetaTypes")]
	public partial class invMetaType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private System.Nullable<int> _parentTypeID;
		
		private System.Nullable<short> _metaGroupID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnparentTypeIDChanging(System.Nullable<int> value);
    partial void OnparentTypeIDChanged();
    partial void OnmetaGroupIDChanging(System.Nullable<short> value);
    partial void OnmetaGroupIDChanged();
    #endregion
		
		public invMetaType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentTypeID", DbType="Int")]
		public System.Nullable<int> parentTypeID
		{
			get
			{
				return this._parentTypeID;
			}
			set
			{
				if ((this._parentTypeID != value))
				{
					this.OnparentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._parentTypeID = value;
					this.SendPropertyChanged("parentTypeID");
					this.OnparentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metaGroupID", DbType="SmallInt")]
		public System.Nullable<short> metaGroupID
		{
			get
			{
				return this._metaGroupID;
			}
			set
			{
				if ((this._metaGroupID != value))
				{
					this.OnmetaGroupIDChanging(value);
					this.SendPropertyChanging();
					this._metaGroupID = value;
					this.SendPropertyChanged("metaGroupID");
					this.OnmetaGroupIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invTypeMaterials")]
	public partial class invTypeMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private int _materialTypeID;
		
		private int _quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnmaterialTypeIDChanging(int value);
    partial void OnmaterialTypeIDChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public invTypeMaterial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int materialTypeID
		{
			get
			{
				return this._materialTypeID;
			}
			set
			{
				if ((this._materialTypeID != value))
				{
					this.OnmaterialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._materialTypeID = value;
					this.SendPropertyChanged("materialTypeID");
					this.OnmaterialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invTypeReactions")]
	public partial class invTypeReaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reactionTypeID;
		
		private bool _input;
		
		private int _typeID;
		
		private System.Nullable<short> _quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreactionTypeIDChanging(int value);
    partial void OnreactionTypeIDChanged();
    partial void OninputChanging(bool value);
    partial void OninputChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnquantityChanging(System.Nullable<short> value);
    partial void OnquantityChanged();
    #endregion
		
		public invTypeReaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reactionTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int reactionTypeID
		{
			get
			{
				return this._reactionTypeID;
			}
			set
			{
				if ((this._reactionTypeID != value))
				{
					this.OnreactionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._reactionTypeID = value;
					this.SendPropertyChanged("reactionTypeID");
					this.OnreactionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_input", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool input
		{
			get
			{
				return this._input;
			}
			set
			{
				if ((this._input != value))
				{
					this.OninputChanging(value);
					this.SendPropertyChanging();
					this._input = value;
					this.SendPropertyChanged("input");
					this.OninputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="SmallInt")]
		public System.Nullable<short> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invTypes")]
	public partial class invType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private System.Nullable<short> _groupID;
		
		private string _typeName;
		
		private string _description;
		
		private System.Nullable<int> _graphicID;
		
		private System.Nullable<double> _radius;
		
		private System.Nullable<double> _mass;
		
		private System.Nullable<double> _volume;
		
		private System.Nullable<double> _capacity;
		
		private System.Nullable<int> _portionSize;
		
		private System.Nullable<byte> _raceID;
		
		private System.Nullable<decimal> _basePrice;
		
		private System.Nullable<bool> _published;
		
		private System.Nullable<short> _marketGroupID;
		
		private System.Nullable<double> _chanceOfDuplicating;
		
		private System.Nullable<int> _iconID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OngroupIDChanging(System.Nullable<short> value);
    partial void OngroupIDChanged();
    partial void OntypeNameChanging(string value);
    partial void OntypeNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OngraphicIDChanging(System.Nullable<int> value);
    partial void OngraphicIDChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    partial void OnmassChanging(System.Nullable<double> value);
    partial void OnmassChanged();
    partial void OnvolumeChanging(System.Nullable<double> value);
    partial void OnvolumeChanged();
    partial void OncapacityChanging(System.Nullable<double> value);
    partial void OncapacityChanged();
    partial void OnportionSizeChanging(System.Nullable<int> value);
    partial void OnportionSizeChanged();
    partial void OnraceIDChanging(System.Nullable<byte> value);
    partial void OnraceIDChanged();
    partial void OnbasePriceChanging(System.Nullable<decimal> value);
    partial void OnbasePriceChanged();
    partial void OnpublishedChanging(System.Nullable<bool> value);
    partial void OnpublishedChanged();
    partial void OnmarketGroupIDChanging(System.Nullable<short> value);
    partial void OnmarketGroupIDChanged();
    partial void OnchanceOfDuplicatingChanging(System.Nullable<double> value);
    partial void OnchanceOfDuplicatingChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    #endregion
		
		public invType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="SmallInt")]
		public System.Nullable<short> groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(100)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this.OntypeNameChanging(value);
					this.SendPropertyChanging();
					this._typeName = value;
					this.SendPropertyChanged("typeName");
					this.OntypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(3000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_graphicID", DbType="Int")]
		public System.Nullable<int> graphicID
		{
			get
			{
				return this._graphicID;
			}
			set
			{
				if ((this._graphicID != value))
				{
					this.OngraphicIDChanging(value);
					this.SendPropertyChanging();
					this._graphicID = value;
					this.SendPropertyChanged("graphicID");
					this.OngraphicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mass", DbType="Float")]
		public System.Nullable<double> mass
		{
			get
			{
				return this._mass;
			}
			set
			{
				if ((this._mass != value))
				{
					this.OnmassChanging(value);
					this.SendPropertyChanging();
					this._mass = value;
					this.SendPropertyChanged("mass");
					this.OnmassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_volume", DbType="Float")]
		public System.Nullable<double> volume
		{
			get
			{
				return this._volume;
			}
			set
			{
				if ((this._volume != value))
				{
					this.OnvolumeChanging(value);
					this.SendPropertyChanging();
					this._volume = value;
					this.SendPropertyChanged("volume");
					this.OnvolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Float")]
		public System.Nullable<double> capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_portionSize", DbType="Int")]
		public System.Nullable<int> portionSize
		{
			get
			{
				return this._portionSize;
			}
			set
			{
				if ((this._portionSize != value))
				{
					this.OnportionSizeChanging(value);
					this.SendPropertyChanging();
					this._portionSize = value;
					this.SendPropertyChanged("portionSize");
					this.OnportionSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raceID", DbType="TinyInt")]
		public System.Nullable<byte> raceID
		{
			get
			{
				return this._raceID;
			}
			set
			{
				if ((this._raceID != value))
				{
					this.OnraceIDChanging(value);
					this.SendPropertyChanging();
					this._raceID = value;
					this.SendPropertyChanged("raceID");
					this.OnraceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_basePrice", DbType="Money")]
		public System.Nullable<decimal> basePrice
		{
			get
			{
				return this._basePrice;
			}
			set
			{
				if ((this._basePrice != value))
				{
					this.OnbasePriceChanging(value);
					this.SendPropertyChanging();
					this._basePrice = value;
					this.SendPropertyChanged("basePrice");
					this.OnbasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit")]
		public System.Nullable<bool> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marketGroupID", DbType="SmallInt")]
		public System.Nullable<short> marketGroupID
		{
			get
			{
				return this._marketGroupID;
			}
			set
			{
				if ((this._marketGroupID != value))
				{
					this.OnmarketGroupIDChanging(value);
					this.SendPropertyChanging();
					this._marketGroupID = value;
					this.SendPropertyChanged("marketGroupID");
					this.OnmarketGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chanceOfDuplicating", DbType="Float")]
		public System.Nullable<double> chanceOfDuplicating
		{
			get
			{
				return this._chanceOfDuplicating;
			}
			set
			{
				if ((this._chanceOfDuplicating != value))
				{
					this.OnchanceOfDuplicatingChanging(value);
					this.SendPropertyChanging();
					this._chanceOfDuplicating = value;
					this.SendPropertyChanged("chanceOfDuplicating");
					this.OnchanceOfDuplicatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapCelestialStatistics")]
	public partial class mapCelestialStatistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _celestialID;
		
		private System.Nullable<double> _temperature;
		
		private string _spectralClass;
		
		private System.Nullable<double> _luminosity;
		
		private System.Nullable<double> _age;
		
		private System.Nullable<double> _life;
		
		private System.Nullable<double> _orbitRadius;
		
		private System.Nullable<double> _eccentricity;
		
		private System.Nullable<double> _massDust;
		
		private System.Nullable<double> _massGas;
		
		private System.Nullable<bool> _fragmented;
		
		private System.Nullable<double> _density;
		
		private System.Nullable<double> _surfaceGravity;
		
		private System.Nullable<double> _escapeVelocity;
		
		private System.Nullable<double> _orbitPeriod;
		
		private System.Nullable<double> _rotationRate;
		
		private System.Nullable<bool> _locked;
		
		private System.Nullable<double> _pressure;
		
		private System.Nullable<double> _radius;
		
		private System.Nullable<double> _mass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncelestialIDChanging(int value);
    partial void OncelestialIDChanged();
    partial void OntemperatureChanging(System.Nullable<double> value);
    partial void OntemperatureChanged();
    partial void OnspectralClassChanging(string value);
    partial void OnspectralClassChanged();
    partial void OnluminosityChanging(System.Nullable<double> value);
    partial void OnluminosityChanged();
    partial void OnageChanging(System.Nullable<double> value);
    partial void OnageChanged();
    partial void OnlifeChanging(System.Nullable<double> value);
    partial void OnlifeChanged();
    partial void OnorbitRadiusChanging(System.Nullable<double> value);
    partial void OnorbitRadiusChanged();
    partial void OneccentricityChanging(System.Nullable<double> value);
    partial void OneccentricityChanged();
    partial void OnmassDustChanging(System.Nullable<double> value);
    partial void OnmassDustChanged();
    partial void OnmassGasChanging(System.Nullable<double> value);
    partial void OnmassGasChanged();
    partial void OnfragmentedChanging(System.Nullable<bool> value);
    partial void OnfragmentedChanged();
    partial void OndensityChanging(System.Nullable<double> value);
    partial void OndensityChanged();
    partial void OnsurfaceGravityChanging(System.Nullable<double> value);
    partial void OnsurfaceGravityChanged();
    partial void OnescapeVelocityChanging(System.Nullable<double> value);
    partial void OnescapeVelocityChanged();
    partial void OnorbitPeriodChanging(System.Nullable<double> value);
    partial void OnorbitPeriodChanged();
    partial void OnrotationRateChanging(System.Nullable<double> value);
    partial void OnrotationRateChanged();
    partial void OnlockedChanging(System.Nullable<bool> value);
    partial void OnlockedChanged();
    partial void OnpressureChanging(System.Nullable<double> value);
    partial void OnpressureChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    partial void OnmassChanging(System.Nullable<double> value);
    partial void OnmassChanged();
    #endregion
		
		public mapCelestialStatistic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celestialID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int celestialID
		{
			get
			{
				return this._celestialID;
			}
			set
			{
				if ((this._celestialID != value))
				{
					this.OncelestialIDChanging(value);
					this.SendPropertyChanging();
					this._celestialID = value;
					this.SendPropertyChanged("celestialID");
					this.OncelestialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temperature", DbType="Float")]
		public System.Nullable<double> temperature
		{
			get
			{
				return this._temperature;
			}
			set
			{
				if ((this._temperature != value))
				{
					this.OntemperatureChanging(value);
					this.SendPropertyChanging();
					this._temperature = value;
					this.SendPropertyChanged("temperature");
					this.OntemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spectralClass", DbType="VarChar(10)")]
		public string spectralClass
		{
			get
			{
				return this._spectralClass;
			}
			set
			{
				if ((this._spectralClass != value))
				{
					this.OnspectralClassChanging(value);
					this.SendPropertyChanging();
					this._spectralClass = value;
					this.SendPropertyChanged("spectralClass");
					this.OnspectralClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luminosity", DbType="Float")]
		public System.Nullable<double> luminosity
		{
			get
			{
				return this._luminosity;
			}
			set
			{
				if ((this._luminosity != value))
				{
					this.OnluminosityChanging(value);
					this.SendPropertyChanging();
					this._luminosity = value;
					this.SendPropertyChanged("luminosity");
					this.OnluminosityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Float")]
		public System.Nullable<double> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_life", DbType="Float")]
		public System.Nullable<double> life
		{
			get
			{
				return this._life;
			}
			set
			{
				if ((this._life != value))
				{
					this.OnlifeChanging(value);
					this.SendPropertyChanging();
					this._life = value;
					this.SendPropertyChanged("life");
					this.OnlifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orbitRadius", DbType="Float")]
		public System.Nullable<double> orbitRadius
		{
			get
			{
				return this._orbitRadius;
			}
			set
			{
				if ((this._orbitRadius != value))
				{
					this.OnorbitRadiusChanging(value);
					this.SendPropertyChanging();
					this._orbitRadius = value;
					this.SendPropertyChanged("orbitRadius");
					this.OnorbitRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eccentricity", DbType="Float")]
		public System.Nullable<double> eccentricity
		{
			get
			{
				return this._eccentricity;
			}
			set
			{
				if ((this._eccentricity != value))
				{
					this.OneccentricityChanging(value);
					this.SendPropertyChanging();
					this._eccentricity = value;
					this.SendPropertyChanged("eccentricity");
					this.OneccentricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_massDust", DbType="Float")]
		public System.Nullable<double> massDust
		{
			get
			{
				return this._massDust;
			}
			set
			{
				if ((this._massDust != value))
				{
					this.OnmassDustChanging(value);
					this.SendPropertyChanging();
					this._massDust = value;
					this.SendPropertyChanged("massDust");
					this.OnmassDustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_massGas", DbType="Float")]
		public System.Nullable<double> massGas
		{
			get
			{
				return this._massGas;
			}
			set
			{
				if ((this._massGas != value))
				{
					this.OnmassGasChanging(value);
					this.SendPropertyChanging();
					this._massGas = value;
					this.SendPropertyChanged("massGas");
					this.OnmassGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fragmented", DbType="Bit")]
		public System.Nullable<bool> fragmented
		{
			get
			{
				return this._fragmented;
			}
			set
			{
				if ((this._fragmented != value))
				{
					this.OnfragmentedChanging(value);
					this.SendPropertyChanging();
					this._fragmented = value;
					this.SendPropertyChanged("fragmented");
					this.OnfragmentedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_density", DbType="Float")]
		public System.Nullable<double> density
		{
			get
			{
				return this._density;
			}
			set
			{
				if ((this._density != value))
				{
					this.OndensityChanging(value);
					this.SendPropertyChanging();
					this._density = value;
					this.SendPropertyChanged("density");
					this.OndensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surfaceGravity", DbType="Float")]
		public System.Nullable<double> surfaceGravity
		{
			get
			{
				return this._surfaceGravity;
			}
			set
			{
				if ((this._surfaceGravity != value))
				{
					this.OnsurfaceGravityChanging(value);
					this.SendPropertyChanging();
					this._surfaceGravity = value;
					this.SendPropertyChanged("surfaceGravity");
					this.OnsurfaceGravityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_escapeVelocity", DbType="Float")]
		public System.Nullable<double> escapeVelocity
		{
			get
			{
				return this._escapeVelocity;
			}
			set
			{
				if ((this._escapeVelocity != value))
				{
					this.OnescapeVelocityChanging(value);
					this.SendPropertyChanging();
					this._escapeVelocity = value;
					this.SendPropertyChanged("escapeVelocity");
					this.OnescapeVelocityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orbitPeriod", DbType="Float")]
		public System.Nullable<double> orbitPeriod
		{
			get
			{
				return this._orbitPeriod;
			}
			set
			{
				if ((this._orbitPeriod != value))
				{
					this.OnorbitPeriodChanging(value);
					this.SendPropertyChanging();
					this._orbitPeriod = value;
					this.SendPropertyChanged("orbitPeriod");
					this.OnorbitPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rotationRate", DbType="Float")]
		public System.Nullable<double> rotationRate
		{
			get
			{
				return this._rotationRate;
			}
			set
			{
				if ((this._rotationRate != value))
				{
					this.OnrotationRateChanging(value);
					this.SendPropertyChanging();
					this._rotationRate = value;
					this.SendPropertyChanged("rotationRate");
					this.OnrotationRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked", DbType="Bit")]
		public System.Nullable<bool> locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if ((this._locked != value))
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pressure", DbType="Float")]
		public System.Nullable<double> pressure
		{
			get
			{
				return this._pressure;
			}
			set
			{
				if ((this._pressure != value))
				{
					this.OnpressureChanging(value);
					this.SendPropertyChanging();
					this._pressure = value;
					this.SendPropertyChanged("pressure");
					this.OnpressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mass", DbType="Float")]
		public System.Nullable<double> mass
		{
			get
			{
				return this._mass;
			}
			set
			{
				if ((this._mass != value))
				{
					this.OnmassChanging(value);
					this.SendPropertyChanging();
					this._mass = value;
					this.SendPropertyChanged("mass");
					this.OnmassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapConstellationJumps")]
	public partial class mapConstellationJump : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _fromRegionID;
		
		private int _fromConstellationID;
		
		private int _toConstellationID;
		
		private System.Nullable<int> _toRegionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfromRegionIDChanging(System.Nullable<int> value);
    partial void OnfromRegionIDChanged();
    partial void OnfromConstellationIDChanging(int value);
    partial void OnfromConstellationIDChanged();
    partial void OntoConstellationIDChanging(int value);
    partial void OntoConstellationIDChanged();
    partial void OntoRegionIDChanging(System.Nullable<int> value);
    partial void OntoRegionIDChanged();
    #endregion
		
		public mapConstellationJump()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromRegionID", DbType="Int")]
		public System.Nullable<int> fromRegionID
		{
			get
			{
				return this._fromRegionID;
			}
			set
			{
				if ((this._fromRegionID != value))
				{
					this.OnfromRegionIDChanging(value);
					this.SendPropertyChanging();
					this._fromRegionID = value;
					this.SendPropertyChanged("fromRegionID");
					this.OnfromRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromConstellationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fromConstellationID
		{
			get
			{
				return this._fromConstellationID;
			}
			set
			{
				if ((this._fromConstellationID != value))
				{
					this.OnfromConstellationIDChanging(value);
					this.SendPropertyChanging();
					this._fromConstellationID = value;
					this.SendPropertyChanged("fromConstellationID");
					this.OnfromConstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toConstellationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int toConstellationID
		{
			get
			{
				return this._toConstellationID;
			}
			set
			{
				if ((this._toConstellationID != value))
				{
					this.OntoConstellationIDChanging(value);
					this.SendPropertyChanging();
					this._toConstellationID = value;
					this.SendPropertyChanged("toConstellationID");
					this.OntoConstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toRegionID", DbType="Int")]
		public System.Nullable<int> toRegionID
		{
			get
			{
				return this._toRegionID;
			}
			set
			{
				if ((this._toRegionID != value))
				{
					this.OntoRegionIDChanging(value);
					this.SendPropertyChanging();
					this._toRegionID = value;
					this.SendPropertyChanged("toRegionID");
					this.OntoRegionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapConstellations")]
	public partial class mapConstellation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _regionID;
		
		private int _constellationID;
		
		private string _constellationName;
		
		private System.Nullable<double> _x;
		
		private System.Nullable<double> _y;
		
		private System.Nullable<double> _z;
		
		private System.Nullable<double> _xMin;
		
		private System.Nullable<double> _xMax;
		
		private System.Nullable<double> _yMin;
		
		private System.Nullable<double> _yMax;
		
		private System.Nullable<double> _zMin;
		
		private System.Nullable<double> _zMax;
		
		private System.Nullable<int> _factionID;
		
		private System.Nullable<double> _radius;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnregionIDChanging(System.Nullable<int> value);
    partial void OnregionIDChanged();
    partial void OnconstellationIDChanging(int value);
    partial void OnconstellationIDChanged();
    partial void OnconstellationNameChanging(string value);
    partial void OnconstellationNameChanged();
    partial void OnxChanging(System.Nullable<double> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<double> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<double> value);
    partial void OnzChanged();
    partial void OnxMinChanging(System.Nullable<double> value);
    partial void OnxMinChanged();
    partial void OnxMaxChanging(System.Nullable<double> value);
    partial void OnxMaxChanged();
    partial void OnyMinChanging(System.Nullable<double> value);
    partial void OnyMinChanged();
    partial void OnyMaxChanging(System.Nullable<double> value);
    partial void OnyMaxChanged();
    partial void OnzMinChanging(System.Nullable<double> value);
    partial void OnzMinChanged();
    partial void OnzMaxChanging(System.Nullable<double> value);
    partial void OnzMaxChanged();
    partial void OnfactionIDChanging(System.Nullable<int> value);
    partial void OnfactionIDChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    #endregion
		
		public mapConstellation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionID", DbType="Int")]
		public System.Nullable<int> regionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				if ((this._regionID != value))
				{
					this.OnregionIDChanging(value);
					this.SendPropertyChanging();
					this._regionID = value;
					this.SendPropertyChanged("regionID");
					this.OnregionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_constellationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int constellationID
		{
			get
			{
				return this._constellationID;
			}
			set
			{
				if ((this._constellationID != value))
				{
					this.OnconstellationIDChanging(value);
					this.SendPropertyChanging();
					this._constellationID = value;
					this.SendPropertyChanged("constellationID");
					this.OnconstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_constellationName", DbType="NVarChar(100)")]
		public string constellationName
		{
			get
			{
				return this._constellationName;
			}
			set
			{
				if ((this._constellationName != value))
				{
					this.OnconstellationNameChanging(value);
					this.SendPropertyChanging();
					this._constellationName = value;
					this.SendPropertyChanged("constellationName");
					this.OnconstellationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float")]
		public System.Nullable<double> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float")]
		public System.Nullable<double> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float")]
		public System.Nullable<double> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMin", DbType="Float")]
		public System.Nullable<double> xMin
		{
			get
			{
				return this._xMin;
			}
			set
			{
				if ((this._xMin != value))
				{
					this.OnxMinChanging(value);
					this.SendPropertyChanging();
					this._xMin = value;
					this.SendPropertyChanged("xMin");
					this.OnxMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMax", DbType="Float")]
		public System.Nullable<double> xMax
		{
			get
			{
				return this._xMax;
			}
			set
			{
				if ((this._xMax != value))
				{
					this.OnxMaxChanging(value);
					this.SendPropertyChanging();
					this._xMax = value;
					this.SendPropertyChanged("xMax");
					this.OnxMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMin", DbType="Float")]
		public System.Nullable<double> yMin
		{
			get
			{
				return this._yMin;
			}
			set
			{
				if ((this._yMin != value))
				{
					this.OnyMinChanging(value);
					this.SendPropertyChanging();
					this._yMin = value;
					this.SendPropertyChanged("yMin");
					this.OnyMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMax", DbType="Float")]
		public System.Nullable<double> yMax
		{
			get
			{
				return this._yMax;
			}
			set
			{
				if ((this._yMax != value))
				{
					this.OnyMaxChanging(value);
					this.SendPropertyChanging();
					this._yMax = value;
					this.SendPropertyChanged("yMax");
					this.OnyMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMin", DbType="Float")]
		public System.Nullable<double> zMin
		{
			get
			{
				return this._zMin;
			}
			set
			{
				if ((this._zMin != value))
				{
					this.OnzMinChanging(value);
					this.SendPropertyChanging();
					this._zMin = value;
					this.SendPropertyChanged("zMin");
					this.OnzMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMax", DbType="Float")]
		public System.Nullable<double> zMax
		{
			get
			{
				return this._zMax;
			}
			set
			{
				if ((this._zMax != value))
				{
					this.OnzMaxChanging(value);
					this.SendPropertyChanging();
					this._zMax = value;
					this.SendPropertyChanged("zMax");
					this.OnzMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int")]
		public System.Nullable<int> factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapDenormalize")]
	public partial class mapDenormalize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemID;
		
		private System.Nullable<int> _typeID;
		
		private System.Nullable<short> _groupID;
		
		private System.Nullable<int> _solarSystemID;
		
		private System.Nullable<int> _constellationID;
		
		private System.Nullable<int> _regionID;
		
		private System.Nullable<int> _orbitID;
		
		private System.Nullable<double> _x;
		
		private System.Nullable<double> _y;
		
		private System.Nullable<double> _z;
		
		private System.Nullable<double> _radius;
		
		private string _itemName;
		
		private System.Nullable<double> _security;
		
		private System.Nullable<byte> _celestialIndex;
		
		private System.Nullable<byte> _orbitIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIDChanging(int value);
    partial void OnitemIDChanged();
    partial void OntypeIDChanging(System.Nullable<int> value);
    partial void OntypeIDChanged();
    partial void OngroupIDChanging(System.Nullable<short> value);
    partial void OngroupIDChanged();
    partial void OnsolarSystemIDChanging(System.Nullable<int> value);
    partial void OnsolarSystemIDChanged();
    partial void OnconstellationIDChanging(System.Nullable<int> value);
    partial void OnconstellationIDChanged();
    partial void OnregionIDChanging(System.Nullable<int> value);
    partial void OnregionIDChanged();
    partial void OnorbitIDChanging(System.Nullable<int> value);
    partial void OnorbitIDChanged();
    partial void OnxChanging(System.Nullable<double> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<double> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<double> value);
    partial void OnzChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OnsecurityChanging(System.Nullable<double> value);
    partial void OnsecurityChanged();
    partial void OncelestialIndexChanging(System.Nullable<byte> value);
    partial void OncelestialIndexChanged();
    partial void OnorbitIndexChanging(System.Nullable<byte> value);
    partial void OnorbitIndexChanged();
    #endregion
		
		public mapDenormalize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemID
		{
			get
			{
				return this._itemID;
			}
			set
			{
				if ((this._itemID != value))
				{
					this.OnitemIDChanging(value);
					this.SendPropertyChanging();
					this._itemID = value;
					this.SendPropertyChanged("itemID");
					this.OnitemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int")]
		public System.Nullable<int> typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="SmallInt")]
		public System.Nullable<short> groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="Int")]
		public System.Nullable<int> solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_constellationID", DbType="Int")]
		public System.Nullable<int> constellationID
		{
			get
			{
				return this._constellationID;
			}
			set
			{
				if ((this._constellationID != value))
				{
					this.OnconstellationIDChanging(value);
					this.SendPropertyChanging();
					this._constellationID = value;
					this.SendPropertyChanged("constellationID");
					this.OnconstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionID", DbType="Int")]
		public System.Nullable<int> regionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				if ((this._regionID != value))
				{
					this.OnregionIDChanging(value);
					this.SendPropertyChanging();
					this._regionID = value;
					this.SendPropertyChanged("regionID");
					this.OnregionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orbitID", DbType="Int")]
		public System.Nullable<int> orbitID
		{
			get
			{
				return this._orbitID;
			}
			set
			{
				if ((this._orbitID != value))
				{
					this.OnorbitIDChanging(value);
					this.SendPropertyChanging();
					this._orbitID = value;
					this.SendPropertyChanged("orbitID");
					this.OnorbitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float")]
		public System.Nullable<double> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float")]
		public System.Nullable<double> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float")]
		public System.Nullable<double> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(100)")]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this.OnitemNameChanging(value);
					this.SendPropertyChanging();
					this._itemName = value;
					this.SendPropertyChanged("itemName");
					this.OnitemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security", DbType="Float")]
		public System.Nullable<double> security
		{
			get
			{
				return this._security;
			}
			set
			{
				if ((this._security != value))
				{
					this.OnsecurityChanging(value);
					this.SendPropertyChanging();
					this._security = value;
					this.SendPropertyChanged("security");
					this.OnsecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celestialIndex", DbType="TinyInt")]
		public System.Nullable<byte> celestialIndex
		{
			get
			{
				return this._celestialIndex;
			}
			set
			{
				if ((this._celestialIndex != value))
				{
					this.OncelestialIndexChanging(value);
					this.SendPropertyChanging();
					this._celestialIndex = value;
					this.SendPropertyChanged("celestialIndex");
					this.OncelestialIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orbitIndex", DbType="TinyInt")]
		public System.Nullable<byte> orbitIndex
		{
			get
			{
				return this._orbitIndex;
			}
			set
			{
				if ((this._orbitIndex != value))
				{
					this.OnorbitIndexChanging(value);
					this.SendPropertyChanging();
					this._orbitIndex = value;
					this.SendPropertyChanged("orbitIndex");
					this.OnorbitIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapJumps")]
	public partial class mapJump : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stargateID;
		
		private System.Nullable<int> _celestialID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstargateIDChanging(int value);
    partial void OnstargateIDChanged();
    partial void OncelestialIDChanging(System.Nullable<int> value);
    partial void OncelestialIDChanged();
    #endregion
		
		public mapJump()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stargateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stargateID
		{
			get
			{
				return this._stargateID;
			}
			set
			{
				if ((this._stargateID != value))
				{
					this.OnstargateIDChanging(value);
					this.SendPropertyChanging();
					this._stargateID = value;
					this.SendPropertyChanged("stargateID");
					this.OnstargateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celestialID", DbType="Int")]
		public System.Nullable<int> celestialID
		{
			get
			{
				return this._celestialID;
			}
			set
			{
				if ((this._celestialID != value))
				{
					this.OncelestialIDChanging(value);
					this.SendPropertyChanging();
					this._celestialID = value;
					this.SendPropertyChanged("celestialID");
					this.OncelestialIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapLandmarks")]
	public partial class mapLandmark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _landmarkID;
		
		private string _landmarkName;
		
		private string _description;
		
		private System.Nullable<int> _locationID;
		
		private System.Nullable<double> _x;
		
		private System.Nullable<double> _y;
		
		private System.Nullable<double> _z;
		
		private System.Nullable<double> _radius;
		
		private System.Nullable<int> _iconID;
		
		private System.Nullable<byte> _importance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlandmarkIDChanging(short value);
    partial void OnlandmarkIDChanged();
    partial void OnlandmarkNameChanging(string value);
    partial void OnlandmarkNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnlocationIDChanging(System.Nullable<int> value);
    partial void OnlocationIDChanged();
    partial void OnxChanging(System.Nullable<double> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<double> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<double> value);
    partial void OnzChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnimportanceChanging(System.Nullable<byte> value);
    partial void OnimportanceChanged();
    #endregion
		
		public mapLandmark()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_landmarkID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short landmarkID
		{
			get
			{
				return this._landmarkID;
			}
			set
			{
				if ((this._landmarkID != value))
				{
					this.OnlandmarkIDChanging(value);
					this.SendPropertyChanging();
					this._landmarkID = value;
					this.SendPropertyChanged("landmarkID");
					this.OnlandmarkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_landmarkName", DbType="VarChar(100)")]
		public string landmarkName
		{
			get
			{
				return this._landmarkName;
			}
			set
			{
				if ((this._landmarkName != value))
				{
					this.OnlandmarkNameChanging(value);
					this.SendPropertyChanging();
					this._landmarkName = value;
					this.SendPropertyChanged("landmarkName");
					this.OnlandmarkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(7000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", DbType="Int")]
		public System.Nullable<int> locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float")]
		public System.Nullable<double> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float")]
		public System.Nullable<double> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float")]
		public System.Nullable<double> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_importance", DbType="TinyInt")]
		public System.Nullable<byte> importance
		{
			get
			{
				return this._importance;
			}
			set
			{
				if ((this._importance != value))
				{
					this.OnimportanceChanging(value);
					this.SendPropertyChanging();
					this._importance = value;
					this.SendPropertyChanged("importance");
					this.OnimportanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapLocationScenes")]
	public partial class mapLocationScene : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _locationID;
		
		private System.Nullable<byte> _sceneID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlocationIDChanging(int value);
    partial void OnlocationIDChanged();
    partial void OnsceneIDChanging(System.Nullable<byte> value);
    partial void OnsceneIDChanged();
    #endregion
		
		public mapLocationScene()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sceneID", DbType="TinyInt")]
		public System.Nullable<byte> sceneID
		{
			get
			{
				return this._sceneID;
			}
			set
			{
				if ((this._sceneID != value))
				{
					this.OnsceneIDChanging(value);
					this.SendPropertyChanging();
					this._sceneID = value;
					this.SendPropertyChanged("sceneID");
					this.OnsceneIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapLocationWormholeClasses")]
	public partial class mapLocationWormholeClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _locationID;
		
		private System.Nullable<byte> _wormholeClassID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlocationIDChanging(int value);
    partial void OnlocationIDChanged();
    partial void OnwormholeClassIDChanging(System.Nullable<byte> value);
    partial void OnwormholeClassIDChanged();
    #endregion
		
		public mapLocationWormholeClass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wormholeClassID", DbType="TinyInt")]
		public System.Nullable<byte> wormholeClassID
		{
			get
			{
				return this._wormholeClassID;
			}
			set
			{
				if ((this._wormholeClassID != value))
				{
					this.OnwormholeClassIDChanging(value);
					this.SendPropertyChanging();
					this._wormholeClassID = value;
					this.SendPropertyChanged("wormholeClassID");
					this.OnwormholeClassIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapRegionJumps")]
	public partial class mapRegionJump : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fromRegionID;
		
		private int _toRegionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfromRegionIDChanging(int value);
    partial void OnfromRegionIDChanged();
    partial void OntoRegionIDChanging(int value);
    partial void OntoRegionIDChanged();
    #endregion
		
		public mapRegionJump()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromRegionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fromRegionID
		{
			get
			{
				return this._fromRegionID;
			}
			set
			{
				if ((this._fromRegionID != value))
				{
					this.OnfromRegionIDChanging(value);
					this.SendPropertyChanging();
					this._fromRegionID = value;
					this.SendPropertyChanged("fromRegionID");
					this.OnfromRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toRegionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int toRegionID
		{
			get
			{
				return this._toRegionID;
			}
			set
			{
				if ((this._toRegionID != value))
				{
					this.OntoRegionIDChanging(value);
					this.SendPropertyChanging();
					this._toRegionID = value;
					this.SendPropertyChanged("toRegionID");
					this.OntoRegionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapRegions")]
	public partial class mapRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _regionID;
		
		private string _regionName;
		
		private System.Nullable<double> _x;
		
		private System.Nullable<double> _y;
		
		private System.Nullable<double> _z;
		
		private System.Nullable<double> _xMin;
		
		private System.Nullable<double> _xMax;
		
		private System.Nullable<double> _yMin;
		
		private System.Nullable<double> _yMax;
		
		private System.Nullable<double> _zMin;
		
		private System.Nullable<double> _zMax;
		
		private System.Nullable<int> _factionID;
		
		private System.Nullable<double> _radius;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnregionIDChanging(int value);
    partial void OnregionIDChanged();
    partial void OnregionNameChanging(string value);
    partial void OnregionNameChanged();
    partial void OnxChanging(System.Nullable<double> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<double> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<double> value);
    partial void OnzChanged();
    partial void OnxMinChanging(System.Nullable<double> value);
    partial void OnxMinChanged();
    partial void OnxMaxChanging(System.Nullable<double> value);
    partial void OnxMaxChanged();
    partial void OnyMinChanging(System.Nullable<double> value);
    partial void OnyMinChanged();
    partial void OnyMaxChanging(System.Nullable<double> value);
    partial void OnyMaxChanged();
    partial void OnzMinChanging(System.Nullable<double> value);
    partial void OnzMinChanged();
    partial void OnzMaxChanging(System.Nullable<double> value);
    partial void OnzMaxChanged();
    partial void OnfactionIDChanging(System.Nullable<int> value);
    partial void OnfactionIDChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    #endregion
		
		public mapRegion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int regionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				if ((this._regionID != value))
				{
					this.OnregionIDChanging(value);
					this.SendPropertyChanging();
					this._regionID = value;
					this.SendPropertyChanged("regionID");
					this.OnregionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionName", DbType="NVarChar(100)")]
		public string regionName
		{
			get
			{
				return this._regionName;
			}
			set
			{
				if ((this._regionName != value))
				{
					this.OnregionNameChanging(value);
					this.SendPropertyChanging();
					this._regionName = value;
					this.SendPropertyChanged("regionName");
					this.OnregionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float")]
		public System.Nullable<double> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float")]
		public System.Nullable<double> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float")]
		public System.Nullable<double> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMin", DbType="Float")]
		public System.Nullable<double> xMin
		{
			get
			{
				return this._xMin;
			}
			set
			{
				if ((this._xMin != value))
				{
					this.OnxMinChanging(value);
					this.SendPropertyChanging();
					this._xMin = value;
					this.SendPropertyChanged("xMin");
					this.OnxMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMax", DbType="Float")]
		public System.Nullable<double> xMax
		{
			get
			{
				return this._xMax;
			}
			set
			{
				if ((this._xMax != value))
				{
					this.OnxMaxChanging(value);
					this.SendPropertyChanging();
					this._xMax = value;
					this.SendPropertyChanged("xMax");
					this.OnxMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMin", DbType="Float")]
		public System.Nullable<double> yMin
		{
			get
			{
				return this._yMin;
			}
			set
			{
				if ((this._yMin != value))
				{
					this.OnyMinChanging(value);
					this.SendPropertyChanging();
					this._yMin = value;
					this.SendPropertyChanged("yMin");
					this.OnyMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMax", DbType="Float")]
		public System.Nullable<double> yMax
		{
			get
			{
				return this._yMax;
			}
			set
			{
				if ((this._yMax != value))
				{
					this.OnyMaxChanging(value);
					this.SendPropertyChanging();
					this._yMax = value;
					this.SendPropertyChanged("yMax");
					this.OnyMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMin", DbType="Float")]
		public System.Nullable<double> zMin
		{
			get
			{
				return this._zMin;
			}
			set
			{
				if ((this._zMin != value))
				{
					this.OnzMinChanging(value);
					this.SendPropertyChanging();
					this._zMin = value;
					this.SendPropertyChanged("zMin");
					this.OnzMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMax", DbType="Float")]
		public System.Nullable<double> zMax
		{
			get
			{
				return this._zMax;
			}
			set
			{
				if ((this._zMax != value))
				{
					this.OnzMaxChanging(value);
					this.SendPropertyChanging();
					this._zMax = value;
					this.SendPropertyChanged("zMax");
					this.OnzMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int")]
		public System.Nullable<int> factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapSolarSystemJumps")]
	public partial class mapSolarSystemJump : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _fromRegionID;
		
		private System.Nullable<int> _fromConstellationID;
		
		private int _fromSolarSystemID;
		
		private int _toSolarSystemID;
		
		private System.Nullable<int> _toConstellationID;
		
		private System.Nullable<int> _toRegionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfromRegionIDChanging(System.Nullable<int> value);
    partial void OnfromRegionIDChanged();
    partial void OnfromConstellationIDChanging(System.Nullable<int> value);
    partial void OnfromConstellationIDChanged();
    partial void OnfromSolarSystemIDChanging(int value);
    partial void OnfromSolarSystemIDChanged();
    partial void OntoSolarSystemIDChanging(int value);
    partial void OntoSolarSystemIDChanged();
    partial void OntoConstellationIDChanging(System.Nullable<int> value);
    partial void OntoConstellationIDChanged();
    partial void OntoRegionIDChanging(System.Nullable<int> value);
    partial void OntoRegionIDChanged();
    #endregion
		
		public mapSolarSystemJump()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromRegionID", DbType="Int")]
		public System.Nullable<int> fromRegionID
		{
			get
			{
				return this._fromRegionID;
			}
			set
			{
				if ((this._fromRegionID != value))
				{
					this.OnfromRegionIDChanging(value);
					this.SendPropertyChanging();
					this._fromRegionID = value;
					this.SendPropertyChanged("fromRegionID");
					this.OnfromRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromConstellationID", DbType="Int")]
		public System.Nullable<int> fromConstellationID
		{
			get
			{
				return this._fromConstellationID;
			}
			set
			{
				if ((this._fromConstellationID != value))
				{
					this.OnfromConstellationIDChanging(value);
					this.SendPropertyChanging();
					this._fromConstellationID = value;
					this.SendPropertyChanged("fromConstellationID");
					this.OnfromConstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromSolarSystemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int fromSolarSystemID
		{
			get
			{
				return this._fromSolarSystemID;
			}
			set
			{
				if ((this._fromSolarSystemID != value))
				{
					this.OnfromSolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._fromSolarSystemID = value;
					this.SendPropertyChanged("fromSolarSystemID");
					this.OnfromSolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toSolarSystemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int toSolarSystemID
		{
			get
			{
				return this._toSolarSystemID;
			}
			set
			{
				if ((this._toSolarSystemID != value))
				{
					this.OntoSolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._toSolarSystemID = value;
					this.SendPropertyChanged("toSolarSystemID");
					this.OntoSolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toConstellationID", DbType="Int")]
		public System.Nullable<int> toConstellationID
		{
			get
			{
				return this._toConstellationID;
			}
			set
			{
				if ((this._toConstellationID != value))
				{
					this.OntoConstellationIDChanging(value);
					this.SendPropertyChanging();
					this._toConstellationID = value;
					this.SendPropertyChanged("toConstellationID");
					this.OntoConstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toRegionID", DbType="Int")]
		public System.Nullable<int> toRegionID
		{
			get
			{
				return this._toRegionID;
			}
			set
			{
				if ((this._toRegionID != value))
				{
					this.OntoRegionIDChanging(value);
					this.SendPropertyChanging();
					this._toRegionID = value;
					this.SendPropertyChanged("toRegionID");
					this.OntoRegionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapSolarSystems")]
	public partial class mapSolarSystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _regionID;
		
		private System.Nullable<int> _constellationID;
		
		private int _solarSystemID;
		
		private string _solarSystemName;
		
		private System.Nullable<double> _x;
		
		private System.Nullable<double> _y;
		
		private System.Nullable<double> _z;
		
		private System.Nullable<double> _xMin;
		
		private System.Nullable<double> _xMax;
		
		private System.Nullable<double> _yMin;
		
		private System.Nullable<double> _yMax;
		
		private System.Nullable<double> _zMin;
		
		private System.Nullable<double> _zMax;
		
		private System.Nullable<double> _luminosity;
		
		private System.Nullable<bool> _border;
		
		private System.Nullable<bool> _fringe;
		
		private System.Nullable<bool> _corridor;
		
		private System.Nullable<bool> _hub;
		
		private System.Nullable<bool> _international;
		
		private System.Nullable<bool> _regional;
		
		private System.Nullable<bool> _constellation;
		
		private System.Nullable<double> _security;
		
		private System.Nullable<int> _factionID;
		
		private System.Nullable<double> _radius;
		
		private System.Nullable<int> _sunTypeID;
		
		private string _securityClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnregionIDChanging(System.Nullable<int> value);
    partial void OnregionIDChanged();
    partial void OnconstellationIDChanging(System.Nullable<int> value);
    partial void OnconstellationIDChanged();
    partial void OnsolarSystemIDChanging(int value);
    partial void OnsolarSystemIDChanged();
    partial void OnsolarSystemNameChanging(string value);
    partial void OnsolarSystemNameChanged();
    partial void OnxChanging(System.Nullable<double> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<double> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<double> value);
    partial void OnzChanged();
    partial void OnxMinChanging(System.Nullable<double> value);
    partial void OnxMinChanged();
    partial void OnxMaxChanging(System.Nullable<double> value);
    partial void OnxMaxChanged();
    partial void OnyMinChanging(System.Nullable<double> value);
    partial void OnyMinChanged();
    partial void OnyMaxChanging(System.Nullable<double> value);
    partial void OnyMaxChanged();
    partial void OnzMinChanging(System.Nullable<double> value);
    partial void OnzMinChanged();
    partial void OnzMaxChanging(System.Nullable<double> value);
    partial void OnzMaxChanged();
    partial void OnluminosityChanging(System.Nullable<double> value);
    partial void OnluminosityChanged();
    partial void OnborderChanging(System.Nullable<bool> value);
    partial void OnborderChanged();
    partial void OnfringeChanging(System.Nullable<bool> value);
    partial void OnfringeChanged();
    partial void OncorridorChanging(System.Nullable<bool> value);
    partial void OncorridorChanged();
    partial void OnhubChanging(System.Nullable<bool> value);
    partial void OnhubChanged();
    partial void OninternationalChanging(System.Nullable<bool> value);
    partial void OninternationalChanged();
    partial void OnregionalChanging(System.Nullable<bool> value);
    partial void OnregionalChanged();
    partial void OnconstellationChanging(System.Nullable<bool> value);
    partial void OnconstellationChanged();
    partial void OnsecurityChanging(System.Nullable<double> value);
    partial void OnsecurityChanged();
    partial void OnfactionIDChanging(System.Nullable<int> value);
    partial void OnfactionIDChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    partial void OnsunTypeIDChanging(System.Nullable<int> value);
    partial void OnsunTypeIDChanged();
    partial void OnsecurityClassChanging(string value);
    partial void OnsecurityClassChanged();
    #endregion
		
		public mapSolarSystem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionID", DbType="Int")]
		public System.Nullable<int> regionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				if ((this._regionID != value))
				{
					this.OnregionIDChanging(value);
					this.SendPropertyChanging();
					this._regionID = value;
					this.SendPropertyChanged("regionID");
					this.OnregionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_constellationID", DbType="Int")]
		public System.Nullable<int> constellationID
		{
			get
			{
				return this._constellationID;
			}
			set
			{
				if ((this._constellationID != value))
				{
					this.OnconstellationIDChanging(value);
					this.SendPropertyChanging();
					this._constellationID = value;
					this.SendPropertyChanged("constellationID");
					this.OnconstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemName", DbType="NVarChar(100)")]
		public string solarSystemName
		{
			get
			{
				return this._solarSystemName;
			}
			set
			{
				if ((this._solarSystemName != value))
				{
					this.OnsolarSystemNameChanging(value);
					this.SendPropertyChanging();
					this._solarSystemName = value;
					this.SendPropertyChanged("solarSystemName");
					this.OnsolarSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float")]
		public System.Nullable<double> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float")]
		public System.Nullable<double> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float")]
		public System.Nullable<double> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMin", DbType="Float")]
		public System.Nullable<double> xMin
		{
			get
			{
				return this._xMin;
			}
			set
			{
				if ((this._xMin != value))
				{
					this.OnxMinChanging(value);
					this.SendPropertyChanging();
					this._xMin = value;
					this.SendPropertyChanged("xMin");
					this.OnxMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMax", DbType="Float")]
		public System.Nullable<double> xMax
		{
			get
			{
				return this._xMax;
			}
			set
			{
				if ((this._xMax != value))
				{
					this.OnxMaxChanging(value);
					this.SendPropertyChanging();
					this._xMax = value;
					this.SendPropertyChanged("xMax");
					this.OnxMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMin", DbType="Float")]
		public System.Nullable<double> yMin
		{
			get
			{
				return this._yMin;
			}
			set
			{
				if ((this._yMin != value))
				{
					this.OnyMinChanging(value);
					this.SendPropertyChanging();
					this._yMin = value;
					this.SendPropertyChanged("yMin");
					this.OnyMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMax", DbType="Float")]
		public System.Nullable<double> yMax
		{
			get
			{
				return this._yMax;
			}
			set
			{
				if ((this._yMax != value))
				{
					this.OnyMaxChanging(value);
					this.SendPropertyChanging();
					this._yMax = value;
					this.SendPropertyChanged("yMax");
					this.OnyMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMin", DbType="Float")]
		public System.Nullable<double> zMin
		{
			get
			{
				return this._zMin;
			}
			set
			{
				if ((this._zMin != value))
				{
					this.OnzMinChanging(value);
					this.SendPropertyChanging();
					this._zMin = value;
					this.SendPropertyChanged("zMin");
					this.OnzMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMax", DbType="Float")]
		public System.Nullable<double> zMax
		{
			get
			{
				return this._zMax;
			}
			set
			{
				if ((this._zMax != value))
				{
					this.OnzMaxChanging(value);
					this.SendPropertyChanging();
					this._zMax = value;
					this.SendPropertyChanged("zMax");
					this.OnzMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luminosity", DbType="Float")]
		public System.Nullable<double> luminosity
		{
			get
			{
				return this._luminosity;
			}
			set
			{
				if ((this._luminosity != value))
				{
					this.OnluminosityChanging(value);
					this.SendPropertyChanging();
					this._luminosity = value;
					this.SendPropertyChanged("luminosity");
					this.OnluminosityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_border", DbType="Bit")]
		public System.Nullable<bool> border
		{
			get
			{
				return this._border;
			}
			set
			{
				if ((this._border != value))
				{
					this.OnborderChanging(value);
					this.SendPropertyChanging();
					this._border = value;
					this.SendPropertyChanged("border");
					this.OnborderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fringe", DbType="Bit")]
		public System.Nullable<bool> fringe
		{
			get
			{
				return this._fringe;
			}
			set
			{
				if ((this._fringe != value))
				{
					this.OnfringeChanging(value);
					this.SendPropertyChanging();
					this._fringe = value;
					this.SendPropertyChanged("fringe");
					this.OnfringeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corridor", DbType="Bit")]
		public System.Nullable<bool> corridor
		{
			get
			{
				return this._corridor;
			}
			set
			{
				if ((this._corridor != value))
				{
					this.OncorridorChanging(value);
					this.SendPropertyChanging();
					this._corridor = value;
					this.SendPropertyChanged("corridor");
					this.OncorridorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hub", DbType="Bit")]
		public System.Nullable<bool> hub
		{
			get
			{
				return this._hub;
			}
			set
			{
				if ((this._hub != value))
				{
					this.OnhubChanging(value);
					this.SendPropertyChanging();
					this._hub = value;
					this.SendPropertyChanged("hub");
					this.OnhubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_international", DbType="Bit")]
		public System.Nullable<bool> international
		{
			get
			{
				return this._international;
			}
			set
			{
				if ((this._international != value))
				{
					this.OninternationalChanging(value);
					this.SendPropertyChanging();
					this._international = value;
					this.SendPropertyChanged("international");
					this.OninternationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regional", DbType="Bit")]
		public System.Nullable<bool> regional
		{
			get
			{
				return this._regional;
			}
			set
			{
				if ((this._regional != value))
				{
					this.OnregionalChanging(value);
					this.SendPropertyChanging();
					this._regional = value;
					this.SendPropertyChanged("regional");
					this.OnregionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_constellation", DbType="Bit")]
		public System.Nullable<bool> constellation
		{
			get
			{
				return this._constellation;
			}
			set
			{
				if ((this._constellation != value))
				{
					this.OnconstellationChanging(value);
					this.SendPropertyChanging();
					this._constellation = value;
					this.SendPropertyChanged("constellation");
					this.OnconstellationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security", DbType="Float")]
		public System.Nullable<double> security
		{
			get
			{
				return this._security;
			}
			set
			{
				if ((this._security != value))
				{
					this.OnsecurityChanging(value);
					this.SendPropertyChanging();
					this._security = value;
					this.SendPropertyChanged("security");
					this.OnsecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int")]
		public System.Nullable<int> factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sunTypeID", DbType="Int")]
		public System.Nullable<int> sunTypeID
		{
			get
			{
				return this._sunTypeID;
			}
			set
			{
				if ((this._sunTypeID != value))
				{
					this.OnsunTypeIDChanging(value);
					this.SendPropertyChanging();
					this._sunTypeID = value;
					this.SendPropertyChanged("sunTypeID");
					this.OnsunTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_securityClass", DbType="VarChar(2)")]
		public string securityClass
		{
			get
			{
				return this._securityClass;
			}
			set
			{
				if ((this._securityClass != value))
				{
					this.OnsecurityClassChanging(value);
					this.SendPropertyChanging();
					this._securityClass = value;
					this.SendPropertyChanged("securityClass");
					this.OnsecurityClassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mapUniverse")]
	public partial class mapUniverse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _universeID;
		
		private string _universeName;
		
		private System.Nullable<double> _x;
		
		private System.Nullable<double> _y;
		
		private System.Nullable<double> _z;
		
		private System.Nullable<double> _xMin;
		
		private System.Nullable<double> _xMax;
		
		private System.Nullable<double> _yMin;
		
		private System.Nullable<double> _yMax;
		
		private System.Nullable<double> _zMin;
		
		private System.Nullable<double> _zMax;
		
		private System.Nullable<double> _radius;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuniverseIDChanging(int value);
    partial void OnuniverseIDChanged();
    partial void OnuniverseNameChanging(string value);
    partial void OnuniverseNameChanged();
    partial void OnxChanging(System.Nullable<double> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<double> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<double> value);
    partial void OnzChanged();
    partial void OnxMinChanging(System.Nullable<double> value);
    partial void OnxMinChanged();
    partial void OnxMaxChanging(System.Nullable<double> value);
    partial void OnxMaxChanged();
    partial void OnyMinChanging(System.Nullable<double> value);
    partial void OnyMinChanged();
    partial void OnyMaxChanging(System.Nullable<double> value);
    partial void OnyMaxChanged();
    partial void OnzMinChanging(System.Nullable<double> value);
    partial void OnzMinChanged();
    partial void OnzMaxChanging(System.Nullable<double> value);
    partial void OnzMaxChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    #endregion
		
		public mapUniverse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_universeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int universeID
		{
			get
			{
				return this._universeID;
			}
			set
			{
				if ((this._universeID != value))
				{
					this.OnuniverseIDChanging(value);
					this.SendPropertyChanging();
					this._universeID = value;
					this.SendPropertyChanged("universeID");
					this.OnuniverseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_universeName", DbType="VarChar(100)")]
		public string universeName
		{
			get
			{
				return this._universeName;
			}
			set
			{
				if ((this._universeName != value))
				{
					this.OnuniverseNameChanging(value);
					this.SendPropertyChanging();
					this._universeName = value;
					this.SendPropertyChanged("universeName");
					this.OnuniverseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float")]
		public System.Nullable<double> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float")]
		public System.Nullable<double> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float")]
		public System.Nullable<double> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMin", DbType="Float")]
		public System.Nullable<double> xMin
		{
			get
			{
				return this._xMin;
			}
			set
			{
				if ((this._xMin != value))
				{
					this.OnxMinChanging(value);
					this.SendPropertyChanging();
					this._xMin = value;
					this.SendPropertyChanged("xMin");
					this.OnxMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMax", DbType="Float")]
		public System.Nullable<double> xMax
		{
			get
			{
				return this._xMax;
			}
			set
			{
				if ((this._xMax != value))
				{
					this.OnxMaxChanging(value);
					this.SendPropertyChanging();
					this._xMax = value;
					this.SendPropertyChanged("xMax");
					this.OnxMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMin", DbType="Float")]
		public System.Nullable<double> yMin
		{
			get
			{
				return this._yMin;
			}
			set
			{
				if ((this._yMin != value))
				{
					this.OnyMinChanging(value);
					this.SendPropertyChanging();
					this._yMin = value;
					this.SendPropertyChanged("yMin");
					this.OnyMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yMax", DbType="Float")]
		public System.Nullable<double> yMax
		{
			get
			{
				return this._yMax;
			}
			set
			{
				if ((this._yMax != value))
				{
					this.OnyMaxChanging(value);
					this.SendPropertyChanging();
					this._yMax = value;
					this.SendPropertyChanged("yMax");
					this.OnyMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMin", DbType="Float")]
		public System.Nullable<double> zMin
		{
			get
			{
				return this._zMin;
			}
			set
			{
				if ((this._zMin != value))
				{
					this.OnzMinChanging(value);
					this.SendPropertyChanging();
					this._zMin = value;
					this.SendPropertyChanged("zMin");
					this.OnzMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zMax", DbType="Float")]
		public System.Nullable<double> zMax
		{
			get
			{
				return this._zMax;
			}
			set
			{
				if ((this._zMax != value))
				{
					this.OnzMaxChanging(value);
					this.SendPropertyChanging();
					this._zMax = value;
					this.SendPropertyChanged("zMax");
					this.OnzMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.planetSchematics")]
	public partial class planetSchematic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _schematicID;
		
		private string _schematicName;
		
		private System.Nullable<int> _cycleTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnschematicIDChanging(short value);
    partial void OnschematicIDChanged();
    partial void OnschematicNameChanging(string value);
    partial void OnschematicNameChanged();
    partial void OncycleTimeChanging(System.Nullable<int> value);
    partial void OncycleTimeChanged();
    #endregion
		
		public planetSchematic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schematicID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short schematicID
		{
			get
			{
				return this._schematicID;
			}
			set
			{
				if ((this._schematicID != value))
				{
					this.OnschematicIDChanging(value);
					this.SendPropertyChanging();
					this._schematicID = value;
					this.SendPropertyChanged("schematicID");
					this.OnschematicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schematicName", DbType="NVarChar(255)")]
		public string schematicName
		{
			get
			{
				return this._schematicName;
			}
			set
			{
				if ((this._schematicName != value))
				{
					this.OnschematicNameChanging(value);
					this.SendPropertyChanging();
					this._schematicName = value;
					this.SendPropertyChanged("schematicName");
					this.OnschematicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cycleTime", DbType="Int")]
		public System.Nullable<int> cycleTime
		{
			get
			{
				return this._cycleTime;
			}
			set
			{
				if ((this._cycleTime != value))
				{
					this.OncycleTimeChanging(value);
					this.SendPropertyChanging();
					this._cycleTime = value;
					this.SendPropertyChanged("cycleTime");
					this.OncycleTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.planetSchematicsPinMap")]
	public partial class planetSchematicsPinMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _schematicID;
		
		private int _pinTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnschematicIDChanging(short value);
    partial void OnschematicIDChanged();
    partial void OnpinTypeIDChanging(int value);
    partial void OnpinTypeIDChanged();
    #endregion
		
		public planetSchematicsPinMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schematicID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short schematicID
		{
			get
			{
				return this._schematicID;
			}
			set
			{
				if ((this._schematicID != value))
				{
					this.OnschematicIDChanging(value);
					this.SendPropertyChanging();
					this._schematicID = value;
					this.SendPropertyChanged("schematicID");
					this.OnschematicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pinTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int pinTypeID
		{
			get
			{
				return this._pinTypeID;
			}
			set
			{
				if ((this._pinTypeID != value))
				{
					this.OnpinTypeIDChanging(value);
					this.SendPropertyChanging();
					this._pinTypeID = value;
					this.SendPropertyChanged("pinTypeID");
					this.OnpinTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.planetSchematicsTypeMap")]
	public partial class planetSchematicsTypeMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _schematicID;
		
		private int _typeID;
		
		private System.Nullable<short> _quantity;
		
		private System.Nullable<bool> _isInput;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnschematicIDChanging(short value);
    partial void OnschematicIDChanged();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnquantityChanging(System.Nullable<short> value);
    partial void OnquantityChanged();
    partial void OnisInputChanging(System.Nullable<bool> value);
    partial void OnisInputChanged();
    #endregion
		
		public planetSchematicsTypeMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schematicID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short schematicID
		{
			get
			{
				return this._schematicID;
			}
			set
			{
				if ((this._schematicID != value))
				{
					this.OnschematicIDChanging(value);
					this.SendPropertyChanging();
					this._schematicID = value;
					this.SendPropertyChanged("schematicID");
					this.OnschematicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="SmallInt")]
		public System.Nullable<short> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isInput", DbType="Bit")]
		public System.Nullable<bool> isInput
		{
			get
			{
				return this._isInput;
			}
			set
			{
				if ((this._isInput != value))
				{
					this.OnisInputChanging(value);
					this.SendPropertyChanging();
					this._isInput = value;
					this.SendPropertyChanged("isInput");
					this.OnisInputChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramActivities")]
	public partial class ramActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _activityID;
		
		private string _activityName;
		
		private string _iconNo;
		
		private string _description;
		
		private System.Nullable<bool> _published;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityIDChanging(byte value);
    partial void OnactivityIDChanged();
    partial void OnactivityNameChanging(string value);
    partial void OnactivityNameChanged();
    partial void OniconNoChanging(string value);
    partial void OniconNoChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpublishedChanging(System.Nullable<bool> value);
    partial void OnpublishedChanged();
    #endregion
		
		public ramActivity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityName", DbType="NVarChar(100)")]
		public string activityName
		{
			get
			{
				return this._activityName;
			}
			set
			{
				if ((this._activityName != value))
				{
					this.OnactivityNameChanging(value);
					this.SendPropertyChanging();
					this._activityName = value;
					this.SendPropertyChanged("activityName");
					this.OnactivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconNo", DbType="VarChar(5)")]
		public string iconNo
		{
			get
			{
				return this._iconNo;
			}
			set
			{
				if ((this._iconNo != value))
				{
					this.OniconNoChanging(value);
					this.SendPropertyChanging();
					this._iconNo = value;
					this.SendPropertyChanged("iconNo");
					this.OniconNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit")]
		public System.Nullable<bool> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramAssemblyLines")]
	public partial class ramAssemblyLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _assemblyLineID;
		
		private System.Nullable<byte> _assemblyLineTypeID;
		
		private System.Nullable<int> _containerID;
		
		private System.Nullable<System.DateTime> _nextFreeTime;
		
		private System.Nullable<byte> _UIGroupingID;
		
		private System.Nullable<double> _costInstall;
		
		private System.Nullable<double> _costPerHour;
		
		private System.Nullable<byte> _restrictionMask;
		
		private System.Nullable<double> _discountPerGoodStandingPoint;
		
		private System.Nullable<double> _surchargePerBadStandingPoint;
		
		private System.Nullable<double> _minimumStanding;
		
		private System.Nullable<double> _minimumCharSecurity;
		
		private System.Nullable<double> _minimumCorpSecurity;
		
		private System.Nullable<double> _maximumCharSecurity;
		
		private System.Nullable<double> _maximumCorpSecurity;
		
		private System.Nullable<int> _ownerID;
		
		private System.Nullable<byte> _activityID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnassemblyLineIDChanging(int value);
    partial void OnassemblyLineIDChanged();
    partial void OnassemblyLineTypeIDChanging(System.Nullable<byte> value);
    partial void OnassemblyLineTypeIDChanged();
    partial void OncontainerIDChanging(System.Nullable<int> value);
    partial void OncontainerIDChanged();
    partial void OnnextFreeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnnextFreeTimeChanged();
    partial void OnUIGroupingIDChanging(System.Nullable<byte> value);
    partial void OnUIGroupingIDChanged();
    partial void OncostInstallChanging(System.Nullable<double> value);
    partial void OncostInstallChanged();
    partial void OncostPerHourChanging(System.Nullable<double> value);
    partial void OncostPerHourChanged();
    partial void OnrestrictionMaskChanging(System.Nullable<byte> value);
    partial void OnrestrictionMaskChanged();
    partial void OndiscountPerGoodStandingPointChanging(System.Nullable<double> value);
    partial void OndiscountPerGoodStandingPointChanged();
    partial void OnsurchargePerBadStandingPointChanging(System.Nullable<double> value);
    partial void OnsurchargePerBadStandingPointChanged();
    partial void OnminimumStandingChanging(System.Nullable<double> value);
    partial void OnminimumStandingChanged();
    partial void OnminimumCharSecurityChanging(System.Nullable<double> value);
    partial void OnminimumCharSecurityChanged();
    partial void OnminimumCorpSecurityChanging(System.Nullable<double> value);
    partial void OnminimumCorpSecurityChanged();
    partial void OnmaximumCharSecurityChanging(System.Nullable<double> value);
    partial void OnmaximumCharSecurityChanged();
    partial void OnmaximumCorpSecurityChanging(System.Nullable<double> value);
    partial void OnmaximumCorpSecurityChanged();
    partial void OnownerIDChanging(System.Nullable<int> value);
    partial void OnownerIDChanged();
    partial void OnactivityIDChanging(System.Nullable<byte> value);
    partial void OnactivityIDChanged();
    #endregion
		
		public ramAssemblyLine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int assemblyLineID
		{
			get
			{
				return this._assemblyLineID;
			}
			set
			{
				if ((this._assemblyLineID != value))
				{
					this.OnassemblyLineIDChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineID = value;
					this.SendPropertyChanged("assemblyLineID");
					this.OnassemblyLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineTypeID", DbType="TinyInt")]
		public System.Nullable<byte> assemblyLineTypeID
		{
			get
			{
				return this._assemblyLineTypeID;
			}
			set
			{
				if ((this._assemblyLineTypeID != value))
				{
					this.OnassemblyLineTypeIDChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineTypeID = value;
					this.SendPropertyChanged("assemblyLineTypeID");
					this.OnassemblyLineTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_containerID", DbType="Int")]
		public System.Nullable<int> containerID
		{
			get
			{
				return this._containerID;
			}
			set
			{
				if ((this._containerID != value))
				{
					this.OncontainerIDChanging(value);
					this.SendPropertyChanging();
					this._containerID = value;
					this.SendPropertyChanged("containerID");
					this.OncontainerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nextFreeTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> nextFreeTime
		{
			get
			{
				return this._nextFreeTime;
			}
			set
			{
				if ((this._nextFreeTime != value))
				{
					this.OnnextFreeTimeChanging(value);
					this.SendPropertyChanging();
					this._nextFreeTime = value;
					this.SendPropertyChanged("nextFreeTime");
					this.OnnextFreeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UIGroupingID", DbType="TinyInt")]
		public System.Nullable<byte> UIGroupingID
		{
			get
			{
				return this._UIGroupingID;
			}
			set
			{
				if ((this._UIGroupingID != value))
				{
					this.OnUIGroupingIDChanging(value);
					this.SendPropertyChanging();
					this._UIGroupingID = value;
					this.SendPropertyChanged("UIGroupingID");
					this.OnUIGroupingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costInstall", DbType="Float")]
		public System.Nullable<double> costInstall
		{
			get
			{
				return this._costInstall;
			}
			set
			{
				if ((this._costInstall != value))
				{
					this.OncostInstallChanging(value);
					this.SendPropertyChanging();
					this._costInstall = value;
					this.SendPropertyChanged("costInstall");
					this.OncostInstallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costPerHour", DbType="Float")]
		public System.Nullable<double> costPerHour
		{
			get
			{
				return this._costPerHour;
			}
			set
			{
				if ((this._costPerHour != value))
				{
					this.OncostPerHourChanging(value);
					this.SendPropertyChanging();
					this._costPerHour = value;
					this.SendPropertyChanged("costPerHour");
					this.OncostPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restrictionMask", DbType="TinyInt")]
		public System.Nullable<byte> restrictionMask
		{
			get
			{
				return this._restrictionMask;
			}
			set
			{
				if ((this._restrictionMask != value))
				{
					this.OnrestrictionMaskChanging(value);
					this.SendPropertyChanging();
					this._restrictionMask = value;
					this.SendPropertyChanged("restrictionMask");
					this.OnrestrictionMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountPerGoodStandingPoint", DbType="Float")]
		public System.Nullable<double> discountPerGoodStandingPoint
		{
			get
			{
				return this._discountPerGoodStandingPoint;
			}
			set
			{
				if ((this._discountPerGoodStandingPoint != value))
				{
					this.OndiscountPerGoodStandingPointChanging(value);
					this.SendPropertyChanging();
					this._discountPerGoodStandingPoint = value;
					this.SendPropertyChanged("discountPerGoodStandingPoint");
					this.OndiscountPerGoodStandingPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surchargePerBadStandingPoint", DbType="Float")]
		public System.Nullable<double> surchargePerBadStandingPoint
		{
			get
			{
				return this._surchargePerBadStandingPoint;
			}
			set
			{
				if ((this._surchargePerBadStandingPoint != value))
				{
					this.OnsurchargePerBadStandingPointChanging(value);
					this.SendPropertyChanging();
					this._surchargePerBadStandingPoint = value;
					this.SendPropertyChanged("surchargePerBadStandingPoint");
					this.OnsurchargePerBadStandingPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minimumStanding", DbType="Float")]
		public System.Nullable<double> minimumStanding
		{
			get
			{
				return this._minimumStanding;
			}
			set
			{
				if ((this._minimumStanding != value))
				{
					this.OnminimumStandingChanging(value);
					this.SendPropertyChanging();
					this._minimumStanding = value;
					this.SendPropertyChanged("minimumStanding");
					this.OnminimumStandingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minimumCharSecurity", DbType="Float")]
		public System.Nullable<double> minimumCharSecurity
		{
			get
			{
				return this._minimumCharSecurity;
			}
			set
			{
				if ((this._minimumCharSecurity != value))
				{
					this.OnminimumCharSecurityChanging(value);
					this.SendPropertyChanging();
					this._minimumCharSecurity = value;
					this.SendPropertyChanged("minimumCharSecurity");
					this.OnminimumCharSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minimumCorpSecurity", DbType="Float")]
		public System.Nullable<double> minimumCorpSecurity
		{
			get
			{
				return this._minimumCorpSecurity;
			}
			set
			{
				if ((this._minimumCorpSecurity != value))
				{
					this.OnminimumCorpSecurityChanging(value);
					this.SendPropertyChanging();
					this._minimumCorpSecurity = value;
					this.SendPropertyChanged("minimumCorpSecurity");
					this.OnminimumCorpSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maximumCharSecurity", DbType="Float")]
		public System.Nullable<double> maximumCharSecurity
		{
			get
			{
				return this._maximumCharSecurity;
			}
			set
			{
				if ((this._maximumCharSecurity != value))
				{
					this.OnmaximumCharSecurityChanging(value);
					this.SendPropertyChanging();
					this._maximumCharSecurity = value;
					this.SendPropertyChanged("maximumCharSecurity");
					this.OnmaximumCharSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maximumCorpSecurity", DbType="Float")]
		public System.Nullable<double> maximumCorpSecurity
		{
			get
			{
				return this._maximumCorpSecurity;
			}
			set
			{
				if ((this._maximumCorpSecurity != value))
				{
					this.OnmaximumCorpSecurityChanging(value);
					this.SendPropertyChanging();
					this._maximumCorpSecurity = value;
					this.SendPropertyChanged("maximumCorpSecurity");
					this.OnmaximumCorpSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownerID", DbType="Int")]
		public System.Nullable<int> ownerID
		{
			get
			{
				return this._ownerID;
			}
			set
			{
				if ((this._ownerID != value))
				{
					this.OnownerIDChanging(value);
					this.SendPropertyChanging();
					this._ownerID = value;
					this.SendPropertyChanged("ownerID");
					this.OnownerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="TinyInt")]
		public System.Nullable<byte> activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramAssemblyLineStations")]
	public partial class ramAssemblyLineStation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stationID;
		
		private byte _assemblyLineTypeID;
		
		private System.Nullable<byte> _quantity;
		
		private System.Nullable<int> _stationTypeID;
		
		private System.Nullable<int> _ownerID;
		
		private System.Nullable<int> _solarSystemID;
		
		private System.Nullable<int> _regionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstationIDChanging(int value);
    partial void OnstationIDChanged();
    partial void OnassemblyLineTypeIDChanging(byte value);
    partial void OnassemblyLineTypeIDChanged();
    partial void OnquantityChanging(System.Nullable<byte> value);
    partial void OnquantityChanged();
    partial void OnstationTypeIDChanging(System.Nullable<int> value);
    partial void OnstationTypeIDChanged();
    partial void OnownerIDChanging(System.Nullable<int> value);
    partial void OnownerIDChanged();
    partial void OnsolarSystemIDChanging(System.Nullable<int> value);
    partial void OnsolarSystemIDChanged();
    partial void OnregionIDChanging(System.Nullable<int> value);
    partial void OnregionIDChanged();
    #endregion
		
		public ramAssemblyLineStation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineTypeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte assemblyLineTypeID
		{
			get
			{
				return this._assemblyLineTypeID;
			}
			set
			{
				if ((this._assemblyLineTypeID != value))
				{
					this.OnassemblyLineTypeIDChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineTypeID = value;
					this.SendPropertyChanged("assemblyLineTypeID");
					this.OnassemblyLineTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="TinyInt")]
		public System.Nullable<byte> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationTypeID", DbType="Int")]
		public System.Nullable<int> stationTypeID
		{
			get
			{
				return this._stationTypeID;
			}
			set
			{
				if ((this._stationTypeID != value))
				{
					this.OnstationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._stationTypeID = value;
					this.SendPropertyChanged("stationTypeID");
					this.OnstationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownerID", DbType="Int")]
		public System.Nullable<int> ownerID
		{
			get
			{
				return this._ownerID;
			}
			set
			{
				if ((this._ownerID != value))
				{
					this.OnownerIDChanging(value);
					this.SendPropertyChanging();
					this._ownerID = value;
					this.SendPropertyChanged("ownerID");
					this.OnownerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="Int")]
		public System.Nullable<int> solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionID", DbType="Int")]
		public System.Nullable<int> regionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				if ((this._regionID != value))
				{
					this.OnregionIDChanging(value);
					this.SendPropertyChanging();
					this._regionID = value;
					this.SendPropertyChanged("regionID");
					this.OnregionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramAssemblyLineTypeDetailPerCategory")]
	public partial class ramAssemblyLineTypeDetailPerCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _assemblyLineTypeID;
		
		private byte _categoryID;
		
		private System.Nullable<double> _timeMultiplier;
		
		private System.Nullable<double> _materialMultiplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnassemblyLineTypeIDChanging(byte value);
    partial void OnassemblyLineTypeIDChanged();
    partial void OncategoryIDChanging(byte value);
    partial void OncategoryIDChanged();
    partial void OntimeMultiplierChanging(System.Nullable<double> value);
    partial void OntimeMultiplierChanged();
    partial void OnmaterialMultiplierChanging(System.Nullable<double> value);
    partial void OnmaterialMultiplierChanged();
    #endregion
		
		public ramAssemblyLineTypeDetailPerCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineTypeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte assemblyLineTypeID
		{
			get
			{
				return this._assemblyLineTypeID;
			}
			set
			{
				if ((this._assemblyLineTypeID != value))
				{
					this.OnassemblyLineTypeIDChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineTypeID = value;
					this.SendPropertyChanged("assemblyLineTypeID");
					this.OnassemblyLineTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeMultiplier", DbType="Float")]
		public System.Nullable<double> timeMultiplier
		{
			get
			{
				return this._timeMultiplier;
			}
			set
			{
				if ((this._timeMultiplier != value))
				{
					this.OntimeMultiplierChanging(value);
					this.SendPropertyChanging();
					this._timeMultiplier = value;
					this.SendPropertyChanged("timeMultiplier");
					this.OntimeMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialMultiplier", DbType="Float")]
		public System.Nullable<double> materialMultiplier
		{
			get
			{
				return this._materialMultiplier;
			}
			set
			{
				if ((this._materialMultiplier != value))
				{
					this.OnmaterialMultiplierChanging(value);
					this.SendPropertyChanging();
					this._materialMultiplier = value;
					this.SendPropertyChanged("materialMultiplier");
					this.OnmaterialMultiplierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramAssemblyLineTypeDetailPerGroup")]
	public partial class ramAssemblyLineTypeDetailPerGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _assemblyLineTypeID;
		
		private short _groupID;
		
		private System.Nullable<double> _timeMultiplier;
		
		private System.Nullable<double> _materialMultiplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnassemblyLineTypeIDChanging(byte value);
    partial void OnassemblyLineTypeIDChanged();
    partial void OngroupIDChanging(short value);
    partial void OngroupIDChanged();
    partial void OntimeMultiplierChanging(System.Nullable<double> value);
    partial void OntimeMultiplierChanged();
    partial void OnmaterialMultiplierChanging(System.Nullable<double> value);
    partial void OnmaterialMultiplierChanged();
    #endregion
		
		public ramAssemblyLineTypeDetailPerGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineTypeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte assemblyLineTypeID
		{
			get
			{
				return this._assemblyLineTypeID;
			}
			set
			{
				if ((this._assemblyLineTypeID != value))
				{
					this.OnassemblyLineTypeIDChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineTypeID = value;
					this.SendPropertyChanged("assemblyLineTypeID");
					this.OnassemblyLineTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeMultiplier", DbType="Float")]
		public System.Nullable<double> timeMultiplier
		{
			get
			{
				return this._timeMultiplier;
			}
			set
			{
				if ((this._timeMultiplier != value))
				{
					this.OntimeMultiplierChanging(value);
					this.SendPropertyChanging();
					this._timeMultiplier = value;
					this.SendPropertyChanged("timeMultiplier");
					this.OntimeMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialMultiplier", DbType="Float")]
		public System.Nullable<double> materialMultiplier
		{
			get
			{
				return this._materialMultiplier;
			}
			set
			{
				if ((this._materialMultiplier != value))
				{
					this.OnmaterialMultiplierChanging(value);
					this.SendPropertyChanging();
					this._materialMultiplier = value;
					this.SendPropertyChanged("materialMultiplier");
					this.OnmaterialMultiplierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramAssemblyLineTypes")]
	public partial class ramAssemblyLineType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _assemblyLineTypeID;
		
		private string _assemblyLineTypeName;
		
		private string _description;
		
		private System.Nullable<double> _baseTimeMultiplier;
		
		private System.Nullable<double> _baseMaterialMultiplier;
		
		private System.Nullable<double> _volume;
		
		private System.Nullable<byte> _activityID;
		
		private System.Nullable<double> _minCostPerHour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnassemblyLineTypeIDChanging(byte value);
    partial void OnassemblyLineTypeIDChanged();
    partial void OnassemblyLineTypeNameChanging(string value);
    partial void OnassemblyLineTypeNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnbaseTimeMultiplierChanging(System.Nullable<double> value);
    partial void OnbaseTimeMultiplierChanged();
    partial void OnbaseMaterialMultiplierChanging(System.Nullable<double> value);
    partial void OnbaseMaterialMultiplierChanged();
    partial void OnvolumeChanging(System.Nullable<double> value);
    partial void OnvolumeChanged();
    partial void OnactivityIDChanging(System.Nullable<byte> value);
    partial void OnactivityIDChanged();
    partial void OnminCostPerHourChanging(System.Nullable<double> value);
    partial void OnminCostPerHourChanged();
    #endregion
		
		public ramAssemblyLineType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineTypeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte assemblyLineTypeID
		{
			get
			{
				return this._assemblyLineTypeID;
			}
			set
			{
				if ((this._assemblyLineTypeID != value))
				{
					this.OnassemblyLineTypeIDChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineTypeID = value;
					this.SendPropertyChanged("assemblyLineTypeID");
					this.OnassemblyLineTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineTypeName", DbType="NVarChar(100)")]
		public string assemblyLineTypeName
		{
			get
			{
				return this._assemblyLineTypeName;
			}
			set
			{
				if ((this._assemblyLineTypeName != value))
				{
					this.OnassemblyLineTypeNameChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineTypeName = value;
					this.SendPropertyChanged("assemblyLineTypeName");
					this.OnassemblyLineTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseTimeMultiplier", DbType="Float")]
		public System.Nullable<double> baseTimeMultiplier
		{
			get
			{
				return this._baseTimeMultiplier;
			}
			set
			{
				if ((this._baseTimeMultiplier != value))
				{
					this.OnbaseTimeMultiplierChanging(value);
					this.SendPropertyChanging();
					this._baseTimeMultiplier = value;
					this.SendPropertyChanged("baseTimeMultiplier");
					this.OnbaseTimeMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseMaterialMultiplier", DbType="Float")]
		public System.Nullable<double> baseMaterialMultiplier
		{
			get
			{
				return this._baseMaterialMultiplier;
			}
			set
			{
				if ((this._baseMaterialMultiplier != value))
				{
					this.OnbaseMaterialMultiplierChanging(value);
					this.SendPropertyChanging();
					this._baseMaterialMultiplier = value;
					this.SendPropertyChanged("baseMaterialMultiplier");
					this.OnbaseMaterialMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_volume", DbType="Float")]
		public System.Nullable<double> volume
		{
			get
			{
				return this._volume;
			}
			set
			{
				if ((this._volume != value))
				{
					this.OnvolumeChanging(value);
					this.SendPropertyChanging();
					this._volume = value;
					this.SendPropertyChanged("volume");
					this.OnvolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="TinyInt")]
		public System.Nullable<byte> activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minCostPerHour", DbType="Float")]
		public System.Nullable<double> minCostPerHour
		{
			get
			{
				return this._minCostPerHour;
			}
			set
			{
				if ((this._minCostPerHour != value))
				{
					this.OnminCostPerHourChanging(value);
					this.SendPropertyChanging();
					this._minCostPerHour = value;
					this.SendPropertyChanged("minCostPerHour");
					this.OnminCostPerHourChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramInstallationTypeContents")]
	public partial class ramInstallationTypeContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _installationTypeID;
		
		private byte _assemblyLineTypeID;
		
		private System.Nullable<byte> _quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninstallationTypeIDChanging(int value);
    partial void OninstallationTypeIDChanged();
    partial void OnassemblyLineTypeIDChanging(byte value);
    partial void OnassemblyLineTypeIDChanged();
    partial void OnquantityChanging(System.Nullable<byte> value);
    partial void OnquantityChanged();
    #endregion
		
		public ramInstallationTypeContent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_installationTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int installationTypeID
		{
			get
			{
				return this._installationTypeID;
			}
			set
			{
				if ((this._installationTypeID != value))
				{
					this.OninstallationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._installationTypeID = value;
					this.SendPropertyChanged("installationTypeID");
					this.OninstallationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assemblyLineTypeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte assemblyLineTypeID
		{
			get
			{
				return this._assemblyLineTypeID;
			}
			set
			{
				if ((this._assemblyLineTypeID != value))
				{
					this.OnassemblyLineTypeIDChanging(value);
					this.SendPropertyChanging();
					this._assemblyLineTypeID = value;
					this.SendPropertyChanged("assemblyLineTypeID");
					this.OnassemblyLineTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="TinyInt")]
		public System.Nullable<byte> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ramTypeRequirements")]
	public partial class ramTypeRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private byte _activityID;
		
		private int _requiredTypeID;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<double> _damagePerJob;
		
		private System.Nullable<bool> _recycle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OnactivityIDChanging(byte value);
    partial void OnactivityIDChanged();
    partial void OnrequiredTypeIDChanging(int value);
    partial void OnrequiredTypeIDChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OndamagePerJobChanging(System.Nullable<double> value);
    partial void OndamagePerJobChanged();
    partial void OnrecycleChanging(System.Nullable<bool> value);
    partial void OnrecycleChanged();
    #endregion
		
		public ramTypeRequirement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requiredTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int requiredTypeID
		{
			get
			{
				return this._requiredTypeID;
			}
			set
			{
				if ((this._requiredTypeID != value))
				{
					this.OnrequiredTypeIDChanging(value);
					this.SendPropertyChanging();
					this._requiredTypeID = value;
					this.SendPropertyChanged("requiredTypeID");
					this.OnrequiredTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_damagePerJob", DbType="Float")]
		public System.Nullable<double> damagePerJob
		{
			get
			{
				return this._damagePerJob;
			}
			set
			{
				if ((this._damagePerJob != value))
				{
					this.OndamagePerJobChanging(value);
					this.SendPropertyChanging();
					this._damagePerJob = value;
					this.SendPropertyChanged("damagePerJob");
					this.OndamagePerJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recycle", DbType="Bit")]
		public System.Nullable<bool> recycle
		{
			get
			{
				return this._recycle;
			}
			set
			{
				if ((this._recycle != value))
				{
					this.OnrecycleChanging(value);
					this.SendPropertyChanging();
					this._recycle = value;
					this.SendPropertyChanged("recycle");
					this.OnrecycleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staOperations")]
	public partial class staOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<byte> _activityID;
		
		private byte _operationID;
		
		private string _operationName;
		
		private string _description;
		
		private System.Nullable<byte> _fringe;
		
		private System.Nullable<byte> _corridor;
		
		private System.Nullable<byte> _hub;
		
		private System.Nullable<byte> _border;
		
		private System.Nullable<byte> _ratio;
		
		private System.Nullable<int> _caldariStationTypeID;
		
		private System.Nullable<int> _minmatarStationTypeID;
		
		private System.Nullable<int> _amarrStationTypeID;
		
		private System.Nullable<int> _gallenteStationTypeID;
		
		private System.Nullable<int> _joveStationTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityIDChanging(System.Nullable<byte> value);
    partial void OnactivityIDChanged();
    partial void OnoperationIDChanging(byte value);
    partial void OnoperationIDChanged();
    partial void OnoperationNameChanging(string value);
    partial void OnoperationNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnfringeChanging(System.Nullable<byte> value);
    partial void OnfringeChanged();
    partial void OncorridorChanging(System.Nullable<byte> value);
    partial void OncorridorChanged();
    partial void OnhubChanging(System.Nullable<byte> value);
    partial void OnhubChanged();
    partial void OnborderChanging(System.Nullable<byte> value);
    partial void OnborderChanged();
    partial void OnratioChanging(System.Nullable<byte> value);
    partial void OnratioChanged();
    partial void OncaldariStationTypeIDChanging(System.Nullable<int> value);
    partial void OncaldariStationTypeIDChanged();
    partial void OnminmatarStationTypeIDChanging(System.Nullable<int> value);
    partial void OnminmatarStationTypeIDChanged();
    partial void OnamarrStationTypeIDChanging(System.Nullable<int> value);
    partial void OnamarrStationTypeIDChanged();
    partial void OngallenteStationTypeIDChanging(System.Nullable<int> value);
    partial void OngallenteStationTypeIDChanged();
    partial void OnjoveStationTypeIDChanging(System.Nullable<int> value);
    partial void OnjoveStationTypeIDChanged();
    #endregion
		
		public staOperation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="TinyInt")]
		public System.Nullable<byte> activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operationID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte operationID
		{
			get
			{
				return this._operationID;
			}
			set
			{
				if ((this._operationID != value))
				{
					this.OnoperationIDChanging(value);
					this.SendPropertyChanging();
					this._operationID = value;
					this.SendPropertyChanged("operationID");
					this.OnoperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operationName", DbType="NVarChar(100)")]
		public string operationName
		{
			get
			{
				return this._operationName;
			}
			set
			{
				if ((this._operationName != value))
				{
					this.OnoperationNameChanging(value);
					this.SendPropertyChanging();
					this._operationName = value;
					this.SendPropertyChanged("operationName");
					this.OnoperationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fringe", DbType="TinyInt")]
		public System.Nullable<byte> fringe
		{
			get
			{
				return this._fringe;
			}
			set
			{
				if ((this._fringe != value))
				{
					this.OnfringeChanging(value);
					this.SendPropertyChanging();
					this._fringe = value;
					this.SendPropertyChanged("fringe");
					this.OnfringeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corridor", DbType="TinyInt")]
		public System.Nullable<byte> corridor
		{
			get
			{
				return this._corridor;
			}
			set
			{
				if ((this._corridor != value))
				{
					this.OncorridorChanging(value);
					this.SendPropertyChanging();
					this._corridor = value;
					this.SendPropertyChanged("corridor");
					this.OncorridorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hub", DbType="TinyInt")]
		public System.Nullable<byte> hub
		{
			get
			{
				return this._hub;
			}
			set
			{
				if ((this._hub != value))
				{
					this.OnhubChanging(value);
					this.SendPropertyChanging();
					this._hub = value;
					this.SendPropertyChanged("hub");
					this.OnhubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_border", DbType="TinyInt")]
		public System.Nullable<byte> border
		{
			get
			{
				return this._border;
			}
			set
			{
				if ((this._border != value))
				{
					this.OnborderChanging(value);
					this.SendPropertyChanging();
					this._border = value;
					this.SendPropertyChanged("border");
					this.OnborderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratio", DbType="TinyInt")]
		public System.Nullable<byte> ratio
		{
			get
			{
				return this._ratio;
			}
			set
			{
				if ((this._ratio != value))
				{
					this.OnratioChanging(value);
					this.SendPropertyChanging();
					this._ratio = value;
					this.SendPropertyChanged("ratio");
					this.OnratioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caldariStationTypeID", DbType="Int")]
		public System.Nullable<int> caldariStationTypeID
		{
			get
			{
				return this._caldariStationTypeID;
			}
			set
			{
				if ((this._caldariStationTypeID != value))
				{
					this.OncaldariStationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._caldariStationTypeID = value;
					this.SendPropertyChanged("caldariStationTypeID");
					this.OncaldariStationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minmatarStationTypeID", DbType="Int")]
		public System.Nullable<int> minmatarStationTypeID
		{
			get
			{
				return this._minmatarStationTypeID;
			}
			set
			{
				if ((this._minmatarStationTypeID != value))
				{
					this.OnminmatarStationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._minmatarStationTypeID = value;
					this.SendPropertyChanged("minmatarStationTypeID");
					this.OnminmatarStationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amarrStationTypeID", DbType="Int")]
		public System.Nullable<int> amarrStationTypeID
		{
			get
			{
				return this._amarrStationTypeID;
			}
			set
			{
				if ((this._amarrStationTypeID != value))
				{
					this.OnamarrStationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._amarrStationTypeID = value;
					this.SendPropertyChanged("amarrStationTypeID");
					this.OnamarrStationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gallenteStationTypeID", DbType="Int")]
		public System.Nullable<int> gallenteStationTypeID
		{
			get
			{
				return this._gallenteStationTypeID;
			}
			set
			{
				if ((this._gallenteStationTypeID != value))
				{
					this.OngallenteStationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._gallenteStationTypeID = value;
					this.SendPropertyChanged("gallenteStationTypeID");
					this.OngallenteStationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_joveStationTypeID", DbType="Int")]
		public System.Nullable<int> joveStationTypeID
		{
			get
			{
				return this._joveStationTypeID;
			}
			set
			{
				if ((this._joveStationTypeID != value))
				{
					this.OnjoveStationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._joveStationTypeID = value;
					this.SendPropertyChanged("joveStationTypeID");
					this.OnjoveStationTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staOperationServices")]
	public partial class staOperationService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _operationID;
		
		private int _serviceID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoperationIDChanging(byte value);
    partial void OnoperationIDChanged();
    partial void OnserviceIDChanging(int value);
    partial void OnserviceIDChanged();
    #endregion
		
		public staOperationService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operationID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte operationID
		{
			get
			{
				return this._operationID;
			}
			set
			{
				if ((this._operationID != value))
				{
					this.OnoperationIDChanging(value);
					this.SendPropertyChanging();
					this._operationID = value;
					this.SendPropertyChanged("operationID");
					this.OnoperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int serviceID
		{
			get
			{
				return this._serviceID;
			}
			set
			{
				if ((this._serviceID != value))
				{
					this.OnserviceIDChanging(value);
					this.SendPropertyChanging();
					this._serviceID = value;
					this.SendPropertyChanged("serviceID");
					this.OnserviceIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staServices")]
	public partial class staService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _serviceID;
		
		private string _serviceName;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnserviceIDChanging(int value);
    partial void OnserviceIDChanged();
    partial void OnserviceNameChanging(string value);
    partial void OnserviceNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public staService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int serviceID
		{
			get
			{
				return this._serviceID;
			}
			set
			{
				if ((this._serviceID != value))
				{
					this.OnserviceIDChanging(value);
					this.SendPropertyChanging();
					this._serviceID = value;
					this.SendPropertyChanged("serviceID");
					this.OnserviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceName", DbType="NVarChar(100)")]
		public string serviceName
		{
			get
			{
				return this._serviceName;
			}
			set
			{
				if ((this._serviceName != value))
				{
					this.OnserviceNameChanging(value);
					this.SendPropertyChanging();
					this._serviceName = value;
					this.SendPropertyChanged("serviceName");
					this.OnserviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staStations")]
	public partial class staStation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stationID;
		
		private System.Nullable<short> _security;
		
		private System.Nullable<double> _dockingCostPerVolume;
		
		private System.Nullable<double> _maxShipVolumeDockable;
		
		private System.Nullable<int> _officeRentalCost;
		
		private System.Nullable<byte> _operationID;
		
		private System.Nullable<int> _stationTypeID;
		
		private System.Nullable<int> _corporationID;
		
		private System.Nullable<int> _solarSystemID;
		
		private System.Nullable<int> _constellationID;
		
		private System.Nullable<int> _regionID;
		
		private string _stationName;
		
		private System.Nullable<double> _x;
		
		private System.Nullable<double> _y;
		
		private System.Nullable<double> _z;
		
		private System.Nullable<double> _reprocessingEfficiency;
		
		private System.Nullable<double> _reprocessingStationsTake;
		
		private System.Nullable<byte> _reprocessingHangarFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstationIDChanging(int value);
    partial void OnstationIDChanged();
    partial void OnsecurityChanging(System.Nullable<short> value);
    partial void OnsecurityChanged();
    partial void OndockingCostPerVolumeChanging(System.Nullable<double> value);
    partial void OndockingCostPerVolumeChanged();
    partial void OnmaxShipVolumeDockableChanging(System.Nullable<double> value);
    partial void OnmaxShipVolumeDockableChanged();
    partial void OnofficeRentalCostChanging(System.Nullable<int> value);
    partial void OnofficeRentalCostChanged();
    partial void OnoperationIDChanging(System.Nullable<byte> value);
    partial void OnoperationIDChanged();
    partial void OnstationTypeIDChanging(System.Nullable<int> value);
    partial void OnstationTypeIDChanged();
    partial void OncorporationIDChanging(System.Nullable<int> value);
    partial void OncorporationIDChanged();
    partial void OnsolarSystemIDChanging(System.Nullable<int> value);
    partial void OnsolarSystemIDChanged();
    partial void OnconstellationIDChanging(System.Nullable<int> value);
    partial void OnconstellationIDChanged();
    partial void OnregionIDChanging(System.Nullable<int> value);
    partial void OnregionIDChanged();
    partial void OnstationNameChanging(string value);
    partial void OnstationNameChanged();
    partial void OnxChanging(System.Nullable<double> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<double> value);
    partial void OnyChanged();
    partial void OnzChanging(System.Nullable<double> value);
    partial void OnzChanged();
    partial void OnreprocessingEfficiencyChanging(System.Nullable<double> value);
    partial void OnreprocessingEfficiencyChanged();
    partial void OnreprocessingStationsTakeChanging(System.Nullable<double> value);
    partial void OnreprocessingStationsTakeChanged();
    partial void OnreprocessingHangarFlagChanging(System.Nullable<byte> value);
    partial void OnreprocessingHangarFlagChanged();
    #endregion
		
		public staStation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security", DbType="SmallInt")]
		public System.Nullable<short> security
		{
			get
			{
				return this._security;
			}
			set
			{
				if ((this._security != value))
				{
					this.OnsecurityChanging(value);
					this.SendPropertyChanging();
					this._security = value;
					this.SendPropertyChanged("security");
					this.OnsecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dockingCostPerVolume", DbType="Float")]
		public System.Nullable<double> dockingCostPerVolume
		{
			get
			{
				return this._dockingCostPerVolume;
			}
			set
			{
				if ((this._dockingCostPerVolume != value))
				{
					this.OndockingCostPerVolumeChanging(value);
					this.SendPropertyChanging();
					this._dockingCostPerVolume = value;
					this.SendPropertyChanged("dockingCostPerVolume");
					this.OndockingCostPerVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxShipVolumeDockable", DbType="Float")]
		public System.Nullable<double> maxShipVolumeDockable
		{
			get
			{
				return this._maxShipVolumeDockable;
			}
			set
			{
				if ((this._maxShipVolumeDockable != value))
				{
					this.OnmaxShipVolumeDockableChanging(value);
					this.SendPropertyChanging();
					this._maxShipVolumeDockable = value;
					this.SendPropertyChanged("maxShipVolumeDockable");
					this.OnmaxShipVolumeDockableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_officeRentalCost", DbType="Int")]
		public System.Nullable<int> officeRentalCost
		{
			get
			{
				return this._officeRentalCost;
			}
			set
			{
				if ((this._officeRentalCost != value))
				{
					this.OnofficeRentalCostChanging(value);
					this.SendPropertyChanging();
					this._officeRentalCost = value;
					this.SendPropertyChanged("officeRentalCost");
					this.OnofficeRentalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operationID", DbType="TinyInt")]
		public System.Nullable<byte> operationID
		{
			get
			{
				return this._operationID;
			}
			set
			{
				if ((this._operationID != value))
				{
					this.OnoperationIDChanging(value);
					this.SendPropertyChanging();
					this._operationID = value;
					this.SendPropertyChanged("operationID");
					this.OnoperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationTypeID", DbType="Int")]
		public System.Nullable<int> stationTypeID
		{
			get
			{
				return this._stationTypeID;
			}
			set
			{
				if ((this._stationTypeID != value))
				{
					this.OnstationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._stationTypeID = value;
					this.SendPropertyChanged("stationTypeID");
					this.OnstationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="Int")]
		public System.Nullable<int> corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="Int")]
		public System.Nullable<int> solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_constellationID", DbType="Int")]
		public System.Nullable<int> constellationID
		{
			get
			{
				return this._constellationID;
			}
			set
			{
				if ((this._constellationID != value))
				{
					this.OnconstellationIDChanging(value);
					this.SendPropertyChanging();
					this._constellationID = value;
					this.SendPropertyChanged("constellationID");
					this.OnconstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionID", DbType="Int")]
		public System.Nullable<int> regionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				if ((this._regionID != value))
				{
					this.OnregionIDChanging(value);
					this.SendPropertyChanging();
					this._regionID = value;
					this.SendPropertyChanged("regionID");
					this.OnregionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationName", DbType="NVarChar(100)")]
		public string stationName
		{
			get
			{
				return this._stationName;
			}
			set
			{
				if ((this._stationName != value))
				{
					this.OnstationNameChanging(value);
					this.SendPropertyChanging();
					this._stationName = value;
					this.SendPropertyChanged("stationName");
					this.OnstationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float")]
		public System.Nullable<double> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float")]
		public System.Nullable<double> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float")]
		public System.Nullable<double> z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reprocessingEfficiency", DbType="Float")]
		public System.Nullable<double> reprocessingEfficiency
		{
			get
			{
				return this._reprocessingEfficiency;
			}
			set
			{
				if ((this._reprocessingEfficiency != value))
				{
					this.OnreprocessingEfficiencyChanging(value);
					this.SendPropertyChanging();
					this._reprocessingEfficiency = value;
					this.SendPropertyChanged("reprocessingEfficiency");
					this.OnreprocessingEfficiencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reprocessingStationsTake", DbType="Float")]
		public System.Nullable<double> reprocessingStationsTake
		{
			get
			{
				return this._reprocessingStationsTake;
			}
			set
			{
				if ((this._reprocessingStationsTake != value))
				{
					this.OnreprocessingStationsTakeChanging(value);
					this.SendPropertyChanging();
					this._reprocessingStationsTake = value;
					this.SendPropertyChanged("reprocessingStationsTake");
					this.OnreprocessingStationsTakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reprocessingHangarFlag", DbType="TinyInt")]
		public System.Nullable<byte> reprocessingHangarFlag
		{
			get
			{
				return this._reprocessingHangarFlag;
			}
			set
			{
				if ((this._reprocessingHangarFlag != value))
				{
					this.OnreprocessingHangarFlagChanging(value);
					this.SendPropertyChanging();
					this._reprocessingHangarFlag = value;
					this.SendPropertyChanged("reprocessingHangarFlag");
					this.OnreprocessingHangarFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staStationTypes")]
	public partial class staStationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stationTypeID;
		
		private System.Nullable<double> _dockEntryX;
		
		private System.Nullable<double> _dockEntryY;
		
		private System.Nullable<double> _dockEntryZ;
		
		private System.Nullable<double> _dockOrientationX;
		
		private System.Nullable<double> _dockOrientationY;
		
		private System.Nullable<double> _dockOrientationZ;
		
		private System.Nullable<byte> _operationID;
		
		private System.Nullable<byte> _officeSlots;
		
		private System.Nullable<double> _reprocessingEfficiency;
		
		private System.Nullable<bool> _conquerable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstationTypeIDChanging(int value);
    partial void OnstationTypeIDChanged();
    partial void OndockEntryXChanging(System.Nullable<double> value);
    partial void OndockEntryXChanged();
    partial void OndockEntryYChanging(System.Nullable<double> value);
    partial void OndockEntryYChanged();
    partial void OndockEntryZChanging(System.Nullable<double> value);
    partial void OndockEntryZChanged();
    partial void OndockOrientationXChanging(System.Nullable<double> value);
    partial void OndockOrientationXChanged();
    partial void OndockOrientationYChanging(System.Nullable<double> value);
    partial void OndockOrientationYChanged();
    partial void OndockOrientationZChanging(System.Nullable<double> value);
    partial void OndockOrientationZChanged();
    partial void OnoperationIDChanging(System.Nullable<byte> value);
    partial void OnoperationIDChanged();
    partial void OnofficeSlotsChanging(System.Nullable<byte> value);
    partial void OnofficeSlotsChanged();
    partial void OnreprocessingEfficiencyChanging(System.Nullable<double> value);
    partial void OnreprocessingEfficiencyChanged();
    partial void OnconquerableChanging(System.Nullable<bool> value);
    partial void OnconquerableChanged();
    #endregion
		
		public staStationType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stationTypeID
		{
			get
			{
				return this._stationTypeID;
			}
			set
			{
				if ((this._stationTypeID != value))
				{
					this.OnstationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._stationTypeID = value;
					this.SendPropertyChanged("stationTypeID");
					this.OnstationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dockEntryX", DbType="Float")]
		public System.Nullable<double> dockEntryX
		{
			get
			{
				return this._dockEntryX;
			}
			set
			{
				if ((this._dockEntryX != value))
				{
					this.OndockEntryXChanging(value);
					this.SendPropertyChanging();
					this._dockEntryX = value;
					this.SendPropertyChanged("dockEntryX");
					this.OndockEntryXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dockEntryY", DbType="Float")]
		public System.Nullable<double> dockEntryY
		{
			get
			{
				return this._dockEntryY;
			}
			set
			{
				if ((this._dockEntryY != value))
				{
					this.OndockEntryYChanging(value);
					this.SendPropertyChanging();
					this._dockEntryY = value;
					this.SendPropertyChanged("dockEntryY");
					this.OndockEntryYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dockEntryZ", DbType="Float")]
		public System.Nullable<double> dockEntryZ
		{
			get
			{
				return this._dockEntryZ;
			}
			set
			{
				if ((this._dockEntryZ != value))
				{
					this.OndockEntryZChanging(value);
					this.SendPropertyChanging();
					this._dockEntryZ = value;
					this.SendPropertyChanged("dockEntryZ");
					this.OndockEntryZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dockOrientationX", DbType="Float")]
		public System.Nullable<double> dockOrientationX
		{
			get
			{
				return this._dockOrientationX;
			}
			set
			{
				if ((this._dockOrientationX != value))
				{
					this.OndockOrientationXChanging(value);
					this.SendPropertyChanging();
					this._dockOrientationX = value;
					this.SendPropertyChanged("dockOrientationX");
					this.OndockOrientationXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dockOrientationY", DbType="Float")]
		public System.Nullable<double> dockOrientationY
		{
			get
			{
				return this._dockOrientationY;
			}
			set
			{
				if ((this._dockOrientationY != value))
				{
					this.OndockOrientationYChanging(value);
					this.SendPropertyChanging();
					this._dockOrientationY = value;
					this.SendPropertyChanged("dockOrientationY");
					this.OndockOrientationYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dockOrientationZ", DbType="Float")]
		public System.Nullable<double> dockOrientationZ
		{
			get
			{
				return this._dockOrientationZ;
			}
			set
			{
				if ((this._dockOrientationZ != value))
				{
					this.OndockOrientationZChanging(value);
					this.SendPropertyChanging();
					this._dockOrientationZ = value;
					this.SendPropertyChanged("dockOrientationZ");
					this.OndockOrientationZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operationID", DbType="TinyInt")]
		public System.Nullable<byte> operationID
		{
			get
			{
				return this._operationID;
			}
			set
			{
				if ((this._operationID != value))
				{
					this.OnoperationIDChanging(value);
					this.SendPropertyChanging();
					this._operationID = value;
					this.SendPropertyChanged("operationID");
					this.OnoperationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_officeSlots", DbType="TinyInt")]
		public System.Nullable<byte> officeSlots
		{
			get
			{
				return this._officeSlots;
			}
			set
			{
				if ((this._officeSlots != value))
				{
					this.OnofficeSlotsChanging(value);
					this.SendPropertyChanging();
					this._officeSlots = value;
					this.SendPropertyChanged("officeSlots");
					this.OnofficeSlotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reprocessingEfficiency", DbType="Float")]
		public System.Nullable<double> reprocessingEfficiency
		{
			get
			{
				return this._reprocessingEfficiency;
			}
			set
			{
				if ((this._reprocessingEfficiency != value))
				{
					this.OnreprocessingEfficiencyChanging(value);
					this.SendPropertyChanging();
					this._reprocessingEfficiency = value;
					this.SendPropertyChanged("reprocessingEfficiency");
					this.OnreprocessingEfficiencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conquerable", DbType="Bit")]
		public System.Nullable<bool> conquerable
		{
			get
			{
				return this._conquerable;
			}
			set
			{
				if ((this._conquerable != value))
				{
					this.OnconquerableChanging(value);
					this.SendPropertyChanging();
					this._conquerable = value;
					this.SendPropertyChanged("conquerable");
					this.OnconquerableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnTranslationColumns")]
	public partial class trnTranslationColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<short> _tcGroupID;
		
		private short _tcID;
		
		private string _tableName;
		
		private string _columnName;
		
		private string _masterID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntcGroupIDChanging(System.Nullable<short> value);
    partial void OntcGroupIDChanged();
    partial void OntcIDChanging(short value);
    partial void OntcIDChanged();
    partial void OntableNameChanging(string value);
    partial void OntableNameChanged();
    partial void OncolumnNameChanging(string value);
    partial void OncolumnNameChanged();
    partial void OnmasterIDChanging(string value);
    partial void OnmasterIDChanged();
    #endregion
		
		public trnTranslationColumn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcGroupID", DbType="SmallInt")]
		public System.Nullable<short> tcGroupID
		{
			get
			{
				return this._tcGroupID;
			}
			set
			{
				if ((this._tcGroupID != value))
				{
					this.OntcGroupIDChanging(value);
					this.SendPropertyChanging();
					this._tcGroupID = value;
					this.SendPropertyChanged("tcGroupID");
					this.OntcGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tcID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short tcID
		{
			get
			{
				return this._tcID;
			}
			set
			{
				if ((this._tcID != value))
				{
					this.OntcIDChanging(value);
					this.SendPropertyChanging();
					this._tcID = value;
					this.SendPropertyChanged("tcID");
					this.OntcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string tableName
		{
			get
			{
				return this._tableName;
			}
			set
			{
				if ((this._tableName != value))
				{
					this.OntableNameChanging(value);
					this.SendPropertyChanging();
					this._tableName = value;
					this.SendPropertyChanged("tableName");
					this.OntableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_columnName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string columnName
		{
			get
			{
				return this._columnName;
			}
			set
			{
				if ((this._columnName != value))
				{
					this.OncolumnNameChanging(value);
					this.SendPropertyChanging();
					this._columnName = value;
					this.SendPropertyChanged("columnName");
					this.OncolumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masterID", DbType="NVarChar(128)")]
		public string masterID
		{
			get
			{
				return this._masterID;
			}
			set
			{
				if ((this._masterID != value))
				{
					this.OnmasterIDChanging(value);
					this.SendPropertyChanging();
					this._masterID = value;
					this.SendPropertyChanged("masterID");
					this.OnmasterIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
